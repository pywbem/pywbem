# Additional pip requirements file for pywbem develop.
#
# The order of packages is significant, because pip processes them in the order
# of appearance.
#
# Make sure that the minimum versions required in this file are consistent with
# the minimum versions specified in minimum-constraints.txt.


-r test-requirements.txt

# Direct dependencies:

# Cythonize
Cython>=0.29.22

# Coverage reporting (no imports, invoked via coveralls script):
# We exclude Python 3.4 from coverage testing and reporting.
# coverage 5.0 has removed support for py34
coverage>=5.0; python_version == '2.7' or python_version >= '3.5'
pytest-cov>=2.7.0; python_version == '2.7' or python_version >= '3.5'
# coveralls 2.0 has removed support for Python 2.7 and 3.4
git+https://github.com/andy-maier/coveralls-python.git@andy/add-py27#egg=coveralls; python_version == '2.7'
coveralls>=2.1.2,<3.0.0; python_version >= '3.5'

# version 8.11 requires python 3.6, See issue #2796
more-itertools>=4.0.0,!=8.11.0; python_version < '3.6'
more-itertools>=4.0.0; python_version >= '3.6'

# Safety CI by pyup.io
# safety 1.9.0 removed support for Python 2.7 and 3.4 (and now also enforces that)
safety>=1.8.7,<1.9.0; python_version <= '3.4'
safety>=1.9.0; python_version >= '3.5'
# dparse 0.5.0 has an infinite recursion issue on Python 2.7,
#   see https://github.com/pyupio/dparse/issues/46
# Pip 19.1.1 does not recognize that dparse 0.5.0 has dropped support for Python 3.4
dparse>=0.4.1,<0.5.0; python_version == '2.7'
dparse>=0.4.1,<0.5.0; python_version == '3.4'
dparse>=0.5.1; python_version >= '3.5'

# Tox
tox>=2.5.0

# Sphinx (no imports, invoked via sphinx-build script):
# Keep in sync with rtd-requirements.txt

# Sphinx 2.0.0 removed support for Python 2.7 and 3.4
# Sphinx 4.0.0 breaks autodocsumm and needs to be excluded (issue #2697)
# Sphinx <4.2.0 fails on Python 3.10 because it tries to import non-existing
#   types.Union. This also drives docutils>=0.14.
# Sphinx pins docutils to <0.18 (some versions even to <0.17) but the package
#   version resolver in the pip version used on py27 ignores package dependencies
#   (issue #2787)
Sphinx>=1.7.6,<2.0.0; python_version <= '3.4'
Sphinx>=3.5.4,!=4.0.0; python_version >= '3.5' and python_version <= '3.9'
Sphinx>=4.2.0; python_version >= '3.10'
docutils>=0.13.1,<0.17; python_version == '2.7'
docutils>=0.13.1; python_version >= '3.4' and python_version <= '3.9'
docutils>=0.14; python_version >= '3.10'
sphinx-git>=10.1.1
# GitPython 3.0.0 removed support for Python 2.7
GitPython>=2.1.1,<3.0.0; python_version == '2.7'
GitPython>=2.1.1; python_version >= '3.4'
sphinxcontrib-fulltoc>=1.2.0
sphinxcontrib-websupport>=1.1.2
# Pygments 2.4.0 has removed support for Python 3.4
Pygments>=2.1.3; python_version == '2.7'
Pygments>=2.1.3,<2.4.0; python_version == '3.4'
Pygments>=2.1.3; python_version >= '3.5'
sphinx-rtd-theme>=0.5.0
# autodocsumm before 0.2.5 fails on Python 3.10 with TypeError
autodocsumm>=0.1.13,<0.2.0; python_version == '2.7'
autodocsumm>=0.1.13,<0.2.0; python_version == '3.4'
autodocsumm>=0.1.13; python_version >= '3.5' and python_version <= '3.9'
autodocsumm>=0.2.5; python_version >= '3.10'
# Babel 2.7.0 fixes an ImportError for MutableMapping which starts failing on Python 3.10
Babel>=2.7.0

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 2.7 / astroid 2.5 removed support for py35
# Pylint 2.10.0 / astroid 2.7.2 fixes issues in similarity checker (issues #2672, #2673)
pylint>=2.5.2; python_version == '3.5'
pylint>=2.10.0; python_version >= '3.6'
astroid>=2.4.0; python_version == '3.5'
astroid>=2.7.2; python_version >= '3.6'
typed-ast>=1.4.0,<1.5.0; python_version >= '3.6' and python_version < '3.8' and implementation_name=='cpython'
# Workaround: lazy-object-proxy is used by astroid, and lazy-object-proxy 1.5.0
#   dropped support for py34 but declared it as supported
# Issue #2674: lazy-object-proxy fails installing on macos/py35/minimum, because it uses
#   setuptools-scm for its setup and (up to 1.5.2) does not correctly pin setuptools-scm.
#   Not clear why this does not happen on ubuntu/windows with py35 or on py34.
#   See issue https://github.com/ionelmc/python-lazy-object-proxy/issues/51.
#   This issue is circumvented by not installing pylint/astroid on py35.
#   If and when lazy-object-proxy releases a correctly pinned 1.4.x version,
#   this circumvention can be removed again.
lazy-object-proxy>=1.4.3; python_version >= '3.5'
wrapt>=1.12; python_version >= '3.5'
# isort 5.0.0 removed support for py27,py35
# isort 4.2.8 fixes a pylint issue with false positive on import order of ssl on Windows
# isort 4.3.8 fixes an issue with py310 and works on py310 (Note that isort 5.10.0 has official support for py310)
isort>=4.3.8
# Pylint 2.14 uses tomlkit>=0.10.1 and requires py>=3.7
tomlkit>=0.10.1; python_version >= '3.7'

# Flake8 and dependents (no imports, invoked via flake8 script):
# flake8 3.9.0 has removed support for py34 and pip 19.1.1 on py34 does not deal
# well with its pinned dependencies, so we need to repeat these for py34.
# flake8 4.0.0 fixes an AttributeError on Python 3.10.
# flake8 4.0.0 pins importlib-metadata to <4.3 on Python <3.8. This causes
#   version conflicts with Sphinx>=4.4.0 and virtualenv>=20.0.35
flake8>=3.8.0,<4.0.0; python_version == '2.7'
flake8>=3.8.0,<3.9.0; python_version == '3.4'
flake8>=3.8.0,<4.0.0; python_version >= '3.5' and python_version <= '3.7'
flake8>=3.8.0; python_version >= '3.8' and python_version <= '3.9'
flake8>=4.0.0; python_version >= '3.10'
mccabe>=0.6.0; python_version == '2.7'
mccabe>=0.6.0,<0.7.0; python_version == '3.4'
mccabe>=0.6.0; python_version >= '3.5'
pycodestyle>=2.6.0,<2.8.0; python_version == '2.7'
pycodestyle>=2.6.0a1,<2.7.0; python_version == '3.4'
pycodestyle>=2.6.0; python_version >= '3.5' and python_version <= '3.9'
pycodestyle>=2.8.0; python_version >= '3.10'
pyflakes>=2.2.0,<2.4.0; python_version == '2.7'
pyflakes>=2.2.0,<2.3.0; python_version == '3.4'
pyflakes>=2.2.0; python_version >= '3.5' and python_version <= '3.9'
pyflakes>=2.4.0; python_version >= '3.10'
entrypoints>=0.3.0
functools32>=3.2.3.post2; python_version == '2.7'  # technically: python_version < '3.2'

# Twine (no imports, invoked via twine script):
# twine 2.0.0 removed support for Python < 3.6
twine>=1.8.1,<2.0.0; python_version <= '3.5'
twine>=3.0.0; python_version >= '3.6'

# readme-renderer 25.0 has removed support for Python 3.4
# readme-renderer 23.0 has made cmarkgfm part of extras (it fails on Cygwin)
readme-renderer>=23.0; python_version == '2.7'
readme-renderer>=23.0,<25.0; python_version == '3.4'
readme-renderer>=23.0; python_version >= '3.5'

# Jupyter Notebook (no imports, invoked via jupyter script):
# The jupyter package is not installed on Python 3.4 on Windows, because its
# (indirectly) dependent pywin32 package is not available on Pypi for
# Python 3.4.
jupyter>=1.0.0; python_version != '3.4' or sys_platform != 'win32'
ipython>=5.1.0,<6.0; python_version == '2.7'
ipython>=6.0,<7.0; python_version == '3.4' and sys_platform != 'win32'
ipython>=7.0,<7.10; python_version == '3.5'
ipython>=7.16.3; python_version >= '3.6'
ipykernel>=4.5.2; python_version != '3.4' or sys_platform != 'win32'
ipython_genutils>=0.1.0; python_version != '3.4' or sys_platform != 'win32'
ipywidgets>=5.2.2; python_version != '3.4' or sys_platform != 'win32'
jupyter_console>=5.0.0,<6.0.0; python_version == '2.7'
jupyter_console>=5.0.0,<6.0.0; python_version == '3.4' and sys_platform != 'win32'
jupyter_console>=6.0.0; python_version >= '3.5'
jupyter_client>=4.4.0; python_version != '3.4' or sys_platform != 'win32'
jupyter_core>=4.2.1; python_version != '3.4' or sys_platform != 'win32'
nbconvert>=5.0.0; python_version != '3.4' or sys_platform != 'win32'
nbformat>=4.2.0; python_version != '3.4' or sys_platform != 'win32'
# Notebook 6.1.0 introduced usage of f-strings (which requires py>=3.6) but still required py>=3.5.
notebook>=4.3.1,<6.1.0; python_version == '2.7' and sys_platform != 'win32'
notebook>=4.3.1,<6.1.0; python_version == '3.5' and sys_platform != 'win32'
notebook>=4.3.1; python_version >= '3.6' and sys_platform != 'win32'
pyrsistent>=0.14.0,<0.16.0; python_version == '2.7'
pyrsistent>=0.14.0,<0.15.0; python_version == '3.4' and sys_platform != 'win32'
pyrsistent>=0.14.0; python_version >= '3.5'

# Pywin32 is used (at least?) by jupyter.
# There is no version of pywin32 for py34.
# Pywin32 version 222 is inconsistent in its 32-bit/64-bit support on py37
# Pywin32 version 226 needs to be excluded, see issues #1946 and #1975.
# Issue #2675: Pywin32 version 225+ provides wheel files for py38, but does not
#   advertise py38 on Pypi. That causes pywin32==225 to fail but pywin32>=225
#   to work.
#   Reported to pywin32 as https://github.com/mhammond/pywin32/issues/1448.
#   Addressed by increasing the minimum version of pywin32 to >=227 on Python >=3.8.
# TODO: To circumvent https://github.com/pypa/pip/issues/10701, we exclude
#       py3.10. Remove the circumvention once fixed.
pywin32>=222,!=226; sys_platform == 'win32' and python_version == '2.7'
pywin32>=222,!=226; sys_platform == 'win32' and python_version >= '3.5' and python_version <= '3.6'
pywin32>=223,!=226; sys_platform == 'win32' and python_version == '3.7'
pywin32>=227; sys_platform == 'win32' and python_version >= '3.8' and python_version != '3.10'

# The tornado package is used by ipykernel which is used by jupyter.
# Workaround: Tornado 5.0.0 and 5.0.1 rejects installation if the Python ssl module
#   does not have certain symbols required by Tornado. This issue exists for
#   example with Python 2.7.6 on Ubuntu 14.04, but not with Python 2.7.5 on
#   RHEL 7.4. This can be checked with:
#     python -c "import ssl; ssl.SSLContext; ssl.create_default_context; ssl.match_hostname"
#   Other projects have the same issue:
#     https://github.com/floydhub/dl-docker/issues/84
#   There is no Tornado issue open for this and we do not expect it to be fixed
#   since it only appears on Python 2.
#   This issue has been circumvented by pinning the Tornado version to <5.0 on
#   Python 2.
tornado<5.0; python_version <= '2.7'

# Table output formatter used by the manual performance tests to display
# timing results
tabulate >= 0.8.3

# Performance profiling tools
pyinstrument >=3.0.1
pyinstrument-cext>=0.2.2  # from pyinstrument
# psutil on PyPy needs to be <=5.6.3 to avoid an installation error,
#   see https://github.com/giampaolo/psutil/issues/1659.
# psutil on macos 11.6 needs to be >=5.8.0 to have support for the compiler.
# psutil on windows needs to be >=5.9.0 to have support for the MSVC++ 14.0 compiler.
psutil>=5.9.0; sys_platform != 'cygwin' and platform_python_implementation != 'PyPy'
psutil>=5.6.0,<=5.6.3; sys_platform != 'cygwin' and platform_python_implementation == 'PyPy'

# Package dependency management tools
pipdeptree>=2.2.0
# pip-check-reqs 2.1.1 removed support for Python 2.7 but does not declare that.
# pip-check-reqs 2.0.4 (last version with Python 2.7 support) still uses
#   pip._internal.download which was removed in pip 20.0. That pip version does
#   not yet have proper dependency handling, so we do not install pip-check-reqs
#   on Python 2.7.
# pip-check-reqs 2.3.2 is needed to have proper support for pip>=21.3 and below.
pip-check-reqs>=2.3.2; python_version >= '3.4'

pyzmq>=16.0.4; python_version <= '3.8'
pyzmq>=20.0.0; python_version >= '3.9'

# Indirect dependencies are not specified in this file unless constraints are needed.

# bleach is used by nbconvert and readme-renderer
# bleach 3.1.3 removed support for Python 3.4
# bleach 3.1.1 addressed safety issue 38546
# bleach 3.1.1 addressed safety issue 37910
# bleach 3.1.2 addressed safety issue 38076
# bleach 3.1.4 addressed safety issue 38107
# bleach 3.3.0 addressed dependabot issue GHSA-vv2x-vrpj-qqpq
bleach>=3.3.0; python_version == '2.7'
bleach>=3.1.2,<3.1.3; python_version == '3.4'
bleach>=3.3.0; python_version >= '3.5'

# pywinpty is used by terminado <- notebook <- jupyter
# pywinpty does not declare supported Pyrthon versions and 1.0 has removed support for py27.
# pywinpty 1.0 requires maturin which requires py>=3.6 and on py>=3.7 it fails installation
#   with missing winpty.h, see https://stackoverflow.com/q/51260909
pywinpty>=0.5,<1.0; os_name == "nt"
