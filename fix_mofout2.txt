MOF repository: Namespace root/cimv2 in WBEM server http://192.168.3.135
Executing in dry-run mode
Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> mofSpecification
Rule 1     mofSpecification -> mofProductionList
Rule 2     mofProductionList -> empty
Rule 3     mofProductionList -> mofProductionList mofProduction
Rule 4     mofProduction -> compilerDirective
Rule 5     mofProduction -> mp_createClass
Rule 6     mofProduction -> mp_setQualifier
Rule 7     mofProduction -> mp_createInstance
Rule 8     mp_createClass -> classDeclaration
Rule 9     mp_createInstance -> instanceDeclaration
Rule 10    mp_setQualifier -> qualifierDeclaration
Rule 11    compilerDirective -> # PRAGMA pragmaName ( pragmaParameter )
Rule 12    pragmaName -> identifier
Rule 13    pragmaParameter -> stringValue
Rule 14    classDeclaration -> CLASS className { classFeatureList } ;
Rule 15    classDeclaration -> CLASS className superClass { classFeatureList } ;
Rule 16    classDeclaration -> CLASS className alias { classFeatureList } ;
Rule 17    classDeclaration -> CLASS className alias superClass { classFeatureList } ;
Rule 18    classDeclaration -> qualifierList CLASS className { classFeatureList } ;
Rule 19    classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ;
Rule 20    classDeclaration -> qualifierList CLASS className alias { classFeatureList } ;
Rule 21    classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ;
Rule 22    classFeatureList -> empty
Rule 23    classFeatureList -> classFeatureList classFeature
Rule 24    qualifierListEmpty -> empty
Rule 25    qualifierListEmpty -> qualifierListEmpty , qualifier
Rule 26    className -> identifier
Rule 27    alias -> AS aliasIdentifier
Rule 28    aliasIdentifier -> $ identifier
Rule 29    superClass -> : className
Rule 30    classFeature -> propertyDeclaration
Rule 31    classFeature -> methodDeclaration
Rule 32    classFeature -> referenceDeclaration
Rule 33    qualifierList -> [ qualifier qualifierListEmpty ]
Rule 34    qualifier -> qualifierName
Rule 35    qualifier -> qualifierName : flavorList
Rule 36    qualifier -> qualifierName qualifierParameter
Rule 37    qualifier -> qualifierName qualifierParameter : flavorList
Rule 38    flavorList -> flavor
Rule 39    flavorList -> flavorList flavor
Rule 40    qualifierParameter -> ( constantValue )
Rule 41    qualifierParameter -> arrayInitializer
Rule 42    flavor -> ENABLEOVERRIDE
Rule 43    flavor -> DISABLEOVERRIDE
Rule 44    flavor -> RESTRICTED
Rule 45    flavor -> TOSUBCLASS
Rule 46    flavor -> TOINSTANCE
Rule 47    flavor -> TRANSLATABLE
Rule 48    propertyDeclaration -> propertyDeclaration_1
Rule 49    propertyDeclaration -> propertyDeclaration_2
Rule 50    propertyDeclaration -> propertyDeclaration_3
Rule 51    propertyDeclaration -> propertyDeclaration_4
Rule 52    propertyDeclaration -> propertyDeclaration_5
Rule 53    propertyDeclaration -> propertyDeclaration_6
Rule 54    propertyDeclaration -> propertyDeclaration_7
Rule 55    propertyDeclaration -> propertyDeclaration_8
Rule 56    propertyDeclaration_1 -> dataType propertyName ;
Rule 57    propertyDeclaration_2 -> dataType propertyName defaultValue ;
Rule 58    propertyDeclaration_3 -> dataType propertyName array ;
Rule 59    propertyDeclaration_4 -> dataType propertyName array defaultValue ;
Rule 60    propertyDeclaration_5 -> qualifierList dataType propertyName ;
Rule 61    propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ;
Rule 62    propertyDeclaration_7 -> qualifierList dataType propertyName array ;
Rule 63    propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ;
Rule 64    referenceDeclaration -> objectRef referenceName ;
Rule 65    referenceDeclaration -> objectRef referenceName defaultValue ;
Rule 66    referenceDeclaration -> qualifierList objectRef referenceName ;
Rule 67    referenceDeclaration -> qualifierList objectRef referenceName defaultValue ;
Rule 68    methodDeclaration -> dataType methodName ( ) ;
Rule 69    methodDeclaration -> dataType methodName ( parameterList ) ;
Rule 70    methodDeclaration -> qualifierList dataType methodName ( ) ;
Rule 71    methodDeclaration -> qualifierList dataType methodName ( parameterList ) ;
Rule 72    propertyName -> identifier
Rule 73    referenceName -> identifier
Rule 74    methodName -> identifier
Rule 75    dataType -> DT_UINT8
Rule 76    dataType -> DT_SINT8
Rule 77    dataType -> DT_UINT16
Rule 78    dataType -> DT_SINT16
Rule 79    dataType -> DT_UINT32
Rule 80    dataType -> DT_SINT32
Rule 81    dataType -> DT_UINT64
Rule 82    dataType -> DT_SINT64
Rule 83    dataType -> DT_REAL32
Rule 84    dataType -> DT_REAL64
Rule 85    dataType -> DT_CHAR16
Rule 86    dataType -> DT_STR
Rule 87    dataType -> DT_BOOL
Rule 88    dataType -> DT_DATETIME
Rule 89    objectRef -> className REF
Rule 90    parameterList -> parameter
Rule 91    parameterList -> parameterList , parameter
Rule 92    parameter -> parameter_1
Rule 93    parameter -> parameter_2
Rule 94    parameter -> parameter_3
Rule 95    parameter -> parameter_4
Rule 96    parameter_1 -> dataType parameterName
Rule 97    parameter_1 -> dataType parameterName array
Rule 98    parameter_2 -> qualifierList dataType parameterName
Rule 99    parameter_2 -> qualifierList dataType parameterName array
Rule 100   parameter_3 -> objectRef parameterName
Rule 101   parameter_3 -> objectRef parameterName array
Rule 102   parameter_4 -> qualifierList objectRef parameterName
Rule 103   parameter_4 -> qualifierList objectRef parameterName array
Rule 104   parameterName -> identifier
Rule 105   array -> [ ]
Rule 106   array -> [ integerValue ]
Rule 107   defaultValue -> = initializer
Rule 108   initializer -> constantValue
Rule 109   initializer -> arrayInitializer
Rule 110   initializer -> referenceInitializer
Rule 111   arrayInitializer -> { constantValueList }
Rule 112   arrayInitializer -> { }
Rule 113   constantValueList -> constantValue
Rule 114   constantValueList -> constantValueList , constantValue
Rule 115   stringValueList -> stringValue
Rule 116   stringValueList -> stringValueList stringValue
Rule 117   constantValue -> integerValue
Rule 118   constantValue -> floatValue
Rule 119   constantValue -> charValue
Rule 120   constantValue -> stringValueList
Rule 121   constantValue -> booleanValue
Rule 122   constantValue -> nullValue
Rule 123   integerValue -> binaryValue
Rule 124   integerValue -> octalValue
Rule 125   integerValue -> decimalValue
Rule 126   integerValue -> hexValue
Rule 127   referenceInitializer -> objectHandle
Rule 128   referenceInitializer -> aliasIdentifier
Rule 129   objectHandle -> identifier
Rule 130   qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ;
Rule 131   qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ;
Rule 132   qualifierName -> identifier
Rule 133   qualifierName -> ASSOCIATION
Rule 134   qualifierName -> INDICATION
Rule 135   qualifierType -> qualifierType_1
Rule 136   qualifierType -> qualifierType_2
Rule 137   qualifierType_1 -> : dataType array
Rule 138   qualifierType_1 -> : dataType array defaultValue
Rule 139   qualifierType_2 -> : dataType
Rule 140   qualifierType_2 -> : dataType defaultValue
Rule 141   scope -> , SCOPE ( metaElementList )
Rule 142   metaElementList -> metaElement
Rule 143   metaElementList -> metaElementList , metaElement
Rule 144   metaElement -> SCHEMA
Rule 145   metaElement -> CLASS
Rule 146   metaElement -> ASSOCIATION
Rule 147   metaElement -> INDICATION
Rule 148   metaElement -> QUALIFIER
Rule 149   metaElement -> PROPERTY
Rule 150   metaElement -> REFERENCE
Rule 151   metaElement -> METHOD
Rule 152   metaElement -> PARAMETER
Rule 153   metaElement -> ANY
Rule 154   defaultFlavor -> , FLAVOR ( flavorListWithComma )
Rule 155   flavorListWithComma -> flavor
Rule 156   flavorListWithComma -> flavorListWithComma , flavor
Rule 157   instanceDeclaration -> INSTANCE OF className { valueInitializerList } ;
Rule 158   instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ;
Rule 159   instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ;
Rule 160   instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ;
Rule 161   valueInitializerList -> valueInitializer
Rule 162   valueInitializerList -> valueInitializerList valueInitializer
Rule 163   valueInitializer -> identifier defaultValue ;
Rule 164   valueInitializer -> qualifierList identifier defaultValue ;
Rule 165   booleanValue -> FALSE
Rule 166   booleanValue -> TRUE
Rule 167   nullValue -> NULL
Rule 168   identifier -> IDENTIFIER
Rule 169   identifier -> ANY
Rule 170   identifier -> AS
Rule 171   identifier -> CLASS
Rule 172   identifier -> DISABLEOVERRIDE
Rule 173   identifier -> dataType
Rule 174   identifier -> ENABLEOVERRIDE
Rule 175   identifier -> FLAVOR
Rule 176   identifier -> INSTANCE
Rule 177   identifier -> METHOD
Rule 178   identifier -> OF
Rule 179   identifier -> PARAMETER
Rule 180   identifier -> PRAGMA
Rule 181   identifier -> PROPERTY
Rule 182   identifier -> QUALIFIER
Rule 183   identifier -> REFERENCE
Rule 184   identifier -> RESTRICTED
Rule 185   identifier -> SCHEMA
Rule 186   identifier -> SCOPE
Rule 187   identifier -> TOSUBCLASS
Rule 188   identifier -> TOINSTANCE
Rule 189   identifier -> TRANSLATABLE
Rule 190   empty -> <empty>

Terminals, with rules where they appear

#                    : 11
$                    : 28
(                    : 11 40 68 69 70 71 141 154
)                    : 11 40 68 69 70 71 141 154
,                    : 25 91 114 141 143 154 156
:                    : 29 35 37 137 138 139 140
;                    : 14 15 16 17 18 19 20 21 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 130 131 157 158 159 160 163 164
=                    : 107
ANY                  : 153 169
AS                   : 27 170
ASSOCIATION          : 133 146
CLASS                : 14 15 16 17 18 19 20 21 145 171
DISABLEOVERRIDE      : 43 172
DT_BOOL              : 87
DT_CHAR16            : 85
DT_DATETIME          : 88
DT_REAL32            : 83
DT_REAL64            : 84
DT_SINT16            : 78
DT_SINT32            : 80
DT_SINT64            : 82
DT_SINT8             : 76
DT_STR               : 86
DT_UINT16            : 77
DT_UINT32            : 79
DT_UINT64            : 81
DT_UINT8             : 75
ENABLEOVERRIDE       : 42 174
FALSE                : 165
FLAVOR               : 154 175
IDENTIFIER           : 168
INDICATION           : 134 147
INSTANCE             : 157 158 159 160 176
METHOD               : 151 177
NULL                 : 167
OF                   : 157 158 159 160 178
PARAMETER            : 152 179
PRAGMA               : 11 180
PROPERTY             : 149 181
QUALIFIER            : 130 131 148 182
REF                  : 89
REFERENCE            : 150 183
RESTRICTED           : 44 184
SCHEMA               : 144 185
SCOPE                : 141 186
TOINSTANCE           : 46 188
TOSUBCLASS           : 45 187
TRANSLATABLE         : 47 189
TRUE                 : 166
[                    : 33 105 106
]                    : 33 105 106
binaryValue          : 123
charValue            : 119
decimalValue         : 125
error                : 
floatValue           : 118
hexValue             : 126
octalValue           : 124
stringValue          : 13 115 116
{                    : 14 15 16 17 18 19 20 21 111 112 157 158 159 160
}                    : 14 15 16 17 18 19 20 21 111 112 157 158 159 160

Nonterminals, with rules where they appear

alias                : 16 17 20 21 158 160
aliasIdentifier      : 27 128
array                : 58 59 62 63 97 99 101 103 137 138
arrayInitializer     : 41 109
booleanValue         : 121
classDeclaration     : 8
classFeature         : 23
classFeatureList     : 14 15 16 17 18 19 20 21 23
className            : 14 15 16 17 18 19 20 21 29 89 157 158 159 160
compilerDirective    : 4
constantValue        : 40 108 113 114
constantValueList    : 111 114
dataType             : 56 57 58 59 60 61 62 63 68 69 70 71 96 97 98 99 137 138 139 140 173
defaultFlavor        : 131
defaultValue         : 57 59 61 63 65 67 138 140 163 164
empty                : 2 22 24
flavor               : 38 39 155 156
flavorList           : 35 37 39
flavorListWithComma  : 154 156
identifier           : 12 26 28 72 73 74 104 129 132 163 164
initializer          : 107
instanceDeclaration  : 9
integerValue         : 106 117
metaElement          : 142 143
metaElementList      : 141 143
methodDeclaration    : 31
methodName           : 68 69 70 71
mofProduction        : 3
mofProductionList    : 1 3
mofSpecification     : 0
mp_createClass       : 5
mp_createInstance    : 7
mp_setQualifier      : 6
nullValue            : 122
objectHandle         : 127
objectRef            : 64 65 66 67 100 101 102 103
parameter            : 90 91
parameterList        : 69 71 91
parameterName        : 96 97 98 99 100 101 102 103
parameter_1          : 92
parameter_2          : 93
parameter_3          : 94
parameter_4          : 95
pragmaName           : 11
pragmaParameter      : 11
propertyDeclaration  : 30
propertyDeclaration_1 : 48
propertyDeclaration_2 : 49
propertyDeclaration_3 : 50
propertyDeclaration_4 : 51
propertyDeclaration_5 : 52
propertyDeclaration_6 : 53
propertyDeclaration_7 : 54
propertyDeclaration_8 : 55
propertyName         : 56 57 58 59 60 61 62 63
qualifier            : 25 33
qualifierDeclaration : 10
qualifierList        : 18 19 20 21 60 61 62 63 66 67 70 71 98 99 102 103 159 160 164
qualifierListEmpty   : 25 33
qualifierName        : 34 35 36 37 130 131
qualifierParameter   : 36 37
qualifierType        : 130 131
qualifierType_1      : 135
qualifierType_2      : 136
referenceDeclaration : 32
referenceInitializer : 110
referenceName        : 64 65 66 67
scope                : 130 131
stringValueList      : 116 120
superClass           : 15 17 19 21
valueInitializer     : 161 162
valueInitializerList : 157 158 159 160 162

Generating LALR tables
Parsing method: LALR

state 0

    (0) S' -> . mofSpecification
    (1) mofSpecification -> . mofProductionList
    (2) mofProductionList -> . empty
    (3) mofProductionList -> . mofProductionList mofProduction
    (190) empty -> .

    #               reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    $end            reduce using rule 190 (empty -> .)

    mofSpecification               shift and go to state 1
    mofProductionList              shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> mofSpecification .



state 2

    (1) mofSpecification -> mofProductionList .
    (3) mofProductionList -> mofProductionList . mofProduction
    (4) mofProduction -> . compilerDirective
    (5) mofProduction -> . mp_createClass
    (6) mofProduction -> . mp_setQualifier
    (7) mofProduction -> . mp_createInstance
    (11) compilerDirective -> . # PRAGMA pragmaName ( pragmaParameter )
    (8) mp_createClass -> . classDeclaration
    (10) mp_setQualifier -> . qualifierDeclaration
    (9) mp_createInstance -> . instanceDeclaration
    (14) classDeclaration -> . CLASS className { classFeatureList } ;
    (15) classDeclaration -> . CLASS className superClass { classFeatureList } ;
    (16) classDeclaration -> . CLASS className alias { classFeatureList } ;
    (17) classDeclaration -> . CLASS className alias superClass { classFeatureList } ;
    (18) classDeclaration -> . qualifierList CLASS className { classFeatureList } ;
    (19) classDeclaration -> . qualifierList CLASS className superClass { classFeatureList } ;
    (20) classDeclaration -> . qualifierList CLASS className alias { classFeatureList } ;
    (21) classDeclaration -> . qualifierList CLASS className alias superClass { classFeatureList } ;
    (130) qualifierDeclaration -> . QUALIFIER qualifierName qualifierType scope ;
    (131) qualifierDeclaration -> . QUALIFIER qualifierName qualifierType scope defaultFlavor ;
    (157) instanceDeclaration -> . INSTANCE OF className { valueInitializerList } ;
    (158) instanceDeclaration -> . INSTANCE OF className alias { valueInitializerList } ;
    (159) instanceDeclaration -> . qualifierList INSTANCE OF className { valueInitializerList } ;
    (160) instanceDeclaration -> . qualifierList INSTANCE OF className alias { valueInitializerList } ;
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]

    $end            reduce using rule 1 (mofSpecification -> mofProductionList .)
    #               shift and go to state 9
    CLASS           shift and go to state 13
    QUALIFIER       shift and go to state 15
    INSTANCE        shift and go to state 16
    [               shift and go to state 17

    mofProduction                  shift and go to state 4
    compilerDirective              shift and go to state 5
    mp_createClass                 shift and go to state 6
    mp_setQualifier                shift and go to state 7
    mp_createInstance              shift and go to state 8
    classDeclaration               shift and go to state 10
    qualifierDeclaration           shift and go to state 11
    instanceDeclaration            shift and go to state 12
    qualifierList                  shift and go to state 14

state 3

    (2) mofProductionList -> empty .

    #               reduce using rule 2 (mofProductionList -> empty .)
    CLASS           reduce using rule 2 (mofProductionList -> empty .)
    QUALIFIER       reduce using rule 2 (mofProductionList -> empty .)
    INSTANCE        reduce using rule 2 (mofProductionList -> empty .)
    [               reduce using rule 2 (mofProductionList -> empty .)
    $end            reduce using rule 2 (mofProductionList -> empty .)


state 4

    (3) mofProductionList -> mofProductionList mofProduction .

    #               reduce using rule 3 (mofProductionList -> mofProductionList mofProduction .)
    CLASS           reduce using rule 3 (mofProductionList -> mofProductionList mofProduction .)
    QUALIFIER       reduce using rule 3 (mofProductionList -> mofProductionList mofProduction .)
    INSTANCE        reduce using rule 3 (mofProductionList -> mofProductionList mofProduction .)
    [               reduce using rule 3 (mofProductionList -> mofProductionList mofProduction .)
    $end            reduce using rule 3 (mofProductionList -> mofProductionList mofProduction .)


state 5

    (4) mofProduction -> compilerDirective .

    #               reduce using rule 4 (mofProduction -> compilerDirective .)
    CLASS           reduce using rule 4 (mofProduction -> compilerDirective .)
    QUALIFIER       reduce using rule 4 (mofProduction -> compilerDirective .)
    INSTANCE        reduce using rule 4 (mofProduction -> compilerDirective .)
    [               reduce using rule 4 (mofProduction -> compilerDirective .)
    $end            reduce using rule 4 (mofProduction -> compilerDirective .)


state 6

    (5) mofProduction -> mp_createClass .

    #               reduce using rule 5 (mofProduction -> mp_createClass .)
    CLASS           reduce using rule 5 (mofProduction -> mp_createClass .)
    QUALIFIER       reduce using rule 5 (mofProduction -> mp_createClass .)
    INSTANCE        reduce using rule 5 (mofProduction -> mp_createClass .)
    [               reduce using rule 5 (mofProduction -> mp_createClass .)
    $end            reduce using rule 5 (mofProduction -> mp_createClass .)


state 7

    (6) mofProduction -> mp_setQualifier .

    #               reduce using rule 6 (mofProduction -> mp_setQualifier .)
    CLASS           reduce using rule 6 (mofProduction -> mp_setQualifier .)
    QUALIFIER       reduce using rule 6 (mofProduction -> mp_setQualifier .)
    INSTANCE        reduce using rule 6 (mofProduction -> mp_setQualifier .)
    [               reduce using rule 6 (mofProduction -> mp_setQualifier .)
    $end            reduce using rule 6 (mofProduction -> mp_setQualifier .)


state 8

    (7) mofProduction -> mp_createInstance .

    #               reduce using rule 7 (mofProduction -> mp_createInstance .)
    CLASS           reduce using rule 7 (mofProduction -> mp_createInstance .)
    QUALIFIER       reduce using rule 7 (mofProduction -> mp_createInstance .)
    INSTANCE        reduce using rule 7 (mofProduction -> mp_createInstance .)
    [               reduce using rule 7 (mofProduction -> mp_createInstance .)
    $end            reduce using rule 7 (mofProduction -> mp_createInstance .)


state 9

    (11) compilerDirective -> # . PRAGMA pragmaName ( pragmaParameter )

    PRAGMA          shift and go to state 18


state 10

    (8) mp_createClass -> classDeclaration .

    #               reduce using rule 8 (mp_createClass -> classDeclaration .)
    CLASS           reduce using rule 8 (mp_createClass -> classDeclaration .)
    QUALIFIER       reduce using rule 8 (mp_createClass -> classDeclaration .)
    INSTANCE        reduce using rule 8 (mp_createClass -> classDeclaration .)
    [               reduce using rule 8 (mp_createClass -> classDeclaration .)
    $end            reduce using rule 8 (mp_createClass -> classDeclaration .)


state 11

    (10) mp_setQualifier -> qualifierDeclaration .

    #               reduce using rule 10 (mp_setQualifier -> qualifierDeclaration .)
    CLASS           reduce using rule 10 (mp_setQualifier -> qualifierDeclaration .)
    QUALIFIER       reduce using rule 10 (mp_setQualifier -> qualifierDeclaration .)
    INSTANCE        reduce using rule 10 (mp_setQualifier -> qualifierDeclaration .)
    [               reduce using rule 10 (mp_setQualifier -> qualifierDeclaration .)
    $end            reduce using rule 10 (mp_setQualifier -> qualifierDeclaration .)


state 12

    (9) mp_createInstance -> instanceDeclaration .

    #               reduce using rule 9 (mp_createInstance -> instanceDeclaration .)
    CLASS           reduce using rule 9 (mp_createInstance -> instanceDeclaration .)
    QUALIFIER       reduce using rule 9 (mp_createInstance -> instanceDeclaration .)
    INSTANCE        reduce using rule 9 (mp_createInstance -> instanceDeclaration .)
    [               reduce using rule 9 (mp_createInstance -> instanceDeclaration .)
    $end            reduce using rule 9 (mp_createInstance -> instanceDeclaration .)


state 13

    (14) classDeclaration -> CLASS . className { classFeatureList } ;
    (15) classDeclaration -> CLASS . className superClass { classFeatureList } ;
    (16) classDeclaration -> CLASS . className alias { classFeatureList } ;
    (17) classDeclaration -> CLASS . className alias superClass { classFeatureList } ;
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    className                      shift and go to state 20
    identifier                     shift and go to state 21
    dataType                       shift and go to state 26

state 14

    (18) classDeclaration -> qualifierList . CLASS className { classFeatureList } ;
    (19) classDeclaration -> qualifierList . CLASS className superClass { classFeatureList } ;
    (20) classDeclaration -> qualifierList . CLASS className alias { classFeatureList } ;
    (21) classDeclaration -> qualifierList . CLASS className alias superClass { classFeatureList } ;
    (159) instanceDeclaration -> qualifierList . INSTANCE OF className { valueInitializerList } ;
    (160) instanceDeclaration -> qualifierList . INSTANCE OF className alias { valueInitializerList } ;

    CLASS           shift and go to state 57
    INSTANCE        shift and go to state 58


state 15

    (130) qualifierDeclaration -> QUALIFIER . qualifierName qualifierType scope ;
    (131) qualifierDeclaration -> QUALIFIER . qualifierName qualifierType scope defaultFlavor ;
    (132) qualifierName -> . identifier
    (133) qualifierName -> . ASSOCIATION
    (134) qualifierName -> . INDICATION
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    ASSOCIATION     shift and go to state 61
    INDICATION      shift and go to state 62
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifierName                  shift and go to state 59
    identifier                     shift and go to state 60
    dataType                       shift and go to state 26

state 16

    (157) instanceDeclaration -> INSTANCE . OF className { valueInitializerList } ;
    (158) instanceDeclaration -> INSTANCE . OF className alias { valueInitializerList } ;

    OF              shift and go to state 63


state 17

    (33) qualifierList -> [ . qualifier qualifierListEmpty ]
    (34) qualifier -> . qualifierName
    (35) qualifier -> . qualifierName : flavorList
    (36) qualifier -> . qualifierName qualifierParameter
    (37) qualifier -> . qualifierName qualifierParameter : flavorList
    (132) qualifierName -> . identifier
    (133) qualifierName -> . ASSOCIATION
    (134) qualifierName -> . INDICATION
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    ASSOCIATION     shift and go to state 61
    INDICATION      shift and go to state 62
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifier                      shift and go to state 64
    qualifierName                  shift and go to state 65
    identifier                     shift and go to state 60
    dataType                       shift and go to state 26

state 18

    (11) compilerDirective -> # PRAGMA . pragmaName ( pragmaParameter )
    (12) pragmaName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    pragmaName                     shift and go to state 66
    identifier                     shift and go to state 67
    dataType                       shift and go to state 26

state 19

    (171) identifier -> CLASS .

    {               reduce using rule 171 (identifier -> CLASS .)
    :               reduce using rule 171 (identifier -> CLASS .)
    AS              reduce using rule 171 (identifier -> CLASS .)
    (               reduce using rule 171 (identifier -> CLASS .)
    ]               reduce using rule 171 (identifier -> CLASS .)
    ,               reduce using rule 171 (identifier -> CLASS .)
    REF             reduce using rule 171 (identifier -> CLASS .)
    ;               reduce using rule 171 (identifier -> CLASS .)
    =               reduce using rule 171 (identifier -> CLASS .)
    [               reduce using rule 171 (identifier -> CLASS .)
    )               reduce using rule 171 (identifier -> CLASS .)


state 20

    (14) classDeclaration -> CLASS className . { classFeatureList } ;
    (15) classDeclaration -> CLASS className . superClass { classFeatureList } ;
    (16) classDeclaration -> CLASS className . alias { classFeatureList } ;
    (17) classDeclaration -> CLASS className . alias superClass { classFeatureList } ;
    (29) superClass -> . : className
    (27) alias -> . AS aliasIdentifier

    {               shift and go to state 68
    :               shift and go to state 71
    AS              shift and go to state 72

    superClass                     shift and go to state 69
    alias                          shift and go to state 70

state 21

    (26) className -> identifier .

    {               reduce using rule 26 (className -> identifier .)
    :               reduce using rule 26 (className -> identifier .)
    AS              reduce using rule 26 (className -> identifier .)
    REF             reduce using rule 26 (className -> identifier .)


state 22

    (168) identifier -> IDENTIFIER .

    {               reduce using rule 168 (identifier -> IDENTIFIER .)
    :               reduce using rule 168 (identifier -> IDENTIFIER .)
    AS              reduce using rule 168 (identifier -> IDENTIFIER .)
    (               reduce using rule 168 (identifier -> IDENTIFIER .)
    ]               reduce using rule 168 (identifier -> IDENTIFIER .)
    ,               reduce using rule 168 (identifier -> IDENTIFIER .)
    REF             reduce using rule 168 (identifier -> IDENTIFIER .)
    ;               reduce using rule 168 (identifier -> IDENTIFIER .)
    =               reduce using rule 168 (identifier -> IDENTIFIER .)
    [               reduce using rule 168 (identifier -> IDENTIFIER .)
    )               reduce using rule 168 (identifier -> IDENTIFIER .)


state 23

    (169) identifier -> ANY .

    {               reduce using rule 169 (identifier -> ANY .)
    :               reduce using rule 169 (identifier -> ANY .)
    AS              reduce using rule 169 (identifier -> ANY .)
    (               reduce using rule 169 (identifier -> ANY .)
    ]               reduce using rule 169 (identifier -> ANY .)
    ,               reduce using rule 169 (identifier -> ANY .)
    REF             reduce using rule 169 (identifier -> ANY .)
    ;               reduce using rule 169 (identifier -> ANY .)
    =               reduce using rule 169 (identifier -> ANY .)
    [               reduce using rule 169 (identifier -> ANY .)
    )               reduce using rule 169 (identifier -> ANY .)


state 24

    (170) identifier -> AS .

    {               reduce using rule 170 (identifier -> AS .)
    :               reduce using rule 170 (identifier -> AS .)
    AS              reduce using rule 170 (identifier -> AS .)
    (               reduce using rule 170 (identifier -> AS .)
    ]               reduce using rule 170 (identifier -> AS .)
    ,               reduce using rule 170 (identifier -> AS .)
    REF             reduce using rule 170 (identifier -> AS .)
    ;               reduce using rule 170 (identifier -> AS .)
    =               reduce using rule 170 (identifier -> AS .)
    [               reduce using rule 170 (identifier -> AS .)
    )               reduce using rule 170 (identifier -> AS .)


state 25

    (172) identifier -> DISABLEOVERRIDE .

    {               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    :               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    AS              reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    (               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    ]               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    ,               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    REF             reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    ;               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    =               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    [               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)
    )               reduce using rule 172 (identifier -> DISABLEOVERRIDE .)


state 26

    (173) identifier -> dataType .

    {               reduce using rule 173 (identifier -> dataType .)
    :               reduce using rule 173 (identifier -> dataType .)
    AS              reduce using rule 173 (identifier -> dataType .)
    (               reduce using rule 173 (identifier -> dataType .)
    ]               reduce using rule 173 (identifier -> dataType .)
    ,               reduce using rule 173 (identifier -> dataType .)
    ;               reduce using rule 173 (identifier -> dataType .)
    =               reduce using rule 173 (identifier -> dataType .)
    [               reduce using rule 173 (identifier -> dataType .)
    )               reduce using rule 173 (identifier -> dataType .)


state 27

    (174) identifier -> ENABLEOVERRIDE .

    {               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    :               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    AS              reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    (               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    ]               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    ,               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    REF             reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    ;               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    =               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    [               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)
    )               reduce using rule 174 (identifier -> ENABLEOVERRIDE .)


state 28

    (175) identifier -> FLAVOR .

    {               reduce using rule 175 (identifier -> FLAVOR .)
    :               reduce using rule 175 (identifier -> FLAVOR .)
    AS              reduce using rule 175 (identifier -> FLAVOR .)
    (               reduce using rule 175 (identifier -> FLAVOR .)
    ]               reduce using rule 175 (identifier -> FLAVOR .)
    ,               reduce using rule 175 (identifier -> FLAVOR .)
    REF             reduce using rule 175 (identifier -> FLAVOR .)
    ;               reduce using rule 175 (identifier -> FLAVOR .)
    =               reduce using rule 175 (identifier -> FLAVOR .)
    [               reduce using rule 175 (identifier -> FLAVOR .)
    )               reduce using rule 175 (identifier -> FLAVOR .)


state 29

    (176) identifier -> INSTANCE .

    {               reduce using rule 176 (identifier -> INSTANCE .)
    :               reduce using rule 176 (identifier -> INSTANCE .)
    AS              reduce using rule 176 (identifier -> INSTANCE .)
    (               reduce using rule 176 (identifier -> INSTANCE .)
    ]               reduce using rule 176 (identifier -> INSTANCE .)
    ,               reduce using rule 176 (identifier -> INSTANCE .)
    REF             reduce using rule 176 (identifier -> INSTANCE .)
    ;               reduce using rule 176 (identifier -> INSTANCE .)
    =               reduce using rule 176 (identifier -> INSTANCE .)
    [               reduce using rule 176 (identifier -> INSTANCE .)
    )               reduce using rule 176 (identifier -> INSTANCE .)


state 30

    (177) identifier -> METHOD .

    {               reduce using rule 177 (identifier -> METHOD .)
    :               reduce using rule 177 (identifier -> METHOD .)
    AS              reduce using rule 177 (identifier -> METHOD .)
    (               reduce using rule 177 (identifier -> METHOD .)
    ]               reduce using rule 177 (identifier -> METHOD .)
    ,               reduce using rule 177 (identifier -> METHOD .)
    REF             reduce using rule 177 (identifier -> METHOD .)
    ;               reduce using rule 177 (identifier -> METHOD .)
    =               reduce using rule 177 (identifier -> METHOD .)
    [               reduce using rule 177 (identifier -> METHOD .)
    )               reduce using rule 177 (identifier -> METHOD .)


state 31

    (178) identifier -> OF .

    {               reduce using rule 178 (identifier -> OF .)
    :               reduce using rule 178 (identifier -> OF .)
    AS              reduce using rule 178 (identifier -> OF .)
    (               reduce using rule 178 (identifier -> OF .)
    ]               reduce using rule 178 (identifier -> OF .)
    ,               reduce using rule 178 (identifier -> OF .)
    REF             reduce using rule 178 (identifier -> OF .)
    ;               reduce using rule 178 (identifier -> OF .)
    =               reduce using rule 178 (identifier -> OF .)
    [               reduce using rule 178 (identifier -> OF .)
    )               reduce using rule 178 (identifier -> OF .)


state 32

    (179) identifier -> PARAMETER .

    {               reduce using rule 179 (identifier -> PARAMETER .)
    :               reduce using rule 179 (identifier -> PARAMETER .)
    AS              reduce using rule 179 (identifier -> PARAMETER .)
    (               reduce using rule 179 (identifier -> PARAMETER .)
    ]               reduce using rule 179 (identifier -> PARAMETER .)
    ,               reduce using rule 179 (identifier -> PARAMETER .)
    REF             reduce using rule 179 (identifier -> PARAMETER .)
    ;               reduce using rule 179 (identifier -> PARAMETER .)
    =               reduce using rule 179 (identifier -> PARAMETER .)
    [               reduce using rule 179 (identifier -> PARAMETER .)
    )               reduce using rule 179 (identifier -> PARAMETER .)


state 33

    (180) identifier -> PRAGMA .

    {               reduce using rule 180 (identifier -> PRAGMA .)
    :               reduce using rule 180 (identifier -> PRAGMA .)
    AS              reduce using rule 180 (identifier -> PRAGMA .)
    (               reduce using rule 180 (identifier -> PRAGMA .)
    ]               reduce using rule 180 (identifier -> PRAGMA .)
    ,               reduce using rule 180 (identifier -> PRAGMA .)
    REF             reduce using rule 180 (identifier -> PRAGMA .)
    ;               reduce using rule 180 (identifier -> PRAGMA .)
    =               reduce using rule 180 (identifier -> PRAGMA .)
    [               reduce using rule 180 (identifier -> PRAGMA .)
    )               reduce using rule 180 (identifier -> PRAGMA .)


state 34

    (181) identifier -> PROPERTY .

    {               reduce using rule 181 (identifier -> PROPERTY .)
    :               reduce using rule 181 (identifier -> PROPERTY .)
    AS              reduce using rule 181 (identifier -> PROPERTY .)
    (               reduce using rule 181 (identifier -> PROPERTY .)
    ]               reduce using rule 181 (identifier -> PROPERTY .)
    ,               reduce using rule 181 (identifier -> PROPERTY .)
    REF             reduce using rule 181 (identifier -> PROPERTY .)
    ;               reduce using rule 181 (identifier -> PROPERTY .)
    =               reduce using rule 181 (identifier -> PROPERTY .)
    [               reduce using rule 181 (identifier -> PROPERTY .)
    )               reduce using rule 181 (identifier -> PROPERTY .)


state 35

    (182) identifier -> QUALIFIER .

    {               reduce using rule 182 (identifier -> QUALIFIER .)
    :               reduce using rule 182 (identifier -> QUALIFIER .)
    AS              reduce using rule 182 (identifier -> QUALIFIER .)
    (               reduce using rule 182 (identifier -> QUALIFIER .)
    ]               reduce using rule 182 (identifier -> QUALIFIER .)
    ,               reduce using rule 182 (identifier -> QUALIFIER .)
    REF             reduce using rule 182 (identifier -> QUALIFIER .)
    ;               reduce using rule 182 (identifier -> QUALIFIER .)
    =               reduce using rule 182 (identifier -> QUALIFIER .)
    [               reduce using rule 182 (identifier -> QUALIFIER .)
    )               reduce using rule 182 (identifier -> QUALIFIER .)


state 36

    (183) identifier -> REFERENCE .

    {               reduce using rule 183 (identifier -> REFERENCE .)
    :               reduce using rule 183 (identifier -> REFERENCE .)
    AS              reduce using rule 183 (identifier -> REFERENCE .)
    (               reduce using rule 183 (identifier -> REFERENCE .)
    ]               reduce using rule 183 (identifier -> REFERENCE .)
    ,               reduce using rule 183 (identifier -> REFERENCE .)
    REF             reduce using rule 183 (identifier -> REFERENCE .)
    ;               reduce using rule 183 (identifier -> REFERENCE .)
    =               reduce using rule 183 (identifier -> REFERENCE .)
    [               reduce using rule 183 (identifier -> REFERENCE .)
    )               reduce using rule 183 (identifier -> REFERENCE .)


state 37

    (184) identifier -> RESTRICTED .

    {               reduce using rule 184 (identifier -> RESTRICTED .)
    :               reduce using rule 184 (identifier -> RESTRICTED .)
    AS              reduce using rule 184 (identifier -> RESTRICTED .)
    (               reduce using rule 184 (identifier -> RESTRICTED .)
    ]               reduce using rule 184 (identifier -> RESTRICTED .)
    ,               reduce using rule 184 (identifier -> RESTRICTED .)
    REF             reduce using rule 184 (identifier -> RESTRICTED .)
    ;               reduce using rule 184 (identifier -> RESTRICTED .)
    =               reduce using rule 184 (identifier -> RESTRICTED .)
    [               reduce using rule 184 (identifier -> RESTRICTED .)
    )               reduce using rule 184 (identifier -> RESTRICTED .)


state 38

    (185) identifier -> SCHEMA .

    {               reduce using rule 185 (identifier -> SCHEMA .)
    :               reduce using rule 185 (identifier -> SCHEMA .)
    AS              reduce using rule 185 (identifier -> SCHEMA .)
    (               reduce using rule 185 (identifier -> SCHEMA .)
    ]               reduce using rule 185 (identifier -> SCHEMA .)
    ,               reduce using rule 185 (identifier -> SCHEMA .)
    REF             reduce using rule 185 (identifier -> SCHEMA .)
    ;               reduce using rule 185 (identifier -> SCHEMA .)
    =               reduce using rule 185 (identifier -> SCHEMA .)
    [               reduce using rule 185 (identifier -> SCHEMA .)
    )               reduce using rule 185 (identifier -> SCHEMA .)


state 39

    (186) identifier -> SCOPE .

    {               reduce using rule 186 (identifier -> SCOPE .)
    :               reduce using rule 186 (identifier -> SCOPE .)
    AS              reduce using rule 186 (identifier -> SCOPE .)
    (               reduce using rule 186 (identifier -> SCOPE .)
    ]               reduce using rule 186 (identifier -> SCOPE .)
    ,               reduce using rule 186 (identifier -> SCOPE .)
    REF             reduce using rule 186 (identifier -> SCOPE .)
    ;               reduce using rule 186 (identifier -> SCOPE .)
    =               reduce using rule 186 (identifier -> SCOPE .)
    [               reduce using rule 186 (identifier -> SCOPE .)
    )               reduce using rule 186 (identifier -> SCOPE .)


state 40

    (187) identifier -> TOSUBCLASS .

    {               reduce using rule 187 (identifier -> TOSUBCLASS .)
    :               reduce using rule 187 (identifier -> TOSUBCLASS .)
    AS              reduce using rule 187 (identifier -> TOSUBCLASS .)
    (               reduce using rule 187 (identifier -> TOSUBCLASS .)
    ]               reduce using rule 187 (identifier -> TOSUBCLASS .)
    ,               reduce using rule 187 (identifier -> TOSUBCLASS .)
    REF             reduce using rule 187 (identifier -> TOSUBCLASS .)
    ;               reduce using rule 187 (identifier -> TOSUBCLASS .)
    =               reduce using rule 187 (identifier -> TOSUBCLASS .)
    [               reduce using rule 187 (identifier -> TOSUBCLASS .)
    )               reduce using rule 187 (identifier -> TOSUBCLASS .)


state 41

    (188) identifier -> TOINSTANCE .

    {               reduce using rule 188 (identifier -> TOINSTANCE .)
    :               reduce using rule 188 (identifier -> TOINSTANCE .)
    AS              reduce using rule 188 (identifier -> TOINSTANCE .)
    (               reduce using rule 188 (identifier -> TOINSTANCE .)
    ]               reduce using rule 188 (identifier -> TOINSTANCE .)
    ,               reduce using rule 188 (identifier -> TOINSTANCE .)
    REF             reduce using rule 188 (identifier -> TOINSTANCE .)
    ;               reduce using rule 188 (identifier -> TOINSTANCE .)
    =               reduce using rule 188 (identifier -> TOINSTANCE .)
    [               reduce using rule 188 (identifier -> TOINSTANCE .)
    )               reduce using rule 188 (identifier -> TOINSTANCE .)


state 42

    (189) identifier -> TRANSLATABLE .

    {               reduce using rule 189 (identifier -> TRANSLATABLE .)
    :               reduce using rule 189 (identifier -> TRANSLATABLE .)
    AS              reduce using rule 189 (identifier -> TRANSLATABLE .)
    (               reduce using rule 189 (identifier -> TRANSLATABLE .)
    ]               reduce using rule 189 (identifier -> TRANSLATABLE .)
    ,               reduce using rule 189 (identifier -> TRANSLATABLE .)
    REF             reduce using rule 189 (identifier -> TRANSLATABLE .)
    ;               reduce using rule 189 (identifier -> TRANSLATABLE .)
    =               reduce using rule 189 (identifier -> TRANSLATABLE .)
    [               reduce using rule 189 (identifier -> TRANSLATABLE .)
    )               reduce using rule 189 (identifier -> TRANSLATABLE .)


state 43

    (75) dataType -> DT_UINT8 .

    {               reduce using rule 75 (dataType -> DT_UINT8 .)
    :               reduce using rule 75 (dataType -> DT_UINT8 .)
    AS              reduce using rule 75 (dataType -> DT_UINT8 .)
    (               reduce using rule 75 (dataType -> DT_UINT8 .)
    ]               reduce using rule 75 (dataType -> DT_UINT8 .)
    ,               reduce using rule 75 (dataType -> DT_UINT8 .)
    [               reduce using rule 75 (dataType -> DT_UINT8 .)
    =               reduce using rule 75 (dataType -> DT_UINT8 .)
    IDENTIFIER      reduce using rule 75 (dataType -> DT_UINT8 .)
    ANY             reduce using rule 75 (dataType -> DT_UINT8 .)
    CLASS           reduce using rule 75 (dataType -> DT_UINT8 .)
    DISABLEOVERRIDE reduce using rule 75 (dataType -> DT_UINT8 .)
    ENABLEOVERRIDE  reduce using rule 75 (dataType -> DT_UINT8 .)
    FLAVOR          reduce using rule 75 (dataType -> DT_UINT8 .)
    INSTANCE        reduce using rule 75 (dataType -> DT_UINT8 .)
    METHOD          reduce using rule 75 (dataType -> DT_UINT8 .)
    OF              reduce using rule 75 (dataType -> DT_UINT8 .)
    PARAMETER       reduce using rule 75 (dataType -> DT_UINT8 .)
    PRAGMA          reduce using rule 75 (dataType -> DT_UINT8 .)
    PROPERTY        reduce using rule 75 (dataType -> DT_UINT8 .)
    QUALIFIER       reduce using rule 75 (dataType -> DT_UINT8 .)
    REFERENCE       reduce using rule 75 (dataType -> DT_UINT8 .)
    RESTRICTED      reduce using rule 75 (dataType -> DT_UINT8 .)
    SCHEMA          reduce using rule 75 (dataType -> DT_UINT8 .)
    SCOPE           reduce using rule 75 (dataType -> DT_UINT8 .)
    TOSUBCLASS      reduce using rule 75 (dataType -> DT_UINT8 .)
    TOINSTANCE      reduce using rule 75 (dataType -> DT_UINT8 .)
    TRANSLATABLE    reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_UINT8        reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_SINT8        reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_UINT16       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_SINT16       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_UINT32       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_SINT32       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_UINT64       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_SINT64       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_REAL32       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_REAL64       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_CHAR16       reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_STR          reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_BOOL         reduce using rule 75 (dataType -> DT_UINT8 .)
    DT_DATETIME     reduce using rule 75 (dataType -> DT_UINT8 .)
    REF             reduce using rule 75 (dataType -> DT_UINT8 .)
    ;               reduce using rule 75 (dataType -> DT_UINT8 .)
    )               reduce using rule 75 (dataType -> DT_UINT8 .)


state 44

    (76) dataType -> DT_SINT8 .

    {               reduce using rule 76 (dataType -> DT_SINT8 .)
    :               reduce using rule 76 (dataType -> DT_SINT8 .)
    AS              reduce using rule 76 (dataType -> DT_SINT8 .)
    (               reduce using rule 76 (dataType -> DT_SINT8 .)
    ]               reduce using rule 76 (dataType -> DT_SINT8 .)
    ,               reduce using rule 76 (dataType -> DT_SINT8 .)
    [               reduce using rule 76 (dataType -> DT_SINT8 .)
    =               reduce using rule 76 (dataType -> DT_SINT8 .)
    IDENTIFIER      reduce using rule 76 (dataType -> DT_SINT8 .)
    ANY             reduce using rule 76 (dataType -> DT_SINT8 .)
    CLASS           reduce using rule 76 (dataType -> DT_SINT8 .)
    DISABLEOVERRIDE reduce using rule 76 (dataType -> DT_SINT8 .)
    ENABLEOVERRIDE  reduce using rule 76 (dataType -> DT_SINT8 .)
    FLAVOR          reduce using rule 76 (dataType -> DT_SINT8 .)
    INSTANCE        reduce using rule 76 (dataType -> DT_SINT8 .)
    METHOD          reduce using rule 76 (dataType -> DT_SINT8 .)
    OF              reduce using rule 76 (dataType -> DT_SINT8 .)
    PARAMETER       reduce using rule 76 (dataType -> DT_SINT8 .)
    PRAGMA          reduce using rule 76 (dataType -> DT_SINT8 .)
    PROPERTY        reduce using rule 76 (dataType -> DT_SINT8 .)
    QUALIFIER       reduce using rule 76 (dataType -> DT_SINT8 .)
    REFERENCE       reduce using rule 76 (dataType -> DT_SINT8 .)
    RESTRICTED      reduce using rule 76 (dataType -> DT_SINT8 .)
    SCHEMA          reduce using rule 76 (dataType -> DT_SINT8 .)
    SCOPE           reduce using rule 76 (dataType -> DT_SINT8 .)
    TOSUBCLASS      reduce using rule 76 (dataType -> DT_SINT8 .)
    TOINSTANCE      reduce using rule 76 (dataType -> DT_SINT8 .)
    TRANSLATABLE    reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_UINT8        reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_SINT8        reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_UINT16       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_SINT16       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_UINT32       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_SINT32       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_UINT64       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_SINT64       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_REAL32       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_REAL64       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_CHAR16       reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_STR          reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_BOOL         reduce using rule 76 (dataType -> DT_SINT8 .)
    DT_DATETIME     reduce using rule 76 (dataType -> DT_SINT8 .)
    REF             reduce using rule 76 (dataType -> DT_SINT8 .)
    ;               reduce using rule 76 (dataType -> DT_SINT8 .)
    )               reduce using rule 76 (dataType -> DT_SINT8 .)


state 45

    (77) dataType -> DT_UINT16 .

    {               reduce using rule 77 (dataType -> DT_UINT16 .)
    :               reduce using rule 77 (dataType -> DT_UINT16 .)
    AS              reduce using rule 77 (dataType -> DT_UINT16 .)
    (               reduce using rule 77 (dataType -> DT_UINT16 .)
    ]               reduce using rule 77 (dataType -> DT_UINT16 .)
    ,               reduce using rule 77 (dataType -> DT_UINT16 .)
    [               reduce using rule 77 (dataType -> DT_UINT16 .)
    =               reduce using rule 77 (dataType -> DT_UINT16 .)
    IDENTIFIER      reduce using rule 77 (dataType -> DT_UINT16 .)
    ANY             reduce using rule 77 (dataType -> DT_UINT16 .)
    CLASS           reduce using rule 77 (dataType -> DT_UINT16 .)
    DISABLEOVERRIDE reduce using rule 77 (dataType -> DT_UINT16 .)
    ENABLEOVERRIDE  reduce using rule 77 (dataType -> DT_UINT16 .)
    FLAVOR          reduce using rule 77 (dataType -> DT_UINT16 .)
    INSTANCE        reduce using rule 77 (dataType -> DT_UINT16 .)
    METHOD          reduce using rule 77 (dataType -> DT_UINT16 .)
    OF              reduce using rule 77 (dataType -> DT_UINT16 .)
    PARAMETER       reduce using rule 77 (dataType -> DT_UINT16 .)
    PRAGMA          reduce using rule 77 (dataType -> DT_UINT16 .)
    PROPERTY        reduce using rule 77 (dataType -> DT_UINT16 .)
    QUALIFIER       reduce using rule 77 (dataType -> DT_UINT16 .)
    REFERENCE       reduce using rule 77 (dataType -> DT_UINT16 .)
    RESTRICTED      reduce using rule 77 (dataType -> DT_UINT16 .)
    SCHEMA          reduce using rule 77 (dataType -> DT_UINT16 .)
    SCOPE           reduce using rule 77 (dataType -> DT_UINT16 .)
    TOSUBCLASS      reduce using rule 77 (dataType -> DT_UINT16 .)
    TOINSTANCE      reduce using rule 77 (dataType -> DT_UINT16 .)
    TRANSLATABLE    reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_UINT8        reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_SINT8        reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_UINT16       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_SINT16       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_UINT32       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_SINT32       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_UINT64       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_SINT64       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_REAL32       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_REAL64       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_CHAR16       reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_STR          reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_BOOL         reduce using rule 77 (dataType -> DT_UINT16 .)
    DT_DATETIME     reduce using rule 77 (dataType -> DT_UINT16 .)
    REF             reduce using rule 77 (dataType -> DT_UINT16 .)
    ;               reduce using rule 77 (dataType -> DT_UINT16 .)
    )               reduce using rule 77 (dataType -> DT_UINT16 .)


state 46

    (78) dataType -> DT_SINT16 .

    {               reduce using rule 78 (dataType -> DT_SINT16 .)
    :               reduce using rule 78 (dataType -> DT_SINT16 .)
    AS              reduce using rule 78 (dataType -> DT_SINT16 .)
    (               reduce using rule 78 (dataType -> DT_SINT16 .)
    ]               reduce using rule 78 (dataType -> DT_SINT16 .)
    ,               reduce using rule 78 (dataType -> DT_SINT16 .)
    [               reduce using rule 78 (dataType -> DT_SINT16 .)
    =               reduce using rule 78 (dataType -> DT_SINT16 .)
    IDENTIFIER      reduce using rule 78 (dataType -> DT_SINT16 .)
    ANY             reduce using rule 78 (dataType -> DT_SINT16 .)
    CLASS           reduce using rule 78 (dataType -> DT_SINT16 .)
    DISABLEOVERRIDE reduce using rule 78 (dataType -> DT_SINT16 .)
    ENABLEOVERRIDE  reduce using rule 78 (dataType -> DT_SINT16 .)
    FLAVOR          reduce using rule 78 (dataType -> DT_SINT16 .)
    INSTANCE        reduce using rule 78 (dataType -> DT_SINT16 .)
    METHOD          reduce using rule 78 (dataType -> DT_SINT16 .)
    OF              reduce using rule 78 (dataType -> DT_SINT16 .)
    PARAMETER       reduce using rule 78 (dataType -> DT_SINT16 .)
    PRAGMA          reduce using rule 78 (dataType -> DT_SINT16 .)
    PROPERTY        reduce using rule 78 (dataType -> DT_SINT16 .)
    QUALIFIER       reduce using rule 78 (dataType -> DT_SINT16 .)
    REFERENCE       reduce using rule 78 (dataType -> DT_SINT16 .)
    RESTRICTED      reduce using rule 78 (dataType -> DT_SINT16 .)
    SCHEMA          reduce using rule 78 (dataType -> DT_SINT16 .)
    SCOPE           reduce using rule 78 (dataType -> DT_SINT16 .)
    TOSUBCLASS      reduce using rule 78 (dataType -> DT_SINT16 .)
    TOINSTANCE      reduce using rule 78 (dataType -> DT_SINT16 .)
    TRANSLATABLE    reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_UINT8        reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_SINT8        reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_UINT16       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_SINT16       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_UINT32       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_SINT32       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_UINT64       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_SINT64       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_REAL32       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_REAL64       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_CHAR16       reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_STR          reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_BOOL         reduce using rule 78 (dataType -> DT_SINT16 .)
    DT_DATETIME     reduce using rule 78 (dataType -> DT_SINT16 .)
    REF             reduce using rule 78 (dataType -> DT_SINT16 .)
    ;               reduce using rule 78 (dataType -> DT_SINT16 .)
    )               reduce using rule 78 (dataType -> DT_SINT16 .)


state 47

    (79) dataType -> DT_UINT32 .

    {               reduce using rule 79 (dataType -> DT_UINT32 .)
    :               reduce using rule 79 (dataType -> DT_UINT32 .)
    AS              reduce using rule 79 (dataType -> DT_UINT32 .)
    (               reduce using rule 79 (dataType -> DT_UINT32 .)
    ]               reduce using rule 79 (dataType -> DT_UINT32 .)
    ,               reduce using rule 79 (dataType -> DT_UINT32 .)
    [               reduce using rule 79 (dataType -> DT_UINT32 .)
    =               reduce using rule 79 (dataType -> DT_UINT32 .)
    IDENTIFIER      reduce using rule 79 (dataType -> DT_UINT32 .)
    ANY             reduce using rule 79 (dataType -> DT_UINT32 .)
    CLASS           reduce using rule 79 (dataType -> DT_UINT32 .)
    DISABLEOVERRIDE reduce using rule 79 (dataType -> DT_UINT32 .)
    ENABLEOVERRIDE  reduce using rule 79 (dataType -> DT_UINT32 .)
    FLAVOR          reduce using rule 79 (dataType -> DT_UINT32 .)
    INSTANCE        reduce using rule 79 (dataType -> DT_UINT32 .)
    METHOD          reduce using rule 79 (dataType -> DT_UINT32 .)
    OF              reduce using rule 79 (dataType -> DT_UINT32 .)
    PARAMETER       reduce using rule 79 (dataType -> DT_UINT32 .)
    PRAGMA          reduce using rule 79 (dataType -> DT_UINT32 .)
    PROPERTY        reduce using rule 79 (dataType -> DT_UINT32 .)
    QUALIFIER       reduce using rule 79 (dataType -> DT_UINT32 .)
    REFERENCE       reduce using rule 79 (dataType -> DT_UINT32 .)
    RESTRICTED      reduce using rule 79 (dataType -> DT_UINT32 .)
    SCHEMA          reduce using rule 79 (dataType -> DT_UINT32 .)
    SCOPE           reduce using rule 79 (dataType -> DT_UINT32 .)
    TOSUBCLASS      reduce using rule 79 (dataType -> DT_UINT32 .)
    TOINSTANCE      reduce using rule 79 (dataType -> DT_UINT32 .)
    TRANSLATABLE    reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_UINT8        reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_SINT8        reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_UINT16       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_SINT16       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_UINT32       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_SINT32       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_UINT64       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_SINT64       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_REAL32       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_REAL64       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_CHAR16       reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_STR          reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_BOOL         reduce using rule 79 (dataType -> DT_UINT32 .)
    DT_DATETIME     reduce using rule 79 (dataType -> DT_UINT32 .)
    REF             reduce using rule 79 (dataType -> DT_UINT32 .)
    ;               reduce using rule 79 (dataType -> DT_UINT32 .)
    )               reduce using rule 79 (dataType -> DT_UINT32 .)


state 48

    (80) dataType -> DT_SINT32 .

    {               reduce using rule 80 (dataType -> DT_SINT32 .)
    :               reduce using rule 80 (dataType -> DT_SINT32 .)
    AS              reduce using rule 80 (dataType -> DT_SINT32 .)
    (               reduce using rule 80 (dataType -> DT_SINT32 .)
    ]               reduce using rule 80 (dataType -> DT_SINT32 .)
    ,               reduce using rule 80 (dataType -> DT_SINT32 .)
    [               reduce using rule 80 (dataType -> DT_SINT32 .)
    =               reduce using rule 80 (dataType -> DT_SINT32 .)
    IDENTIFIER      reduce using rule 80 (dataType -> DT_SINT32 .)
    ANY             reduce using rule 80 (dataType -> DT_SINT32 .)
    CLASS           reduce using rule 80 (dataType -> DT_SINT32 .)
    DISABLEOVERRIDE reduce using rule 80 (dataType -> DT_SINT32 .)
    ENABLEOVERRIDE  reduce using rule 80 (dataType -> DT_SINT32 .)
    FLAVOR          reduce using rule 80 (dataType -> DT_SINT32 .)
    INSTANCE        reduce using rule 80 (dataType -> DT_SINT32 .)
    METHOD          reduce using rule 80 (dataType -> DT_SINT32 .)
    OF              reduce using rule 80 (dataType -> DT_SINT32 .)
    PARAMETER       reduce using rule 80 (dataType -> DT_SINT32 .)
    PRAGMA          reduce using rule 80 (dataType -> DT_SINT32 .)
    PROPERTY        reduce using rule 80 (dataType -> DT_SINT32 .)
    QUALIFIER       reduce using rule 80 (dataType -> DT_SINT32 .)
    REFERENCE       reduce using rule 80 (dataType -> DT_SINT32 .)
    RESTRICTED      reduce using rule 80 (dataType -> DT_SINT32 .)
    SCHEMA          reduce using rule 80 (dataType -> DT_SINT32 .)
    SCOPE           reduce using rule 80 (dataType -> DT_SINT32 .)
    TOSUBCLASS      reduce using rule 80 (dataType -> DT_SINT32 .)
    TOINSTANCE      reduce using rule 80 (dataType -> DT_SINT32 .)
    TRANSLATABLE    reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_UINT8        reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_SINT8        reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_UINT16       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_SINT16       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_UINT32       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_SINT32       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_UINT64       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_SINT64       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_REAL32       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_REAL64       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_CHAR16       reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_STR          reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_BOOL         reduce using rule 80 (dataType -> DT_SINT32 .)
    DT_DATETIME     reduce using rule 80 (dataType -> DT_SINT32 .)
    REF             reduce using rule 80 (dataType -> DT_SINT32 .)
    ;               reduce using rule 80 (dataType -> DT_SINT32 .)
    )               reduce using rule 80 (dataType -> DT_SINT32 .)


state 49

    (81) dataType -> DT_UINT64 .

    {               reduce using rule 81 (dataType -> DT_UINT64 .)
    :               reduce using rule 81 (dataType -> DT_UINT64 .)
    AS              reduce using rule 81 (dataType -> DT_UINT64 .)
    (               reduce using rule 81 (dataType -> DT_UINT64 .)
    ]               reduce using rule 81 (dataType -> DT_UINT64 .)
    ,               reduce using rule 81 (dataType -> DT_UINT64 .)
    [               reduce using rule 81 (dataType -> DT_UINT64 .)
    =               reduce using rule 81 (dataType -> DT_UINT64 .)
    IDENTIFIER      reduce using rule 81 (dataType -> DT_UINT64 .)
    ANY             reduce using rule 81 (dataType -> DT_UINT64 .)
    CLASS           reduce using rule 81 (dataType -> DT_UINT64 .)
    DISABLEOVERRIDE reduce using rule 81 (dataType -> DT_UINT64 .)
    ENABLEOVERRIDE  reduce using rule 81 (dataType -> DT_UINT64 .)
    FLAVOR          reduce using rule 81 (dataType -> DT_UINT64 .)
    INSTANCE        reduce using rule 81 (dataType -> DT_UINT64 .)
    METHOD          reduce using rule 81 (dataType -> DT_UINT64 .)
    OF              reduce using rule 81 (dataType -> DT_UINT64 .)
    PARAMETER       reduce using rule 81 (dataType -> DT_UINT64 .)
    PRAGMA          reduce using rule 81 (dataType -> DT_UINT64 .)
    PROPERTY        reduce using rule 81 (dataType -> DT_UINT64 .)
    QUALIFIER       reduce using rule 81 (dataType -> DT_UINT64 .)
    REFERENCE       reduce using rule 81 (dataType -> DT_UINT64 .)
    RESTRICTED      reduce using rule 81 (dataType -> DT_UINT64 .)
    SCHEMA          reduce using rule 81 (dataType -> DT_UINT64 .)
    SCOPE           reduce using rule 81 (dataType -> DT_UINT64 .)
    TOSUBCLASS      reduce using rule 81 (dataType -> DT_UINT64 .)
    TOINSTANCE      reduce using rule 81 (dataType -> DT_UINT64 .)
    TRANSLATABLE    reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_UINT8        reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_SINT8        reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_UINT16       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_SINT16       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_UINT32       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_SINT32       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_UINT64       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_SINT64       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_REAL32       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_REAL64       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_CHAR16       reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_STR          reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_BOOL         reduce using rule 81 (dataType -> DT_UINT64 .)
    DT_DATETIME     reduce using rule 81 (dataType -> DT_UINT64 .)
    REF             reduce using rule 81 (dataType -> DT_UINT64 .)
    ;               reduce using rule 81 (dataType -> DT_UINT64 .)
    )               reduce using rule 81 (dataType -> DT_UINT64 .)


state 50

    (82) dataType -> DT_SINT64 .

    {               reduce using rule 82 (dataType -> DT_SINT64 .)
    :               reduce using rule 82 (dataType -> DT_SINT64 .)
    AS              reduce using rule 82 (dataType -> DT_SINT64 .)
    (               reduce using rule 82 (dataType -> DT_SINT64 .)
    ]               reduce using rule 82 (dataType -> DT_SINT64 .)
    ,               reduce using rule 82 (dataType -> DT_SINT64 .)
    [               reduce using rule 82 (dataType -> DT_SINT64 .)
    =               reduce using rule 82 (dataType -> DT_SINT64 .)
    IDENTIFIER      reduce using rule 82 (dataType -> DT_SINT64 .)
    ANY             reduce using rule 82 (dataType -> DT_SINT64 .)
    CLASS           reduce using rule 82 (dataType -> DT_SINT64 .)
    DISABLEOVERRIDE reduce using rule 82 (dataType -> DT_SINT64 .)
    ENABLEOVERRIDE  reduce using rule 82 (dataType -> DT_SINT64 .)
    FLAVOR          reduce using rule 82 (dataType -> DT_SINT64 .)
    INSTANCE        reduce using rule 82 (dataType -> DT_SINT64 .)
    METHOD          reduce using rule 82 (dataType -> DT_SINT64 .)
    OF              reduce using rule 82 (dataType -> DT_SINT64 .)
    PARAMETER       reduce using rule 82 (dataType -> DT_SINT64 .)
    PRAGMA          reduce using rule 82 (dataType -> DT_SINT64 .)
    PROPERTY        reduce using rule 82 (dataType -> DT_SINT64 .)
    QUALIFIER       reduce using rule 82 (dataType -> DT_SINT64 .)
    REFERENCE       reduce using rule 82 (dataType -> DT_SINT64 .)
    RESTRICTED      reduce using rule 82 (dataType -> DT_SINT64 .)
    SCHEMA          reduce using rule 82 (dataType -> DT_SINT64 .)
    SCOPE           reduce using rule 82 (dataType -> DT_SINT64 .)
    TOSUBCLASS      reduce using rule 82 (dataType -> DT_SINT64 .)
    TOINSTANCE      reduce using rule 82 (dataType -> DT_SINT64 .)
    TRANSLATABLE    reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_UINT8        reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_SINT8        reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_UINT16       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_SINT16       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_UINT32       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_SINT32       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_UINT64       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_SINT64       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_REAL32       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_REAL64       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_CHAR16       reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_STR          reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_BOOL         reduce using rule 82 (dataType -> DT_SINT64 .)
    DT_DATETIME     reduce using rule 82 (dataType -> DT_SINT64 .)
    REF             reduce using rule 82 (dataType -> DT_SINT64 .)
    ;               reduce using rule 82 (dataType -> DT_SINT64 .)
    )               reduce using rule 82 (dataType -> DT_SINT64 .)


state 51

    (83) dataType -> DT_REAL32 .

    {               reduce using rule 83 (dataType -> DT_REAL32 .)
    :               reduce using rule 83 (dataType -> DT_REAL32 .)
    AS              reduce using rule 83 (dataType -> DT_REAL32 .)
    (               reduce using rule 83 (dataType -> DT_REAL32 .)
    ]               reduce using rule 83 (dataType -> DT_REAL32 .)
    ,               reduce using rule 83 (dataType -> DT_REAL32 .)
    [               reduce using rule 83 (dataType -> DT_REAL32 .)
    =               reduce using rule 83 (dataType -> DT_REAL32 .)
    IDENTIFIER      reduce using rule 83 (dataType -> DT_REAL32 .)
    ANY             reduce using rule 83 (dataType -> DT_REAL32 .)
    CLASS           reduce using rule 83 (dataType -> DT_REAL32 .)
    DISABLEOVERRIDE reduce using rule 83 (dataType -> DT_REAL32 .)
    ENABLEOVERRIDE  reduce using rule 83 (dataType -> DT_REAL32 .)
    FLAVOR          reduce using rule 83 (dataType -> DT_REAL32 .)
    INSTANCE        reduce using rule 83 (dataType -> DT_REAL32 .)
    METHOD          reduce using rule 83 (dataType -> DT_REAL32 .)
    OF              reduce using rule 83 (dataType -> DT_REAL32 .)
    PARAMETER       reduce using rule 83 (dataType -> DT_REAL32 .)
    PRAGMA          reduce using rule 83 (dataType -> DT_REAL32 .)
    PROPERTY        reduce using rule 83 (dataType -> DT_REAL32 .)
    QUALIFIER       reduce using rule 83 (dataType -> DT_REAL32 .)
    REFERENCE       reduce using rule 83 (dataType -> DT_REAL32 .)
    RESTRICTED      reduce using rule 83 (dataType -> DT_REAL32 .)
    SCHEMA          reduce using rule 83 (dataType -> DT_REAL32 .)
    SCOPE           reduce using rule 83 (dataType -> DT_REAL32 .)
    TOSUBCLASS      reduce using rule 83 (dataType -> DT_REAL32 .)
    TOINSTANCE      reduce using rule 83 (dataType -> DT_REAL32 .)
    TRANSLATABLE    reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_UINT8        reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_SINT8        reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_UINT16       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_SINT16       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_UINT32       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_SINT32       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_UINT64       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_SINT64       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_REAL32       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_REAL64       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_CHAR16       reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_STR          reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_BOOL         reduce using rule 83 (dataType -> DT_REAL32 .)
    DT_DATETIME     reduce using rule 83 (dataType -> DT_REAL32 .)
    REF             reduce using rule 83 (dataType -> DT_REAL32 .)
    ;               reduce using rule 83 (dataType -> DT_REAL32 .)
    )               reduce using rule 83 (dataType -> DT_REAL32 .)


state 52

    (84) dataType -> DT_REAL64 .

    {               reduce using rule 84 (dataType -> DT_REAL64 .)
    :               reduce using rule 84 (dataType -> DT_REAL64 .)
    AS              reduce using rule 84 (dataType -> DT_REAL64 .)
    (               reduce using rule 84 (dataType -> DT_REAL64 .)
    ]               reduce using rule 84 (dataType -> DT_REAL64 .)
    ,               reduce using rule 84 (dataType -> DT_REAL64 .)
    [               reduce using rule 84 (dataType -> DT_REAL64 .)
    =               reduce using rule 84 (dataType -> DT_REAL64 .)
    IDENTIFIER      reduce using rule 84 (dataType -> DT_REAL64 .)
    ANY             reduce using rule 84 (dataType -> DT_REAL64 .)
    CLASS           reduce using rule 84 (dataType -> DT_REAL64 .)
    DISABLEOVERRIDE reduce using rule 84 (dataType -> DT_REAL64 .)
    ENABLEOVERRIDE  reduce using rule 84 (dataType -> DT_REAL64 .)
    FLAVOR          reduce using rule 84 (dataType -> DT_REAL64 .)
    INSTANCE        reduce using rule 84 (dataType -> DT_REAL64 .)
    METHOD          reduce using rule 84 (dataType -> DT_REAL64 .)
    OF              reduce using rule 84 (dataType -> DT_REAL64 .)
    PARAMETER       reduce using rule 84 (dataType -> DT_REAL64 .)
    PRAGMA          reduce using rule 84 (dataType -> DT_REAL64 .)
    PROPERTY        reduce using rule 84 (dataType -> DT_REAL64 .)
    QUALIFIER       reduce using rule 84 (dataType -> DT_REAL64 .)
    REFERENCE       reduce using rule 84 (dataType -> DT_REAL64 .)
    RESTRICTED      reduce using rule 84 (dataType -> DT_REAL64 .)
    SCHEMA          reduce using rule 84 (dataType -> DT_REAL64 .)
    SCOPE           reduce using rule 84 (dataType -> DT_REAL64 .)
    TOSUBCLASS      reduce using rule 84 (dataType -> DT_REAL64 .)
    TOINSTANCE      reduce using rule 84 (dataType -> DT_REAL64 .)
    TRANSLATABLE    reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_UINT8        reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_SINT8        reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_UINT16       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_SINT16       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_UINT32       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_SINT32       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_UINT64       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_SINT64       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_REAL32       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_REAL64       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_CHAR16       reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_STR          reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_BOOL         reduce using rule 84 (dataType -> DT_REAL64 .)
    DT_DATETIME     reduce using rule 84 (dataType -> DT_REAL64 .)
    REF             reduce using rule 84 (dataType -> DT_REAL64 .)
    ;               reduce using rule 84 (dataType -> DT_REAL64 .)
    )               reduce using rule 84 (dataType -> DT_REAL64 .)


state 53

    (85) dataType -> DT_CHAR16 .

    {               reduce using rule 85 (dataType -> DT_CHAR16 .)
    :               reduce using rule 85 (dataType -> DT_CHAR16 .)
    AS              reduce using rule 85 (dataType -> DT_CHAR16 .)
    (               reduce using rule 85 (dataType -> DT_CHAR16 .)
    ]               reduce using rule 85 (dataType -> DT_CHAR16 .)
    ,               reduce using rule 85 (dataType -> DT_CHAR16 .)
    [               reduce using rule 85 (dataType -> DT_CHAR16 .)
    =               reduce using rule 85 (dataType -> DT_CHAR16 .)
    IDENTIFIER      reduce using rule 85 (dataType -> DT_CHAR16 .)
    ANY             reduce using rule 85 (dataType -> DT_CHAR16 .)
    CLASS           reduce using rule 85 (dataType -> DT_CHAR16 .)
    DISABLEOVERRIDE reduce using rule 85 (dataType -> DT_CHAR16 .)
    ENABLEOVERRIDE  reduce using rule 85 (dataType -> DT_CHAR16 .)
    FLAVOR          reduce using rule 85 (dataType -> DT_CHAR16 .)
    INSTANCE        reduce using rule 85 (dataType -> DT_CHAR16 .)
    METHOD          reduce using rule 85 (dataType -> DT_CHAR16 .)
    OF              reduce using rule 85 (dataType -> DT_CHAR16 .)
    PARAMETER       reduce using rule 85 (dataType -> DT_CHAR16 .)
    PRAGMA          reduce using rule 85 (dataType -> DT_CHAR16 .)
    PROPERTY        reduce using rule 85 (dataType -> DT_CHAR16 .)
    QUALIFIER       reduce using rule 85 (dataType -> DT_CHAR16 .)
    REFERENCE       reduce using rule 85 (dataType -> DT_CHAR16 .)
    RESTRICTED      reduce using rule 85 (dataType -> DT_CHAR16 .)
    SCHEMA          reduce using rule 85 (dataType -> DT_CHAR16 .)
    SCOPE           reduce using rule 85 (dataType -> DT_CHAR16 .)
    TOSUBCLASS      reduce using rule 85 (dataType -> DT_CHAR16 .)
    TOINSTANCE      reduce using rule 85 (dataType -> DT_CHAR16 .)
    TRANSLATABLE    reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_UINT8        reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_SINT8        reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_UINT16       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_SINT16       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_UINT32       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_SINT32       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_UINT64       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_SINT64       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_REAL32       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_REAL64       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_CHAR16       reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_STR          reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_BOOL         reduce using rule 85 (dataType -> DT_CHAR16 .)
    DT_DATETIME     reduce using rule 85 (dataType -> DT_CHAR16 .)
    REF             reduce using rule 85 (dataType -> DT_CHAR16 .)
    ;               reduce using rule 85 (dataType -> DT_CHAR16 .)
    )               reduce using rule 85 (dataType -> DT_CHAR16 .)


state 54

    (86) dataType -> DT_STR .

    {               reduce using rule 86 (dataType -> DT_STR .)
    :               reduce using rule 86 (dataType -> DT_STR .)
    AS              reduce using rule 86 (dataType -> DT_STR .)
    (               reduce using rule 86 (dataType -> DT_STR .)
    ]               reduce using rule 86 (dataType -> DT_STR .)
    ,               reduce using rule 86 (dataType -> DT_STR .)
    [               reduce using rule 86 (dataType -> DT_STR .)
    =               reduce using rule 86 (dataType -> DT_STR .)
    IDENTIFIER      reduce using rule 86 (dataType -> DT_STR .)
    ANY             reduce using rule 86 (dataType -> DT_STR .)
    CLASS           reduce using rule 86 (dataType -> DT_STR .)
    DISABLEOVERRIDE reduce using rule 86 (dataType -> DT_STR .)
    ENABLEOVERRIDE  reduce using rule 86 (dataType -> DT_STR .)
    FLAVOR          reduce using rule 86 (dataType -> DT_STR .)
    INSTANCE        reduce using rule 86 (dataType -> DT_STR .)
    METHOD          reduce using rule 86 (dataType -> DT_STR .)
    OF              reduce using rule 86 (dataType -> DT_STR .)
    PARAMETER       reduce using rule 86 (dataType -> DT_STR .)
    PRAGMA          reduce using rule 86 (dataType -> DT_STR .)
    PROPERTY        reduce using rule 86 (dataType -> DT_STR .)
    QUALIFIER       reduce using rule 86 (dataType -> DT_STR .)
    REFERENCE       reduce using rule 86 (dataType -> DT_STR .)
    RESTRICTED      reduce using rule 86 (dataType -> DT_STR .)
    SCHEMA          reduce using rule 86 (dataType -> DT_STR .)
    SCOPE           reduce using rule 86 (dataType -> DT_STR .)
    TOSUBCLASS      reduce using rule 86 (dataType -> DT_STR .)
    TOINSTANCE      reduce using rule 86 (dataType -> DT_STR .)
    TRANSLATABLE    reduce using rule 86 (dataType -> DT_STR .)
    DT_UINT8        reduce using rule 86 (dataType -> DT_STR .)
    DT_SINT8        reduce using rule 86 (dataType -> DT_STR .)
    DT_UINT16       reduce using rule 86 (dataType -> DT_STR .)
    DT_SINT16       reduce using rule 86 (dataType -> DT_STR .)
    DT_UINT32       reduce using rule 86 (dataType -> DT_STR .)
    DT_SINT32       reduce using rule 86 (dataType -> DT_STR .)
    DT_UINT64       reduce using rule 86 (dataType -> DT_STR .)
    DT_SINT64       reduce using rule 86 (dataType -> DT_STR .)
    DT_REAL32       reduce using rule 86 (dataType -> DT_STR .)
    DT_REAL64       reduce using rule 86 (dataType -> DT_STR .)
    DT_CHAR16       reduce using rule 86 (dataType -> DT_STR .)
    DT_STR          reduce using rule 86 (dataType -> DT_STR .)
    DT_BOOL         reduce using rule 86 (dataType -> DT_STR .)
    DT_DATETIME     reduce using rule 86 (dataType -> DT_STR .)
    REF             reduce using rule 86 (dataType -> DT_STR .)
    ;               reduce using rule 86 (dataType -> DT_STR .)
    )               reduce using rule 86 (dataType -> DT_STR .)


state 55

    (87) dataType -> DT_BOOL .

    {               reduce using rule 87 (dataType -> DT_BOOL .)
    :               reduce using rule 87 (dataType -> DT_BOOL .)
    AS              reduce using rule 87 (dataType -> DT_BOOL .)
    (               reduce using rule 87 (dataType -> DT_BOOL .)
    ]               reduce using rule 87 (dataType -> DT_BOOL .)
    ,               reduce using rule 87 (dataType -> DT_BOOL .)
    [               reduce using rule 87 (dataType -> DT_BOOL .)
    =               reduce using rule 87 (dataType -> DT_BOOL .)
    IDENTIFIER      reduce using rule 87 (dataType -> DT_BOOL .)
    ANY             reduce using rule 87 (dataType -> DT_BOOL .)
    CLASS           reduce using rule 87 (dataType -> DT_BOOL .)
    DISABLEOVERRIDE reduce using rule 87 (dataType -> DT_BOOL .)
    ENABLEOVERRIDE  reduce using rule 87 (dataType -> DT_BOOL .)
    FLAVOR          reduce using rule 87 (dataType -> DT_BOOL .)
    INSTANCE        reduce using rule 87 (dataType -> DT_BOOL .)
    METHOD          reduce using rule 87 (dataType -> DT_BOOL .)
    OF              reduce using rule 87 (dataType -> DT_BOOL .)
    PARAMETER       reduce using rule 87 (dataType -> DT_BOOL .)
    PRAGMA          reduce using rule 87 (dataType -> DT_BOOL .)
    PROPERTY        reduce using rule 87 (dataType -> DT_BOOL .)
    QUALIFIER       reduce using rule 87 (dataType -> DT_BOOL .)
    REFERENCE       reduce using rule 87 (dataType -> DT_BOOL .)
    RESTRICTED      reduce using rule 87 (dataType -> DT_BOOL .)
    SCHEMA          reduce using rule 87 (dataType -> DT_BOOL .)
    SCOPE           reduce using rule 87 (dataType -> DT_BOOL .)
    TOSUBCLASS      reduce using rule 87 (dataType -> DT_BOOL .)
    TOINSTANCE      reduce using rule 87 (dataType -> DT_BOOL .)
    TRANSLATABLE    reduce using rule 87 (dataType -> DT_BOOL .)
    DT_UINT8        reduce using rule 87 (dataType -> DT_BOOL .)
    DT_SINT8        reduce using rule 87 (dataType -> DT_BOOL .)
    DT_UINT16       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_SINT16       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_UINT32       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_SINT32       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_UINT64       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_SINT64       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_REAL32       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_REAL64       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_CHAR16       reduce using rule 87 (dataType -> DT_BOOL .)
    DT_STR          reduce using rule 87 (dataType -> DT_BOOL .)
    DT_BOOL         reduce using rule 87 (dataType -> DT_BOOL .)
    DT_DATETIME     reduce using rule 87 (dataType -> DT_BOOL .)
    REF             reduce using rule 87 (dataType -> DT_BOOL .)
    ;               reduce using rule 87 (dataType -> DT_BOOL .)
    )               reduce using rule 87 (dataType -> DT_BOOL .)


state 56

    (88) dataType -> DT_DATETIME .

    {               reduce using rule 88 (dataType -> DT_DATETIME .)
    :               reduce using rule 88 (dataType -> DT_DATETIME .)
    AS              reduce using rule 88 (dataType -> DT_DATETIME .)
    (               reduce using rule 88 (dataType -> DT_DATETIME .)
    ]               reduce using rule 88 (dataType -> DT_DATETIME .)
    ,               reduce using rule 88 (dataType -> DT_DATETIME .)
    [               reduce using rule 88 (dataType -> DT_DATETIME .)
    =               reduce using rule 88 (dataType -> DT_DATETIME .)
    IDENTIFIER      reduce using rule 88 (dataType -> DT_DATETIME .)
    ANY             reduce using rule 88 (dataType -> DT_DATETIME .)
    CLASS           reduce using rule 88 (dataType -> DT_DATETIME .)
    DISABLEOVERRIDE reduce using rule 88 (dataType -> DT_DATETIME .)
    ENABLEOVERRIDE  reduce using rule 88 (dataType -> DT_DATETIME .)
    FLAVOR          reduce using rule 88 (dataType -> DT_DATETIME .)
    INSTANCE        reduce using rule 88 (dataType -> DT_DATETIME .)
    METHOD          reduce using rule 88 (dataType -> DT_DATETIME .)
    OF              reduce using rule 88 (dataType -> DT_DATETIME .)
    PARAMETER       reduce using rule 88 (dataType -> DT_DATETIME .)
    PRAGMA          reduce using rule 88 (dataType -> DT_DATETIME .)
    PROPERTY        reduce using rule 88 (dataType -> DT_DATETIME .)
    QUALIFIER       reduce using rule 88 (dataType -> DT_DATETIME .)
    REFERENCE       reduce using rule 88 (dataType -> DT_DATETIME .)
    RESTRICTED      reduce using rule 88 (dataType -> DT_DATETIME .)
    SCHEMA          reduce using rule 88 (dataType -> DT_DATETIME .)
    SCOPE           reduce using rule 88 (dataType -> DT_DATETIME .)
    TOSUBCLASS      reduce using rule 88 (dataType -> DT_DATETIME .)
    TOINSTANCE      reduce using rule 88 (dataType -> DT_DATETIME .)
    TRANSLATABLE    reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_UINT8        reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_SINT8        reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_UINT16       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_SINT16       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_UINT32       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_SINT32       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_UINT64       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_SINT64       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_REAL32       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_REAL64       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_CHAR16       reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_STR          reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_BOOL         reduce using rule 88 (dataType -> DT_DATETIME .)
    DT_DATETIME     reduce using rule 88 (dataType -> DT_DATETIME .)
    REF             reduce using rule 88 (dataType -> DT_DATETIME .)
    ;               reduce using rule 88 (dataType -> DT_DATETIME .)
    )               reduce using rule 88 (dataType -> DT_DATETIME .)


state 57

    (18) classDeclaration -> qualifierList CLASS . className { classFeatureList } ;
    (19) classDeclaration -> qualifierList CLASS . className superClass { classFeatureList } ;
    (20) classDeclaration -> qualifierList CLASS . className alias { classFeatureList } ;
    (21) classDeclaration -> qualifierList CLASS . className alias superClass { classFeatureList } ;
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    className                      shift and go to state 73
    identifier                     shift and go to state 21
    dataType                       shift and go to state 26

state 58

    (159) instanceDeclaration -> qualifierList INSTANCE . OF className { valueInitializerList } ;
    (160) instanceDeclaration -> qualifierList INSTANCE . OF className alias { valueInitializerList } ;

    OF              shift and go to state 74


state 59

    (130) qualifierDeclaration -> QUALIFIER qualifierName . qualifierType scope ;
    (131) qualifierDeclaration -> QUALIFIER qualifierName . qualifierType scope defaultFlavor ;
    (135) qualifierType -> . qualifierType_1
    (136) qualifierType -> . qualifierType_2
    (137) qualifierType_1 -> . : dataType array
    (138) qualifierType_1 -> . : dataType array defaultValue
    (139) qualifierType_2 -> . : dataType
    (140) qualifierType_2 -> . : dataType defaultValue

    :               shift and go to state 78

    qualifierType                  shift and go to state 75
    qualifierType_1                shift and go to state 76
    qualifierType_2                shift and go to state 77

state 60

    (132) qualifierName -> identifier .

    :               reduce using rule 132 (qualifierName -> identifier .)
    (               reduce using rule 132 (qualifierName -> identifier .)
    {               reduce using rule 132 (qualifierName -> identifier .)
    ]               reduce using rule 132 (qualifierName -> identifier .)
    ,               reduce using rule 132 (qualifierName -> identifier .)


state 61

    (133) qualifierName -> ASSOCIATION .

    :               reduce using rule 133 (qualifierName -> ASSOCIATION .)
    (               reduce using rule 133 (qualifierName -> ASSOCIATION .)
    {               reduce using rule 133 (qualifierName -> ASSOCIATION .)
    ]               reduce using rule 133 (qualifierName -> ASSOCIATION .)
    ,               reduce using rule 133 (qualifierName -> ASSOCIATION .)


state 62

    (134) qualifierName -> INDICATION .

    :               reduce using rule 134 (qualifierName -> INDICATION .)
    (               reduce using rule 134 (qualifierName -> INDICATION .)
    {               reduce using rule 134 (qualifierName -> INDICATION .)
    ]               reduce using rule 134 (qualifierName -> INDICATION .)
    ,               reduce using rule 134 (qualifierName -> INDICATION .)


state 63

    (157) instanceDeclaration -> INSTANCE OF . className { valueInitializerList } ;
    (158) instanceDeclaration -> INSTANCE OF . className alias { valueInitializerList } ;
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    className                      shift and go to state 79
    identifier                     shift and go to state 21
    dataType                       shift and go to state 26

state 64

    (33) qualifierList -> [ qualifier . qualifierListEmpty ]
    (24) qualifierListEmpty -> . empty
    (25) qualifierListEmpty -> . qualifierListEmpty , qualifier
    (190) empty -> .

    ]               reduce using rule 190 (empty -> .)
    ,               reduce using rule 190 (empty -> .)

    qualifierListEmpty             shift and go to state 80
    empty                          shift and go to state 81

state 65

    (34) qualifier -> qualifierName .
    (35) qualifier -> qualifierName . : flavorList
    (36) qualifier -> qualifierName . qualifierParameter
    (37) qualifier -> qualifierName . qualifierParameter : flavorList
    (40) qualifierParameter -> . ( constantValue )
    (41) qualifierParameter -> . arrayInitializer
    (111) arrayInitializer -> . { constantValueList }
    (112) arrayInitializer -> . { }

    ]               reduce using rule 34 (qualifier -> qualifierName .)
    ,               reduce using rule 34 (qualifier -> qualifierName .)
    :               shift and go to state 82
    (               shift and go to state 84
    {               shift and go to state 86

    qualifierParameter             shift and go to state 83
    arrayInitializer               shift and go to state 85

state 66

    (11) compilerDirective -> # PRAGMA pragmaName . ( pragmaParameter )

    (               shift and go to state 87


state 67

    (12) pragmaName -> identifier .

    (               reduce using rule 12 (pragmaName -> identifier .)


state 68

    (14) classDeclaration -> CLASS className { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 88
    empty                          shift and go to state 89

state 69

    (15) classDeclaration -> CLASS className superClass . { classFeatureList } ;

    {               shift and go to state 90


state 70

    (16) classDeclaration -> CLASS className alias . { classFeatureList } ;
    (17) classDeclaration -> CLASS className alias . superClass { classFeatureList } ;
    (29) superClass -> . : className

    {               shift and go to state 91
    :               shift and go to state 71

    superClass                     shift and go to state 92

state 71

    (29) superClass -> : . className
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    className                      shift and go to state 93
    identifier                     shift and go to state 21
    dataType                       shift and go to state 26

state 72

    (27) alias -> AS . aliasIdentifier
    (28) aliasIdentifier -> . $ identifier

    $               shift and go to state 95

    aliasIdentifier                shift and go to state 94

state 73

    (18) classDeclaration -> qualifierList CLASS className . { classFeatureList } ;
    (19) classDeclaration -> qualifierList CLASS className . superClass { classFeatureList } ;
    (20) classDeclaration -> qualifierList CLASS className . alias { classFeatureList } ;
    (21) classDeclaration -> qualifierList CLASS className . alias superClass { classFeatureList } ;
    (29) superClass -> . : className
    (27) alias -> . AS aliasIdentifier

    {               shift and go to state 96
    :               shift and go to state 71
    AS              shift and go to state 72

    superClass                     shift and go to state 97
    alias                          shift and go to state 98

state 74

    (159) instanceDeclaration -> qualifierList INSTANCE OF . className { valueInitializerList } ;
    (160) instanceDeclaration -> qualifierList INSTANCE OF . className alias { valueInitializerList } ;
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    className                      shift and go to state 99
    identifier                     shift and go to state 21
    dataType                       shift and go to state 26

state 75

    (130) qualifierDeclaration -> QUALIFIER qualifierName qualifierType . scope ;
    (131) qualifierDeclaration -> QUALIFIER qualifierName qualifierType . scope defaultFlavor ;
    (141) scope -> . , SCOPE ( metaElementList )

    ,               shift and go to state 101

    scope                          shift and go to state 100

state 76

    (135) qualifierType -> qualifierType_1 .

    ,               reduce using rule 135 (qualifierType -> qualifierType_1 .)


state 77

    (136) qualifierType -> qualifierType_2 .

    ,               reduce using rule 136 (qualifierType -> qualifierType_2 .)


state 78

    (137) qualifierType_1 -> : . dataType array
    (138) qualifierType_1 -> : . dataType array defaultValue
    (139) qualifierType_2 -> : . dataType
    (140) qualifierType_2 -> : . dataType defaultValue
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    dataType                       shift and go to state 102

state 79

    (157) instanceDeclaration -> INSTANCE OF className . { valueInitializerList } ;
    (158) instanceDeclaration -> INSTANCE OF className . alias { valueInitializerList } ;
    (27) alias -> . AS aliasIdentifier

    {               shift and go to state 103
    AS              shift and go to state 72

    alias                          shift and go to state 104

state 80

    (33) qualifierList -> [ qualifier qualifierListEmpty . ]
    (25) qualifierListEmpty -> qualifierListEmpty . , qualifier

    ]               shift and go to state 105
    ,               shift and go to state 106


state 81

    (24) qualifierListEmpty -> empty .

    ]               reduce using rule 24 (qualifierListEmpty -> empty .)
    ,               reduce using rule 24 (qualifierListEmpty -> empty .)


state 82

    (35) qualifier -> qualifierName : . flavorList
    (38) flavorList -> . flavor
    (39) flavorList -> . flavorList flavor
    (42) flavor -> . ENABLEOVERRIDE
    (43) flavor -> . DISABLEOVERRIDE
    (44) flavor -> . RESTRICTED
    (45) flavor -> . TOSUBCLASS
    (46) flavor -> . TOINSTANCE
    (47) flavor -> . TRANSLATABLE

    ENABLEOVERRIDE  shift and go to state 109
    DISABLEOVERRIDE shift and go to state 110
    RESTRICTED      shift and go to state 111
    TOSUBCLASS      shift and go to state 112
    TOINSTANCE      shift and go to state 113
    TRANSLATABLE    shift and go to state 114

    flavorList                     shift and go to state 107
    flavor                         shift and go to state 108

state 83

    (36) qualifier -> qualifierName qualifierParameter .
    (37) qualifier -> qualifierName qualifierParameter . : flavorList

    ]               reduce using rule 36 (qualifier -> qualifierName qualifierParameter .)
    ,               reduce using rule 36 (qualifier -> qualifierName qualifierParameter .)
    :               shift and go to state 115


state 84

    (40) qualifierParameter -> ( . constantValue )
    (117) constantValue -> . integerValue
    (118) constantValue -> . floatValue
    (119) constantValue -> . charValue
    (120) constantValue -> . stringValueList
    (121) constantValue -> . booleanValue
    (122) constantValue -> . nullValue
    (123) integerValue -> . binaryValue
    (124) integerValue -> . octalValue
    (125) integerValue -> . decimalValue
    (126) integerValue -> . hexValue
    (115) stringValueList -> . stringValue
    (116) stringValueList -> . stringValueList stringValue
    (165) booleanValue -> . FALSE
    (166) booleanValue -> . TRUE
    (167) nullValue -> . NULL

    floatValue      shift and go to state 118
    charValue       shift and go to state 119
    binaryValue     shift and go to state 123
    octalValue      shift and go to state 124
    decimalValue    shift and go to state 125
    hexValue        shift and go to state 126
    stringValue     shift and go to state 127
    FALSE           shift and go to state 128
    TRUE            shift and go to state 129
    NULL            shift and go to state 130

    constantValue                  shift and go to state 116
    integerValue                   shift and go to state 117
    stringValueList                shift and go to state 120
    booleanValue                   shift and go to state 121
    nullValue                      shift and go to state 122

state 85

    (41) qualifierParameter -> arrayInitializer .

    :               reduce using rule 41 (qualifierParameter -> arrayInitializer .)
    ]               reduce using rule 41 (qualifierParameter -> arrayInitializer .)
    ,               reduce using rule 41 (qualifierParameter -> arrayInitializer .)


state 86

    (111) arrayInitializer -> { . constantValueList }
    (112) arrayInitializer -> { . }
    (113) constantValueList -> . constantValue
    (114) constantValueList -> . constantValueList , constantValue
    (117) constantValue -> . integerValue
    (118) constantValue -> . floatValue
    (119) constantValue -> . charValue
    (120) constantValue -> . stringValueList
    (121) constantValue -> . booleanValue
    (122) constantValue -> . nullValue
    (123) integerValue -> . binaryValue
    (124) integerValue -> . octalValue
    (125) integerValue -> . decimalValue
    (126) integerValue -> . hexValue
    (115) stringValueList -> . stringValue
    (116) stringValueList -> . stringValueList stringValue
    (165) booleanValue -> . FALSE
    (166) booleanValue -> . TRUE
    (167) nullValue -> . NULL

    }               shift and go to state 132
    floatValue      shift and go to state 118
    charValue       shift and go to state 119
    binaryValue     shift and go to state 123
    octalValue      shift and go to state 124
    decimalValue    shift and go to state 125
    hexValue        shift and go to state 126
    stringValue     shift and go to state 127
    FALSE           shift and go to state 128
    TRUE            shift and go to state 129
    NULL            shift and go to state 130

    constantValueList              shift and go to state 131
    constantValue                  shift and go to state 133
    integerValue                   shift and go to state 117
    stringValueList                shift and go to state 120
    booleanValue                   shift and go to state 121
    nullValue                      shift and go to state 122

state 87

    (11) compilerDirective -> # PRAGMA pragmaName ( . pragmaParameter )
    (13) pragmaParameter -> . stringValue

    stringValue     shift and go to state 135

    pragmaParameter                shift and go to state 134

state 88

    (14) classDeclaration -> CLASS className { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 137
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    qualifierList                  shift and go to state 151
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 89

    (22) classFeatureList -> empty .

    }               reduce using rule 22 (classFeatureList -> empty .)
    DT_UINT8        reduce using rule 22 (classFeatureList -> empty .)
    DT_SINT8        reduce using rule 22 (classFeatureList -> empty .)
    DT_UINT16       reduce using rule 22 (classFeatureList -> empty .)
    DT_SINT16       reduce using rule 22 (classFeatureList -> empty .)
    DT_UINT32       reduce using rule 22 (classFeatureList -> empty .)
    DT_SINT32       reduce using rule 22 (classFeatureList -> empty .)
    DT_UINT64       reduce using rule 22 (classFeatureList -> empty .)
    DT_SINT64       reduce using rule 22 (classFeatureList -> empty .)
    DT_REAL32       reduce using rule 22 (classFeatureList -> empty .)
    DT_REAL64       reduce using rule 22 (classFeatureList -> empty .)
    DT_CHAR16       reduce using rule 22 (classFeatureList -> empty .)
    DT_STR          reduce using rule 22 (classFeatureList -> empty .)
    DT_BOOL         reduce using rule 22 (classFeatureList -> empty .)
    DT_DATETIME     reduce using rule 22 (classFeatureList -> empty .)
    [               reduce using rule 22 (classFeatureList -> empty .)
    IDENTIFIER      reduce using rule 22 (classFeatureList -> empty .)
    ANY             reduce using rule 22 (classFeatureList -> empty .)
    AS              reduce using rule 22 (classFeatureList -> empty .)
    CLASS           reduce using rule 22 (classFeatureList -> empty .)
    DISABLEOVERRIDE reduce using rule 22 (classFeatureList -> empty .)
    ENABLEOVERRIDE  reduce using rule 22 (classFeatureList -> empty .)
    FLAVOR          reduce using rule 22 (classFeatureList -> empty .)
    INSTANCE        reduce using rule 22 (classFeatureList -> empty .)
    METHOD          reduce using rule 22 (classFeatureList -> empty .)
    OF              reduce using rule 22 (classFeatureList -> empty .)
    PARAMETER       reduce using rule 22 (classFeatureList -> empty .)
    PRAGMA          reduce using rule 22 (classFeatureList -> empty .)
    PROPERTY        reduce using rule 22 (classFeatureList -> empty .)
    QUALIFIER       reduce using rule 22 (classFeatureList -> empty .)
    REFERENCE       reduce using rule 22 (classFeatureList -> empty .)
    RESTRICTED      reduce using rule 22 (classFeatureList -> empty .)
    SCHEMA          reduce using rule 22 (classFeatureList -> empty .)
    SCOPE           reduce using rule 22 (classFeatureList -> empty .)
    TOSUBCLASS      reduce using rule 22 (classFeatureList -> empty .)
    TOINSTANCE      reduce using rule 22 (classFeatureList -> empty .)
    TRANSLATABLE    reduce using rule 22 (classFeatureList -> empty .)


state 90

    (15) classDeclaration -> CLASS className superClass { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 153
    empty                          shift and go to state 89

state 91

    (16) classDeclaration -> CLASS className alias { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 154
    empty                          shift and go to state 89

state 92

    (17) classDeclaration -> CLASS className alias superClass . { classFeatureList } ;

    {               shift and go to state 155


state 93

    (29) superClass -> : className .

    {               reduce using rule 29 (superClass -> : className .)


state 94

    (27) alias -> AS aliasIdentifier .

    {               reduce using rule 27 (alias -> AS aliasIdentifier .)
    :               reduce using rule 27 (alias -> AS aliasIdentifier .)


state 95

    (28) aliasIdentifier -> $ . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    identifier                     shift and go to state 156
    dataType                       shift and go to state 26

state 96

    (18) classDeclaration -> qualifierList CLASS className { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 157
    empty                          shift and go to state 89

state 97

    (19) classDeclaration -> qualifierList CLASS className superClass . { classFeatureList } ;

    {               shift and go to state 158


state 98

    (20) classDeclaration -> qualifierList CLASS className alias . { classFeatureList } ;
    (21) classDeclaration -> qualifierList CLASS className alias . superClass { classFeatureList } ;
    (29) superClass -> . : className

    {               shift and go to state 159
    :               shift and go to state 71

    superClass                     shift and go to state 160

state 99

    (159) instanceDeclaration -> qualifierList INSTANCE OF className . { valueInitializerList } ;
    (160) instanceDeclaration -> qualifierList INSTANCE OF className . alias { valueInitializerList } ;
    (27) alias -> . AS aliasIdentifier

    {               shift and go to state 161
    AS              shift and go to state 72

    alias                          shift and go to state 162

state 100

    (130) qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope . ;
    (131) qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope . defaultFlavor ;
    (154) defaultFlavor -> . , FLAVOR ( flavorListWithComma )

    ;               shift and go to state 163
    ,               shift and go to state 165

    defaultFlavor                  shift and go to state 164

state 101

    (141) scope -> , . SCOPE ( metaElementList )

    SCOPE           shift and go to state 166


state 102

    (137) qualifierType_1 -> : dataType . array
    (138) qualifierType_1 -> : dataType . array defaultValue
    (139) qualifierType_2 -> : dataType .
    (140) qualifierType_2 -> : dataType . defaultValue
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]
    (107) defaultValue -> . = initializer

    ,               reduce using rule 139 (qualifierType_2 -> : dataType .)
    [               shift and go to state 169
    =               shift and go to state 170

    array                          shift and go to state 167
    defaultValue                   shift and go to state 168

state 103

    (157) instanceDeclaration -> INSTANCE OF className { . valueInitializerList } ;
    (161) valueInitializerList -> . valueInitializer
    (162) valueInitializerList -> . valueInitializerList valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    valueInitializerList           shift and go to state 171
    valueInitializer               shift and go to state 172
    identifier                     shift and go to state 173
    qualifierList                  shift and go to state 174
    dataType                       shift and go to state 26

state 104

    (158) instanceDeclaration -> INSTANCE OF className alias . { valueInitializerList } ;

    {               shift and go to state 175


state 105

    (33) qualifierList -> [ qualifier qualifierListEmpty ] .

    CLASS           reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    INSTANCE        reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_UINT8        reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_SINT8        reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_UINT16       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_SINT16       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_UINT32       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_SINT32       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_UINT64       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_SINT64       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_REAL32       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_REAL64       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_CHAR16       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_STR          reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_BOOL         reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DT_DATETIME     reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    IDENTIFIER      reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    ANY             reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    AS              reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    DISABLEOVERRIDE reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    ENABLEOVERRIDE  reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    FLAVOR          reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    METHOD          reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    OF              reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    PARAMETER       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    PRAGMA          reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    PROPERTY        reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    QUALIFIER       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    REFERENCE       reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    RESTRICTED      reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    SCHEMA          reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    SCOPE           reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    TOSUBCLASS      reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    TOINSTANCE      reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)
    TRANSLATABLE    reduce using rule 33 (qualifierList -> [ qualifier qualifierListEmpty ] .)


state 106

    (25) qualifierListEmpty -> qualifierListEmpty , . qualifier
    (34) qualifier -> . qualifierName
    (35) qualifier -> . qualifierName : flavorList
    (36) qualifier -> . qualifierName qualifierParameter
    (37) qualifier -> . qualifierName qualifierParameter : flavorList
    (132) qualifierName -> . identifier
    (133) qualifierName -> . ASSOCIATION
    (134) qualifierName -> . INDICATION
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    ASSOCIATION     shift and go to state 61
    INDICATION      shift and go to state 62
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifier                      shift and go to state 176
    qualifierName                  shift and go to state 65
    identifier                     shift and go to state 60
    dataType                       shift and go to state 26

state 107

    (35) qualifier -> qualifierName : flavorList .
    (39) flavorList -> flavorList . flavor
    (42) flavor -> . ENABLEOVERRIDE
    (43) flavor -> . DISABLEOVERRIDE
    (44) flavor -> . RESTRICTED
    (45) flavor -> . TOSUBCLASS
    (46) flavor -> . TOINSTANCE
    (47) flavor -> . TRANSLATABLE

    ]               reduce using rule 35 (qualifier -> qualifierName : flavorList .)
    ,               reduce using rule 35 (qualifier -> qualifierName : flavorList .)
    ENABLEOVERRIDE  shift and go to state 109
    DISABLEOVERRIDE shift and go to state 110
    RESTRICTED      shift and go to state 111
    TOSUBCLASS      shift and go to state 112
    TOINSTANCE      shift and go to state 113
    TRANSLATABLE    shift and go to state 114

    flavor                         shift and go to state 177

state 108

    (38) flavorList -> flavor .

    ENABLEOVERRIDE  reduce using rule 38 (flavorList -> flavor .)
    DISABLEOVERRIDE reduce using rule 38 (flavorList -> flavor .)
    RESTRICTED      reduce using rule 38 (flavorList -> flavor .)
    TOSUBCLASS      reduce using rule 38 (flavorList -> flavor .)
    TOINSTANCE      reduce using rule 38 (flavorList -> flavor .)
    TRANSLATABLE    reduce using rule 38 (flavorList -> flavor .)
    ]               reduce using rule 38 (flavorList -> flavor .)
    ,               reduce using rule 38 (flavorList -> flavor .)


state 109

    (42) flavor -> ENABLEOVERRIDE .

    ENABLEOVERRIDE  reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    DISABLEOVERRIDE reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    RESTRICTED      reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    TOSUBCLASS      reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    TOINSTANCE      reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    TRANSLATABLE    reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    ]               reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    ,               reduce using rule 42 (flavor -> ENABLEOVERRIDE .)
    )               reduce using rule 42 (flavor -> ENABLEOVERRIDE .)


state 110

    (43) flavor -> DISABLEOVERRIDE .

    ENABLEOVERRIDE  reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    DISABLEOVERRIDE reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    RESTRICTED      reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    TOSUBCLASS      reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    TOINSTANCE      reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    TRANSLATABLE    reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    ]               reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    ,               reduce using rule 43 (flavor -> DISABLEOVERRIDE .)
    )               reduce using rule 43 (flavor -> DISABLEOVERRIDE .)


state 111

    (44) flavor -> RESTRICTED .

    ENABLEOVERRIDE  reduce using rule 44 (flavor -> RESTRICTED .)
    DISABLEOVERRIDE reduce using rule 44 (flavor -> RESTRICTED .)
    RESTRICTED      reduce using rule 44 (flavor -> RESTRICTED .)
    TOSUBCLASS      reduce using rule 44 (flavor -> RESTRICTED .)
    TOINSTANCE      reduce using rule 44 (flavor -> RESTRICTED .)
    TRANSLATABLE    reduce using rule 44 (flavor -> RESTRICTED .)
    ]               reduce using rule 44 (flavor -> RESTRICTED .)
    ,               reduce using rule 44 (flavor -> RESTRICTED .)
    )               reduce using rule 44 (flavor -> RESTRICTED .)


state 112

    (45) flavor -> TOSUBCLASS .

    ENABLEOVERRIDE  reduce using rule 45 (flavor -> TOSUBCLASS .)
    DISABLEOVERRIDE reduce using rule 45 (flavor -> TOSUBCLASS .)
    RESTRICTED      reduce using rule 45 (flavor -> TOSUBCLASS .)
    TOSUBCLASS      reduce using rule 45 (flavor -> TOSUBCLASS .)
    TOINSTANCE      reduce using rule 45 (flavor -> TOSUBCLASS .)
    TRANSLATABLE    reduce using rule 45 (flavor -> TOSUBCLASS .)
    ]               reduce using rule 45 (flavor -> TOSUBCLASS .)
    ,               reduce using rule 45 (flavor -> TOSUBCLASS .)
    )               reduce using rule 45 (flavor -> TOSUBCLASS .)


state 113

    (46) flavor -> TOINSTANCE .

    ENABLEOVERRIDE  reduce using rule 46 (flavor -> TOINSTANCE .)
    DISABLEOVERRIDE reduce using rule 46 (flavor -> TOINSTANCE .)
    RESTRICTED      reduce using rule 46 (flavor -> TOINSTANCE .)
    TOSUBCLASS      reduce using rule 46 (flavor -> TOINSTANCE .)
    TOINSTANCE      reduce using rule 46 (flavor -> TOINSTANCE .)
    TRANSLATABLE    reduce using rule 46 (flavor -> TOINSTANCE .)
    ]               reduce using rule 46 (flavor -> TOINSTANCE .)
    ,               reduce using rule 46 (flavor -> TOINSTANCE .)
    )               reduce using rule 46 (flavor -> TOINSTANCE .)


state 114

    (47) flavor -> TRANSLATABLE .

    ENABLEOVERRIDE  reduce using rule 47 (flavor -> TRANSLATABLE .)
    DISABLEOVERRIDE reduce using rule 47 (flavor -> TRANSLATABLE .)
    RESTRICTED      reduce using rule 47 (flavor -> TRANSLATABLE .)
    TOSUBCLASS      reduce using rule 47 (flavor -> TRANSLATABLE .)
    TOINSTANCE      reduce using rule 47 (flavor -> TRANSLATABLE .)
    TRANSLATABLE    reduce using rule 47 (flavor -> TRANSLATABLE .)
    ]               reduce using rule 47 (flavor -> TRANSLATABLE .)
    ,               reduce using rule 47 (flavor -> TRANSLATABLE .)
    )               reduce using rule 47 (flavor -> TRANSLATABLE .)


state 115

    (37) qualifier -> qualifierName qualifierParameter : . flavorList
    (38) flavorList -> . flavor
    (39) flavorList -> . flavorList flavor
    (42) flavor -> . ENABLEOVERRIDE
    (43) flavor -> . DISABLEOVERRIDE
    (44) flavor -> . RESTRICTED
    (45) flavor -> . TOSUBCLASS
    (46) flavor -> . TOINSTANCE
    (47) flavor -> . TRANSLATABLE

    ENABLEOVERRIDE  shift and go to state 109
    DISABLEOVERRIDE shift and go to state 110
    RESTRICTED      shift and go to state 111
    TOSUBCLASS      shift and go to state 112
    TOINSTANCE      shift and go to state 113
    TRANSLATABLE    shift and go to state 114

    flavorList                     shift and go to state 178
    flavor                         shift and go to state 108

state 116

    (40) qualifierParameter -> ( constantValue . )

    )               shift and go to state 179


state 117

    (117) constantValue -> integerValue .

    )               reduce using rule 117 (constantValue -> integerValue .)
    }               reduce using rule 117 (constantValue -> integerValue .)
    ,               reduce using rule 117 (constantValue -> integerValue .)
    ;               reduce using rule 117 (constantValue -> integerValue .)


state 118

    (118) constantValue -> floatValue .

    )               reduce using rule 118 (constantValue -> floatValue .)
    }               reduce using rule 118 (constantValue -> floatValue .)
    ,               reduce using rule 118 (constantValue -> floatValue .)
    ;               reduce using rule 118 (constantValue -> floatValue .)


state 119

    (119) constantValue -> charValue .

    )               reduce using rule 119 (constantValue -> charValue .)
    }               reduce using rule 119 (constantValue -> charValue .)
    ,               reduce using rule 119 (constantValue -> charValue .)
    ;               reduce using rule 119 (constantValue -> charValue .)


state 120

    (120) constantValue -> stringValueList .
    (116) stringValueList -> stringValueList . stringValue

    )               reduce using rule 120 (constantValue -> stringValueList .)
    }               reduce using rule 120 (constantValue -> stringValueList .)
    ,               reduce using rule 120 (constantValue -> stringValueList .)
    ;               reduce using rule 120 (constantValue -> stringValueList .)
    stringValue     shift and go to state 180


state 121

    (121) constantValue -> booleanValue .

    )               reduce using rule 121 (constantValue -> booleanValue .)
    }               reduce using rule 121 (constantValue -> booleanValue .)
    ,               reduce using rule 121 (constantValue -> booleanValue .)
    ;               reduce using rule 121 (constantValue -> booleanValue .)


state 122

    (122) constantValue -> nullValue .

    )               reduce using rule 122 (constantValue -> nullValue .)
    }               reduce using rule 122 (constantValue -> nullValue .)
    ,               reduce using rule 122 (constantValue -> nullValue .)
    ;               reduce using rule 122 (constantValue -> nullValue .)


state 123

    (123) integerValue -> binaryValue .

    )               reduce using rule 123 (integerValue -> binaryValue .)
    }               reduce using rule 123 (integerValue -> binaryValue .)
    ,               reduce using rule 123 (integerValue -> binaryValue .)
    ]               reduce using rule 123 (integerValue -> binaryValue .)
    ;               reduce using rule 123 (integerValue -> binaryValue .)


state 124

    (124) integerValue -> octalValue .

    )               reduce using rule 124 (integerValue -> octalValue .)
    }               reduce using rule 124 (integerValue -> octalValue .)
    ,               reduce using rule 124 (integerValue -> octalValue .)
    ]               reduce using rule 124 (integerValue -> octalValue .)
    ;               reduce using rule 124 (integerValue -> octalValue .)


state 125

    (125) integerValue -> decimalValue .

    )               reduce using rule 125 (integerValue -> decimalValue .)
    }               reduce using rule 125 (integerValue -> decimalValue .)
    ,               reduce using rule 125 (integerValue -> decimalValue .)
    ]               reduce using rule 125 (integerValue -> decimalValue .)
    ;               reduce using rule 125 (integerValue -> decimalValue .)


state 126

    (126) integerValue -> hexValue .

    )               reduce using rule 126 (integerValue -> hexValue .)
    }               reduce using rule 126 (integerValue -> hexValue .)
    ,               reduce using rule 126 (integerValue -> hexValue .)
    ]               reduce using rule 126 (integerValue -> hexValue .)
    ;               reduce using rule 126 (integerValue -> hexValue .)


state 127

    (115) stringValueList -> stringValue .

    stringValue     reduce using rule 115 (stringValueList -> stringValue .)
    )               reduce using rule 115 (stringValueList -> stringValue .)
    }               reduce using rule 115 (stringValueList -> stringValue .)
    ,               reduce using rule 115 (stringValueList -> stringValue .)
    ;               reduce using rule 115 (stringValueList -> stringValue .)


state 128

    (165) booleanValue -> FALSE .

    )               reduce using rule 165 (booleanValue -> FALSE .)
    }               reduce using rule 165 (booleanValue -> FALSE .)
    ,               reduce using rule 165 (booleanValue -> FALSE .)
    ;               reduce using rule 165 (booleanValue -> FALSE .)


state 129

    (166) booleanValue -> TRUE .

    )               reduce using rule 166 (booleanValue -> TRUE .)
    }               reduce using rule 166 (booleanValue -> TRUE .)
    ,               reduce using rule 166 (booleanValue -> TRUE .)
    ;               reduce using rule 166 (booleanValue -> TRUE .)


state 130

    (167) nullValue -> NULL .

    )               reduce using rule 167 (nullValue -> NULL .)
    }               reduce using rule 167 (nullValue -> NULL .)
    ,               reduce using rule 167 (nullValue -> NULL .)
    ;               reduce using rule 167 (nullValue -> NULL .)


state 131

    (111) arrayInitializer -> { constantValueList . }
    (114) constantValueList -> constantValueList . , constantValue

    }               shift and go to state 181
    ,               shift and go to state 182


state 132

    (112) arrayInitializer -> { } .

    :               reduce using rule 112 (arrayInitializer -> { } .)
    ]               reduce using rule 112 (arrayInitializer -> { } .)
    ,               reduce using rule 112 (arrayInitializer -> { } .)
    ;               reduce using rule 112 (arrayInitializer -> { } .)


state 133

    (113) constantValueList -> constantValue .

    }               reduce using rule 113 (constantValueList -> constantValue .)
    ,               reduce using rule 113 (constantValueList -> constantValue .)


state 134

    (11) compilerDirective -> # PRAGMA pragmaName ( pragmaParameter . )

    )               shift and go to state 183


state 135

    (13) pragmaParameter -> stringValue .

    )               reduce using rule 13 (pragmaParameter -> stringValue .)


state 136

    (89) objectRef -> className . REF

    REF             shift and go to state 184


state 137

    (14) classDeclaration -> CLASS className { classFeatureList } . ;

    ;               shift and go to state 185


state 138

    (23) classFeatureList -> classFeatureList classFeature .

    }               reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_UINT8        reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_SINT8        reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_UINT16       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_SINT16       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_UINT32       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_SINT32       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_UINT64       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_SINT64       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_REAL32       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_REAL64       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_CHAR16       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_STR          reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_BOOL         reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DT_DATETIME     reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    [               reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    IDENTIFIER      reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    ANY             reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    AS              reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    CLASS           reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    DISABLEOVERRIDE reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    ENABLEOVERRIDE  reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    FLAVOR          reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    INSTANCE        reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    METHOD          reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    OF              reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    PARAMETER       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    PRAGMA          reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    PROPERTY        reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    QUALIFIER       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    REFERENCE       reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    RESTRICTED      reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    SCHEMA          reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    SCOPE           reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    TOSUBCLASS      reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    TOINSTANCE      reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)
    TRANSLATABLE    reduce using rule 23 (classFeatureList -> classFeatureList classFeature .)


state 139

    (30) classFeature -> propertyDeclaration .

    }               reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_UINT8        reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_SINT8        reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_UINT16       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_SINT16       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_UINT32       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_SINT32       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_UINT64       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_SINT64       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_REAL32       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_REAL64       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_CHAR16       reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_STR          reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_BOOL         reduce using rule 30 (classFeature -> propertyDeclaration .)
    DT_DATETIME     reduce using rule 30 (classFeature -> propertyDeclaration .)
    [               reduce using rule 30 (classFeature -> propertyDeclaration .)
    IDENTIFIER      reduce using rule 30 (classFeature -> propertyDeclaration .)
    ANY             reduce using rule 30 (classFeature -> propertyDeclaration .)
    AS              reduce using rule 30 (classFeature -> propertyDeclaration .)
    CLASS           reduce using rule 30 (classFeature -> propertyDeclaration .)
    DISABLEOVERRIDE reduce using rule 30 (classFeature -> propertyDeclaration .)
    ENABLEOVERRIDE  reduce using rule 30 (classFeature -> propertyDeclaration .)
    FLAVOR          reduce using rule 30 (classFeature -> propertyDeclaration .)
    INSTANCE        reduce using rule 30 (classFeature -> propertyDeclaration .)
    METHOD          reduce using rule 30 (classFeature -> propertyDeclaration .)
    OF              reduce using rule 30 (classFeature -> propertyDeclaration .)
    PARAMETER       reduce using rule 30 (classFeature -> propertyDeclaration .)
    PRAGMA          reduce using rule 30 (classFeature -> propertyDeclaration .)
    PROPERTY        reduce using rule 30 (classFeature -> propertyDeclaration .)
    QUALIFIER       reduce using rule 30 (classFeature -> propertyDeclaration .)
    REFERENCE       reduce using rule 30 (classFeature -> propertyDeclaration .)
    RESTRICTED      reduce using rule 30 (classFeature -> propertyDeclaration .)
    SCHEMA          reduce using rule 30 (classFeature -> propertyDeclaration .)
    SCOPE           reduce using rule 30 (classFeature -> propertyDeclaration .)
    TOSUBCLASS      reduce using rule 30 (classFeature -> propertyDeclaration .)
    TOINSTANCE      reduce using rule 30 (classFeature -> propertyDeclaration .)
    TRANSLATABLE    reduce using rule 30 (classFeature -> propertyDeclaration .)


state 140

    (31) classFeature -> methodDeclaration .

    }               reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_UINT8        reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_SINT8        reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_UINT16       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_SINT16       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_UINT32       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_SINT32       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_UINT64       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_SINT64       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_REAL32       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_REAL64       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_CHAR16       reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_STR          reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_BOOL         reduce using rule 31 (classFeature -> methodDeclaration .)
    DT_DATETIME     reduce using rule 31 (classFeature -> methodDeclaration .)
    [               reduce using rule 31 (classFeature -> methodDeclaration .)
    IDENTIFIER      reduce using rule 31 (classFeature -> methodDeclaration .)
    ANY             reduce using rule 31 (classFeature -> methodDeclaration .)
    AS              reduce using rule 31 (classFeature -> methodDeclaration .)
    CLASS           reduce using rule 31 (classFeature -> methodDeclaration .)
    DISABLEOVERRIDE reduce using rule 31 (classFeature -> methodDeclaration .)
    ENABLEOVERRIDE  reduce using rule 31 (classFeature -> methodDeclaration .)
    FLAVOR          reduce using rule 31 (classFeature -> methodDeclaration .)
    INSTANCE        reduce using rule 31 (classFeature -> methodDeclaration .)
    METHOD          reduce using rule 31 (classFeature -> methodDeclaration .)
    OF              reduce using rule 31 (classFeature -> methodDeclaration .)
    PARAMETER       reduce using rule 31 (classFeature -> methodDeclaration .)
    PRAGMA          reduce using rule 31 (classFeature -> methodDeclaration .)
    PROPERTY        reduce using rule 31 (classFeature -> methodDeclaration .)
    QUALIFIER       reduce using rule 31 (classFeature -> methodDeclaration .)
    REFERENCE       reduce using rule 31 (classFeature -> methodDeclaration .)
    RESTRICTED      reduce using rule 31 (classFeature -> methodDeclaration .)
    SCHEMA          reduce using rule 31 (classFeature -> methodDeclaration .)
    SCOPE           reduce using rule 31 (classFeature -> methodDeclaration .)
    TOSUBCLASS      reduce using rule 31 (classFeature -> methodDeclaration .)
    TOINSTANCE      reduce using rule 31 (classFeature -> methodDeclaration .)
    TRANSLATABLE    reduce using rule 31 (classFeature -> methodDeclaration .)


state 141

    (32) classFeature -> referenceDeclaration .

    }               reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_UINT8        reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_SINT8        reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_UINT16       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_SINT16       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_UINT32       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_SINT32       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_UINT64       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_SINT64       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_REAL32       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_REAL64       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_CHAR16       reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_STR          reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_BOOL         reduce using rule 32 (classFeature -> referenceDeclaration .)
    DT_DATETIME     reduce using rule 32 (classFeature -> referenceDeclaration .)
    [               reduce using rule 32 (classFeature -> referenceDeclaration .)
    IDENTIFIER      reduce using rule 32 (classFeature -> referenceDeclaration .)
    ANY             reduce using rule 32 (classFeature -> referenceDeclaration .)
    AS              reduce using rule 32 (classFeature -> referenceDeclaration .)
    CLASS           reduce using rule 32 (classFeature -> referenceDeclaration .)
    DISABLEOVERRIDE reduce using rule 32 (classFeature -> referenceDeclaration .)
    ENABLEOVERRIDE  reduce using rule 32 (classFeature -> referenceDeclaration .)
    FLAVOR          reduce using rule 32 (classFeature -> referenceDeclaration .)
    INSTANCE        reduce using rule 32 (classFeature -> referenceDeclaration .)
    METHOD          reduce using rule 32 (classFeature -> referenceDeclaration .)
    OF              reduce using rule 32 (classFeature -> referenceDeclaration .)
    PARAMETER       reduce using rule 32 (classFeature -> referenceDeclaration .)
    PRAGMA          reduce using rule 32 (classFeature -> referenceDeclaration .)
    PROPERTY        reduce using rule 32 (classFeature -> referenceDeclaration .)
    QUALIFIER       reduce using rule 32 (classFeature -> referenceDeclaration .)
    REFERENCE       reduce using rule 32 (classFeature -> referenceDeclaration .)
    RESTRICTED      reduce using rule 32 (classFeature -> referenceDeclaration .)
    SCHEMA          reduce using rule 32 (classFeature -> referenceDeclaration .)
    SCOPE           reduce using rule 32 (classFeature -> referenceDeclaration .)
    TOSUBCLASS      reduce using rule 32 (classFeature -> referenceDeclaration .)
    TOINSTANCE      reduce using rule 32 (classFeature -> referenceDeclaration .)
    TRANSLATABLE    reduce using rule 32 (classFeature -> referenceDeclaration .)


state 142

    (48) propertyDeclaration -> propertyDeclaration_1 .

    }               reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_UINT8        reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_SINT8        reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_UINT16       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_SINT16       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_UINT32       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_SINT32       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_UINT64       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_SINT64       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_REAL32       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_REAL64       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_CHAR16       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_STR          reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_BOOL         reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DT_DATETIME     reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    [               reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    IDENTIFIER      reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    ANY             reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    AS              reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    CLASS           reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    DISABLEOVERRIDE reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    ENABLEOVERRIDE  reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    FLAVOR          reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    INSTANCE        reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    METHOD          reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    OF              reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    PARAMETER       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    PRAGMA          reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    PROPERTY        reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    QUALIFIER       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    REFERENCE       reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    RESTRICTED      reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    SCHEMA          reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    SCOPE           reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    TOSUBCLASS      reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    TOINSTANCE      reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)
    TRANSLATABLE    reduce using rule 48 (propertyDeclaration -> propertyDeclaration_1 .)


state 143

    (49) propertyDeclaration -> propertyDeclaration_2 .

    }               reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_UINT8        reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_SINT8        reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_UINT16       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_SINT16       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_UINT32       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_SINT32       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_UINT64       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_SINT64       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_REAL32       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_REAL64       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_CHAR16       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_STR          reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_BOOL         reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DT_DATETIME     reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    [               reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    IDENTIFIER      reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    ANY             reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    AS              reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    CLASS           reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    DISABLEOVERRIDE reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    ENABLEOVERRIDE  reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    FLAVOR          reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    INSTANCE        reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    METHOD          reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    OF              reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    PARAMETER       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    PRAGMA          reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    PROPERTY        reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    QUALIFIER       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    REFERENCE       reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    RESTRICTED      reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    SCHEMA          reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    SCOPE           reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    TOSUBCLASS      reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    TOINSTANCE      reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)
    TRANSLATABLE    reduce using rule 49 (propertyDeclaration -> propertyDeclaration_2 .)


state 144

    (50) propertyDeclaration -> propertyDeclaration_3 .

    }               reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_UINT8        reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_SINT8        reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_UINT16       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_SINT16       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_UINT32       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_SINT32       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_UINT64       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_SINT64       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_REAL32       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_REAL64       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_CHAR16       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_STR          reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_BOOL         reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DT_DATETIME     reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    [               reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    IDENTIFIER      reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    ANY             reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    AS              reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    CLASS           reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    DISABLEOVERRIDE reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    ENABLEOVERRIDE  reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    FLAVOR          reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    INSTANCE        reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    METHOD          reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    OF              reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    PARAMETER       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    PRAGMA          reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    PROPERTY        reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    QUALIFIER       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    REFERENCE       reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    RESTRICTED      reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    SCHEMA          reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    SCOPE           reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    TOSUBCLASS      reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    TOINSTANCE      reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)
    TRANSLATABLE    reduce using rule 50 (propertyDeclaration -> propertyDeclaration_3 .)


state 145

    (51) propertyDeclaration -> propertyDeclaration_4 .

    }               reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_UINT8        reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_SINT8        reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_UINT16       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_SINT16       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_UINT32       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_SINT32       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_UINT64       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_SINT64       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_REAL32       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_REAL64       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_CHAR16       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_STR          reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_BOOL         reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DT_DATETIME     reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    [               reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    IDENTIFIER      reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    ANY             reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    AS              reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    CLASS           reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    DISABLEOVERRIDE reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    ENABLEOVERRIDE  reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    FLAVOR          reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    INSTANCE        reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    METHOD          reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    OF              reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    PARAMETER       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    PRAGMA          reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    PROPERTY        reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    QUALIFIER       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    REFERENCE       reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    RESTRICTED      reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    SCHEMA          reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    SCOPE           reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    TOSUBCLASS      reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    TOINSTANCE      reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)
    TRANSLATABLE    reduce using rule 51 (propertyDeclaration -> propertyDeclaration_4 .)


state 146

    (52) propertyDeclaration -> propertyDeclaration_5 .

    }               reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_UINT8        reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_SINT8        reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_UINT16       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_SINT16       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_UINT32       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_SINT32       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_UINT64       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_SINT64       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_REAL32       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_REAL64       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_CHAR16       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_STR          reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_BOOL         reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DT_DATETIME     reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    [               reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    IDENTIFIER      reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    ANY             reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    AS              reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    CLASS           reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    DISABLEOVERRIDE reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    ENABLEOVERRIDE  reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    FLAVOR          reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    INSTANCE        reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    METHOD          reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    OF              reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    PARAMETER       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    PRAGMA          reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    PROPERTY        reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    QUALIFIER       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    REFERENCE       reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    RESTRICTED      reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    SCHEMA          reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    SCOPE           reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    TOSUBCLASS      reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    TOINSTANCE      reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)
    TRANSLATABLE    reduce using rule 52 (propertyDeclaration -> propertyDeclaration_5 .)


state 147

    (53) propertyDeclaration -> propertyDeclaration_6 .

    }               reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_UINT8        reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_SINT8        reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_UINT16       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_SINT16       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_UINT32       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_SINT32       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_UINT64       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_SINT64       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_REAL32       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_REAL64       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_CHAR16       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_STR          reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_BOOL         reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DT_DATETIME     reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    [               reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    IDENTIFIER      reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    ANY             reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    AS              reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    CLASS           reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    DISABLEOVERRIDE reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    ENABLEOVERRIDE  reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    FLAVOR          reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    INSTANCE        reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    METHOD          reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    OF              reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    PARAMETER       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    PRAGMA          reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    PROPERTY        reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    QUALIFIER       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    REFERENCE       reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    RESTRICTED      reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    SCHEMA          reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    SCOPE           reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    TOSUBCLASS      reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    TOINSTANCE      reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)
    TRANSLATABLE    reduce using rule 53 (propertyDeclaration -> propertyDeclaration_6 .)


state 148

    (54) propertyDeclaration -> propertyDeclaration_7 .

    }               reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_UINT8        reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_SINT8        reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_UINT16       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_SINT16       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_UINT32       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_SINT32       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_UINT64       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_SINT64       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_REAL32       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_REAL64       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_CHAR16       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_STR          reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_BOOL         reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DT_DATETIME     reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    [               reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    IDENTIFIER      reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    ANY             reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    AS              reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    CLASS           reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    DISABLEOVERRIDE reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    ENABLEOVERRIDE  reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    FLAVOR          reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    INSTANCE        reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    METHOD          reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    OF              reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    PARAMETER       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    PRAGMA          reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    PROPERTY        reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    QUALIFIER       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    REFERENCE       reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    RESTRICTED      reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    SCHEMA          reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    SCOPE           reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    TOSUBCLASS      reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    TOINSTANCE      reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)
    TRANSLATABLE    reduce using rule 54 (propertyDeclaration -> propertyDeclaration_7 .)


state 149

    (55) propertyDeclaration -> propertyDeclaration_8 .

    }               reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_UINT8        reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_SINT8        reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_UINT16       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_SINT16       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_UINT32       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_SINT32       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_UINT64       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_SINT64       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_REAL32       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_REAL64       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_CHAR16       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_STR          reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_BOOL         reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DT_DATETIME     reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    [               reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    IDENTIFIER      reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    ANY             reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    AS              reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    CLASS           reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    DISABLEOVERRIDE reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    ENABLEOVERRIDE  reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    FLAVOR          reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    INSTANCE        reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    METHOD          reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    OF              reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    PARAMETER       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    PRAGMA          reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    PROPERTY        reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    QUALIFIER       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    REFERENCE       reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    RESTRICTED      reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    SCHEMA          reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    SCOPE           reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    TOSUBCLASS      reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    TOINSTANCE      reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)
    TRANSLATABLE    reduce using rule 55 (propertyDeclaration -> propertyDeclaration_8 .)


state 150

    (68) methodDeclaration -> dataType . methodName ( ) ;
    (69) methodDeclaration -> dataType . methodName ( parameterList ) ;
    (56) propertyDeclaration_1 -> dataType . propertyName ;
    (57) propertyDeclaration_2 -> dataType . propertyName defaultValue ;
    (58) propertyDeclaration_3 -> dataType . propertyName array ;
    (59) propertyDeclaration_4 -> dataType . propertyName array defaultValue ;
    (173) identifier -> dataType .
    (74) methodName -> . identifier
    (72) propertyName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    REF             reduce using rule 173 (identifier -> dataType .)
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    dataType                       shift and go to state 26
    methodName                     shift and go to state 186
    propertyName                   shift and go to state 187
    identifier                     shift and go to state 188

state 151

    (70) methodDeclaration -> qualifierList . dataType methodName ( ) ;
    (71) methodDeclaration -> qualifierList . dataType methodName ( parameterList ) ;
    (66) referenceDeclaration -> qualifierList . objectRef referenceName ;
    (67) referenceDeclaration -> qualifierList . objectRef referenceName defaultValue ;
    (60) propertyDeclaration_5 -> qualifierList . dataType propertyName ;
    (61) propertyDeclaration_6 -> qualifierList . dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> qualifierList . dataType propertyName array ;
    (63) propertyDeclaration_8 -> qualifierList . dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    dataType                       shift and go to state 189
    objectRef                      shift and go to state 190
    className                      shift and go to state 136
    identifier                     shift and go to state 21

state 152

    (64) referenceDeclaration -> objectRef . referenceName ;
    (65) referenceDeclaration -> objectRef . referenceName defaultValue ;
    (73) referenceName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    referenceName                  shift and go to state 191
    identifier                     shift and go to state 192
    dataType                       shift and go to state 26

state 153

    (15) classDeclaration -> CLASS className superClass { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 193
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    qualifierList                  shift and go to state 151
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 154

    (16) classDeclaration -> CLASS className alias { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 194
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    qualifierList                  shift and go to state 151
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 155

    (17) classDeclaration -> CLASS className alias superClass { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 195
    empty                          shift and go to state 89

state 156

    (28) aliasIdentifier -> $ identifier .

    {               reduce using rule 28 (aliasIdentifier -> $ identifier .)
    :               reduce using rule 28 (aliasIdentifier -> $ identifier .)
    ,               reduce using rule 28 (aliasIdentifier -> $ identifier .)
    ;               reduce using rule 28 (aliasIdentifier -> $ identifier .)


state 157

    (18) classDeclaration -> qualifierList CLASS className { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 196
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    qualifierList                  shift and go to state 151
    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 158

    (19) classDeclaration -> qualifierList CLASS className superClass { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 197
    empty                          shift and go to state 89

state 159

    (20) classDeclaration -> qualifierList CLASS className alias { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 198
    empty                          shift and go to state 89

state 160

    (21) classDeclaration -> qualifierList CLASS className alias superClass . { classFeatureList } ;

    {               shift and go to state 199


state 161

    (159) instanceDeclaration -> qualifierList INSTANCE OF className { . valueInitializerList } ;
    (161) valueInitializerList -> . valueInitializer
    (162) valueInitializerList -> . valueInitializerList valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifierList                  shift and go to state 174
    valueInitializerList           shift and go to state 200
    valueInitializer               shift and go to state 172
    identifier                     shift and go to state 173
    dataType                       shift and go to state 26

state 162

    (160) instanceDeclaration -> qualifierList INSTANCE OF className alias . { valueInitializerList } ;

    {               shift and go to state 201


state 163

    (130) qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .

    #               reduce using rule 130 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .)
    CLASS           reduce using rule 130 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .)
    QUALIFIER       reduce using rule 130 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .)
    INSTANCE        reduce using rule 130 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .)
    [               reduce using rule 130 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .)
    $end            reduce using rule 130 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope ; .)


state 164

    (131) qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor . ;

    ;               shift and go to state 202


state 165

    (154) defaultFlavor -> , . FLAVOR ( flavorListWithComma )

    FLAVOR          shift and go to state 203


state 166

    (141) scope -> , SCOPE . ( metaElementList )

    (               shift and go to state 204


state 167

    (137) qualifierType_1 -> : dataType array .
    (138) qualifierType_1 -> : dataType array . defaultValue
    (107) defaultValue -> . = initializer

    ,               reduce using rule 137 (qualifierType_1 -> : dataType array .)
    =               shift and go to state 170

    defaultValue                   shift and go to state 205

state 168

    (140) qualifierType_2 -> : dataType defaultValue .

    ,               reduce using rule 140 (qualifierType_2 -> : dataType defaultValue .)


state 169

    (105) array -> [ . ]
    (106) array -> [ . integerValue ]
    (123) integerValue -> . binaryValue
    (124) integerValue -> . octalValue
    (125) integerValue -> . decimalValue
    (126) integerValue -> . hexValue

    ]               shift and go to state 206
    binaryValue     shift and go to state 123
    octalValue      shift and go to state 124
    decimalValue    shift and go to state 125
    hexValue        shift and go to state 126

    integerValue                   shift and go to state 207

state 170

    (107) defaultValue -> = . initializer
    (108) initializer -> . constantValue
    (109) initializer -> . arrayInitializer
    (110) initializer -> . referenceInitializer
    (117) constantValue -> . integerValue
    (118) constantValue -> . floatValue
    (119) constantValue -> . charValue
    (120) constantValue -> . stringValueList
    (121) constantValue -> . booleanValue
    (122) constantValue -> . nullValue
    (111) arrayInitializer -> . { constantValueList }
    (112) arrayInitializer -> . { }
    (127) referenceInitializer -> . objectHandle
    (128) referenceInitializer -> . aliasIdentifier
    (123) integerValue -> . binaryValue
    (124) integerValue -> . octalValue
    (125) integerValue -> . decimalValue
    (126) integerValue -> . hexValue
    (115) stringValueList -> . stringValue
    (116) stringValueList -> . stringValueList stringValue
    (165) booleanValue -> . FALSE
    (166) booleanValue -> . TRUE
    (167) nullValue -> . NULL
    (129) objectHandle -> . identifier
    (28) aliasIdentifier -> . $ identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    floatValue      shift and go to state 118
    charValue       shift and go to state 119
    {               shift and go to state 86
    binaryValue     shift and go to state 123
    octalValue      shift and go to state 124
    decimalValue    shift and go to state 125
    hexValue        shift and go to state 126
    stringValue     shift and go to state 127
    FALSE           shift and go to state 128
    TRUE            shift and go to state 129
    NULL            shift and go to state 130
    $               shift and go to state 95
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    initializer                    shift and go to state 208
    constantValue                  shift and go to state 209
    arrayInitializer               shift and go to state 210
    referenceInitializer           shift and go to state 211
    integerValue                   shift and go to state 117
    stringValueList                shift and go to state 120
    booleanValue                   shift and go to state 121
    nullValue                      shift and go to state 122
    objectHandle                   shift and go to state 212
    aliasIdentifier                shift and go to state 213
    identifier                     shift and go to state 214
    dataType                       shift and go to state 26

state 171

    (157) instanceDeclaration -> INSTANCE OF className { valueInitializerList . } ;
    (162) valueInitializerList -> valueInitializerList . valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    }               shift and go to state 215
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    valueInitializer               shift and go to state 216
    identifier                     shift and go to state 173
    qualifierList                  shift and go to state 174
    dataType                       shift and go to state 26

state 172

    (161) valueInitializerList -> valueInitializer .

    }               reduce using rule 161 (valueInitializerList -> valueInitializer .)
    IDENTIFIER      reduce using rule 161 (valueInitializerList -> valueInitializer .)
    ANY             reduce using rule 161 (valueInitializerList -> valueInitializer .)
    AS              reduce using rule 161 (valueInitializerList -> valueInitializer .)
    CLASS           reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DISABLEOVERRIDE reduce using rule 161 (valueInitializerList -> valueInitializer .)
    ENABLEOVERRIDE  reduce using rule 161 (valueInitializerList -> valueInitializer .)
    FLAVOR          reduce using rule 161 (valueInitializerList -> valueInitializer .)
    INSTANCE        reduce using rule 161 (valueInitializerList -> valueInitializer .)
    METHOD          reduce using rule 161 (valueInitializerList -> valueInitializer .)
    OF              reduce using rule 161 (valueInitializerList -> valueInitializer .)
    PARAMETER       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    PRAGMA          reduce using rule 161 (valueInitializerList -> valueInitializer .)
    PROPERTY        reduce using rule 161 (valueInitializerList -> valueInitializer .)
    QUALIFIER       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    REFERENCE       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    RESTRICTED      reduce using rule 161 (valueInitializerList -> valueInitializer .)
    SCHEMA          reduce using rule 161 (valueInitializerList -> valueInitializer .)
    SCOPE           reduce using rule 161 (valueInitializerList -> valueInitializer .)
    TOSUBCLASS      reduce using rule 161 (valueInitializerList -> valueInitializer .)
    TOINSTANCE      reduce using rule 161 (valueInitializerList -> valueInitializer .)
    TRANSLATABLE    reduce using rule 161 (valueInitializerList -> valueInitializer .)
    [               reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_UINT8        reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_SINT8        reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_UINT16       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_SINT16       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_UINT32       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_SINT32       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_UINT64       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_SINT64       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_REAL32       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_REAL64       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_CHAR16       reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_STR          reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_BOOL         reduce using rule 161 (valueInitializerList -> valueInitializer .)
    DT_DATETIME     reduce using rule 161 (valueInitializerList -> valueInitializer .)


state 173

    (163) valueInitializer -> identifier . defaultValue ;
    (107) defaultValue -> . = initializer

    =               shift and go to state 170

    defaultValue                   shift and go to state 217

state 174

    (164) valueInitializer -> qualifierList . identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    identifier                     shift and go to state 218
    dataType                       shift and go to state 26

state 175

    (158) instanceDeclaration -> INSTANCE OF className alias { . valueInitializerList } ;
    (161) valueInitializerList -> . valueInitializer
    (162) valueInitializerList -> . valueInitializerList valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    valueInitializerList           shift and go to state 219
    valueInitializer               shift and go to state 172
    identifier                     shift and go to state 173
    qualifierList                  shift and go to state 174
    dataType                       shift and go to state 26

state 176

    (25) qualifierListEmpty -> qualifierListEmpty , qualifier .

    ]               reduce using rule 25 (qualifierListEmpty -> qualifierListEmpty , qualifier .)
    ,               reduce using rule 25 (qualifierListEmpty -> qualifierListEmpty , qualifier .)


state 177

    (39) flavorList -> flavorList flavor .

    ENABLEOVERRIDE  reduce using rule 39 (flavorList -> flavorList flavor .)
    DISABLEOVERRIDE reduce using rule 39 (flavorList -> flavorList flavor .)
    RESTRICTED      reduce using rule 39 (flavorList -> flavorList flavor .)
    TOSUBCLASS      reduce using rule 39 (flavorList -> flavorList flavor .)
    TOINSTANCE      reduce using rule 39 (flavorList -> flavorList flavor .)
    TRANSLATABLE    reduce using rule 39 (flavorList -> flavorList flavor .)
    ]               reduce using rule 39 (flavorList -> flavorList flavor .)
    ,               reduce using rule 39 (flavorList -> flavorList flavor .)


state 178

    (37) qualifier -> qualifierName qualifierParameter : flavorList .
    (39) flavorList -> flavorList . flavor
    (42) flavor -> . ENABLEOVERRIDE
    (43) flavor -> . DISABLEOVERRIDE
    (44) flavor -> . RESTRICTED
    (45) flavor -> . TOSUBCLASS
    (46) flavor -> . TOINSTANCE
    (47) flavor -> . TRANSLATABLE

    ]               reduce using rule 37 (qualifier -> qualifierName qualifierParameter : flavorList .)
    ,               reduce using rule 37 (qualifier -> qualifierName qualifierParameter : flavorList .)
    ENABLEOVERRIDE  shift and go to state 109
    DISABLEOVERRIDE shift and go to state 110
    RESTRICTED      shift and go to state 111
    TOSUBCLASS      shift and go to state 112
    TOINSTANCE      shift and go to state 113
    TRANSLATABLE    shift and go to state 114

    flavor                         shift and go to state 177

state 179

    (40) qualifierParameter -> ( constantValue ) .

    :               reduce using rule 40 (qualifierParameter -> ( constantValue ) .)
    ]               reduce using rule 40 (qualifierParameter -> ( constantValue ) .)
    ,               reduce using rule 40 (qualifierParameter -> ( constantValue ) .)


state 180

    (116) stringValueList -> stringValueList stringValue .

    stringValue     reduce using rule 116 (stringValueList -> stringValueList stringValue .)
    )               reduce using rule 116 (stringValueList -> stringValueList stringValue .)
    }               reduce using rule 116 (stringValueList -> stringValueList stringValue .)
    ,               reduce using rule 116 (stringValueList -> stringValueList stringValue .)
    ;               reduce using rule 116 (stringValueList -> stringValueList stringValue .)


state 181

    (111) arrayInitializer -> { constantValueList } .

    :               reduce using rule 111 (arrayInitializer -> { constantValueList } .)
    ]               reduce using rule 111 (arrayInitializer -> { constantValueList } .)
    ,               reduce using rule 111 (arrayInitializer -> { constantValueList } .)
    ;               reduce using rule 111 (arrayInitializer -> { constantValueList } .)


state 182

    (114) constantValueList -> constantValueList , . constantValue
    (117) constantValue -> . integerValue
    (118) constantValue -> . floatValue
    (119) constantValue -> . charValue
    (120) constantValue -> . stringValueList
    (121) constantValue -> . booleanValue
    (122) constantValue -> . nullValue
    (123) integerValue -> . binaryValue
    (124) integerValue -> . octalValue
    (125) integerValue -> . decimalValue
    (126) integerValue -> . hexValue
    (115) stringValueList -> . stringValue
    (116) stringValueList -> . stringValueList stringValue
    (165) booleanValue -> . FALSE
    (166) booleanValue -> . TRUE
    (167) nullValue -> . NULL

    floatValue      shift and go to state 118
    charValue       shift and go to state 119
    binaryValue     shift and go to state 123
    octalValue      shift and go to state 124
    decimalValue    shift and go to state 125
    hexValue        shift and go to state 126
    stringValue     shift and go to state 127
    FALSE           shift and go to state 128
    TRUE            shift and go to state 129
    NULL            shift and go to state 130

    constantValue                  shift and go to state 220
    integerValue                   shift and go to state 117
    stringValueList                shift and go to state 120
    booleanValue                   shift and go to state 121
    nullValue                      shift and go to state 122

state 183

    (11) compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .

    #               reduce using rule 11 (compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .)
    CLASS           reduce using rule 11 (compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .)
    QUALIFIER       reduce using rule 11 (compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .)
    INSTANCE        reduce using rule 11 (compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .)
    [               reduce using rule 11 (compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .)
    $end            reduce using rule 11 (compilerDirective -> # PRAGMA pragmaName ( pragmaParameter ) .)


state 184

    (89) objectRef -> className REF .

    IDENTIFIER      reduce using rule 89 (objectRef -> className REF .)
    ANY             reduce using rule 89 (objectRef -> className REF .)
    AS              reduce using rule 89 (objectRef -> className REF .)
    CLASS           reduce using rule 89 (objectRef -> className REF .)
    DISABLEOVERRIDE reduce using rule 89 (objectRef -> className REF .)
    ENABLEOVERRIDE  reduce using rule 89 (objectRef -> className REF .)
    FLAVOR          reduce using rule 89 (objectRef -> className REF .)
    INSTANCE        reduce using rule 89 (objectRef -> className REF .)
    METHOD          reduce using rule 89 (objectRef -> className REF .)
    OF              reduce using rule 89 (objectRef -> className REF .)
    PARAMETER       reduce using rule 89 (objectRef -> className REF .)
    PRAGMA          reduce using rule 89 (objectRef -> className REF .)
    PROPERTY        reduce using rule 89 (objectRef -> className REF .)
    QUALIFIER       reduce using rule 89 (objectRef -> className REF .)
    REFERENCE       reduce using rule 89 (objectRef -> className REF .)
    RESTRICTED      reduce using rule 89 (objectRef -> className REF .)
    SCHEMA          reduce using rule 89 (objectRef -> className REF .)
    SCOPE           reduce using rule 89 (objectRef -> className REF .)
    TOSUBCLASS      reduce using rule 89 (objectRef -> className REF .)
    TOINSTANCE      reduce using rule 89 (objectRef -> className REF .)
    TRANSLATABLE    reduce using rule 89 (objectRef -> className REF .)
    DT_UINT8        reduce using rule 89 (objectRef -> className REF .)
    DT_SINT8        reduce using rule 89 (objectRef -> className REF .)
    DT_UINT16       reduce using rule 89 (objectRef -> className REF .)
    DT_SINT16       reduce using rule 89 (objectRef -> className REF .)
    DT_UINT32       reduce using rule 89 (objectRef -> className REF .)
    DT_SINT32       reduce using rule 89 (objectRef -> className REF .)
    DT_UINT64       reduce using rule 89 (objectRef -> className REF .)
    DT_SINT64       reduce using rule 89 (objectRef -> className REF .)
    DT_REAL32       reduce using rule 89 (objectRef -> className REF .)
    DT_REAL64       reduce using rule 89 (objectRef -> className REF .)
    DT_CHAR16       reduce using rule 89 (objectRef -> className REF .)
    DT_STR          reduce using rule 89 (objectRef -> className REF .)
    DT_BOOL         reduce using rule 89 (objectRef -> className REF .)
    DT_DATETIME     reduce using rule 89 (objectRef -> className REF .)


state 185

    (14) classDeclaration -> CLASS className { classFeatureList } ; .

    #               reduce using rule 14 (classDeclaration -> CLASS className { classFeatureList } ; .)
    CLASS           reduce using rule 14 (classDeclaration -> CLASS className { classFeatureList } ; .)
    QUALIFIER       reduce using rule 14 (classDeclaration -> CLASS className { classFeatureList } ; .)
    INSTANCE        reduce using rule 14 (classDeclaration -> CLASS className { classFeatureList } ; .)
    [               reduce using rule 14 (classDeclaration -> CLASS className { classFeatureList } ; .)
    $end            reduce using rule 14 (classDeclaration -> CLASS className { classFeatureList } ; .)


state 186

    (68) methodDeclaration -> dataType methodName . ( ) ;
    (69) methodDeclaration -> dataType methodName . ( parameterList ) ;

    (               shift and go to state 221


state 187

    (56) propertyDeclaration_1 -> dataType propertyName . ;
    (57) propertyDeclaration_2 -> dataType propertyName . defaultValue ;
    (58) propertyDeclaration_3 -> dataType propertyName . array ;
    (59) propertyDeclaration_4 -> dataType propertyName . array defaultValue ;
    (107) defaultValue -> . = initializer
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]

    ;               shift and go to state 222
    =               shift and go to state 170
    [               shift and go to state 169

    defaultValue                   shift and go to state 223
    array                          shift and go to state 224

state 188

    (74) methodName -> identifier .
    (72) propertyName -> identifier .

    (               reduce using rule 74 (methodName -> identifier .)
    ;               reduce using rule 72 (propertyName -> identifier .)
    =               reduce using rule 72 (propertyName -> identifier .)
    [               reduce using rule 72 (propertyName -> identifier .)


state 189

    (70) methodDeclaration -> qualifierList dataType . methodName ( ) ;
    (71) methodDeclaration -> qualifierList dataType . methodName ( parameterList ) ;
    (60) propertyDeclaration_5 -> qualifierList dataType . propertyName ;
    (61) propertyDeclaration_6 -> qualifierList dataType . propertyName defaultValue ;
    (62) propertyDeclaration_7 -> qualifierList dataType . propertyName array ;
    (63) propertyDeclaration_8 -> qualifierList dataType . propertyName array defaultValue ;
    (173) identifier -> dataType .
    (74) methodName -> . identifier
    (72) propertyName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    REF             reduce using rule 173 (identifier -> dataType .)
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    dataType                       shift and go to state 26
    methodName                     shift and go to state 225
    propertyName                   shift and go to state 226
    identifier                     shift and go to state 188

state 190

    (66) referenceDeclaration -> qualifierList objectRef . referenceName ;
    (67) referenceDeclaration -> qualifierList objectRef . referenceName defaultValue ;
    (73) referenceName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    referenceName                  shift and go to state 227
    identifier                     shift and go to state 192
    dataType                       shift and go to state 26

state 191

    (64) referenceDeclaration -> objectRef referenceName . ;
    (65) referenceDeclaration -> objectRef referenceName . defaultValue ;
    (107) defaultValue -> . = initializer

    ;               shift and go to state 228
    =               shift and go to state 170

    defaultValue                   shift and go to state 229

state 192

    (73) referenceName -> identifier .

    ;               reduce using rule 73 (referenceName -> identifier .)
    =               reduce using rule 73 (referenceName -> identifier .)


state 193

    (15) classDeclaration -> CLASS className superClass { classFeatureList } . ;

    ;               shift and go to state 230


state 194

    (16) classDeclaration -> CLASS className alias { classFeatureList } . ;

    ;               shift and go to state 231


state 195

    (17) classDeclaration -> CLASS className alias superClass { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 232
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    qualifierList                  shift and go to state 151
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 196

    (18) classDeclaration -> qualifierList CLASS className { classFeatureList } . ;

    ;               shift and go to state 233


state 197

    (19) classDeclaration -> qualifierList CLASS className superClass { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 234
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    qualifierList                  shift and go to state 151
    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 198

    (20) classDeclaration -> qualifierList CLASS className alias { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 235
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    qualifierList                  shift and go to state 151
    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 199

    (21) classDeclaration -> qualifierList CLASS className alias superClass { . classFeatureList } ;
    (22) classFeatureList -> . empty
    (23) classFeatureList -> . classFeatureList classFeature
    (190) empty -> .

    }               reduce using rule 190 (empty -> .)
    DT_UINT8        reduce using rule 190 (empty -> .)
    DT_SINT8        reduce using rule 190 (empty -> .)
    DT_UINT16       reduce using rule 190 (empty -> .)
    DT_SINT16       reduce using rule 190 (empty -> .)
    DT_UINT32       reduce using rule 190 (empty -> .)
    DT_SINT32       reduce using rule 190 (empty -> .)
    DT_UINT64       reduce using rule 190 (empty -> .)
    DT_SINT64       reduce using rule 190 (empty -> .)
    DT_REAL32       reduce using rule 190 (empty -> .)
    DT_REAL64       reduce using rule 190 (empty -> .)
    DT_CHAR16       reduce using rule 190 (empty -> .)
    DT_STR          reduce using rule 190 (empty -> .)
    DT_BOOL         reduce using rule 190 (empty -> .)
    DT_DATETIME     reduce using rule 190 (empty -> .)
    [               reduce using rule 190 (empty -> .)
    IDENTIFIER      reduce using rule 190 (empty -> .)
    ANY             reduce using rule 190 (empty -> .)
    AS              reduce using rule 190 (empty -> .)
    CLASS           reduce using rule 190 (empty -> .)
    DISABLEOVERRIDE reduce using rule 190 (empty -> .)
    ENABLEOVERRIDE  reduce using rule 190 (empty -> .)
    FLAVOR          reduce using rule 190 (empty -> .)
    INSTANCE        reduce using rule 190 (empty -> .)
    METHOD          reduce using rule 190 (empty -> .)
    OF              reduce using rule 190 (empty -> .)
    PARAMETER       reduce using rule 190 (empty -> .)
    PRAGMA          reduce using rule 190 (empty -> .)
    PROPERTY        reduce using rule 190 (empty -> .)
    QUALIFIER       reduce using rule 190 (empty -> .)
    REFERENCE       reduce using rule 190 (empty -> .)
    RESTRICTED      reduce using rule 190 (empty -> .)
    SCHEMA          reduce using rule 190 (empty -> .)
    SCOPE           reduce using rule 190 (empty -> .)
    TOSUBCLASS      reduce using rule 190 (empty -> .)
    TOINSTANCE      reduce using rule 190 (empty -> .)
    TRANSLATABLE    reduce using rule 190 (empty -> .)

    classFeatureList               shift and go to state 236
    empty                          shift and go to state 89

state 200

    (159) instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList . } ;
    (162) valueInitializerList -> valueInitializerList . valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    }               shift and go to state 237
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifierList                  shift and go to state 174
    valueInitializer               shift and go to state 216
    identifier                     shift and go to state 173
    dataType                       shift and go to state 26

state 201

    (160) instanceDeclaration -> qualifierList INSTANCE OF className alias { . valueInitializerList } ;
    (161) valueInitializerList -> . valueInitializer
    (162) valueInitializerList -> . valueInitializerList valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifierList                  shift and go to state 174
    valueInitializerList           shift and go to state 238
    valueInitializer               shift and go to state 172
    identifier                     shift and go to state 173
    dataType                       shift and go to state 26

state 202

    (131) qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .

    #               reduce using rule 131 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .)
    CLASS           reduce using rule 131 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .)
    QUALIFIER       reduce using rule 131 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .)
    INSTANCE        reduce using rule 131 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .)
    [               reduce using rule 131 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .)
    $end            reduce using rule 131 (qualifierDeclaration -> QUALIFIER qualifierName qualifierType scope defaultFlavor ; .)


state 203

    (154) defaultFlavor -> , FLAVOR . ( flavorListWithComma )

    (               shift and go to state 239


state 204

    (141) scope -> , SCOPE ( . metaElementList )
    (142) metaElementList -> . metaElement
    (143) metaElementList -> . metaElementList , metaElement
    (144) metaElement -> . SCHEMA
    (145) metaElement -> . CLASS
    (146) metaElement -> . ASSOCIATION
    (147) metaElement -> . INDICATION
    (148) metaElement -> . QUALIFIER
    (149) metaElement -> . PROPERTY
    (150) metaElement -> . REFERENCE
    (151) metaElement -> . METHOD
    (152) metaElement -> . PARAMETER
    (153) metaElement -> . ANY

    SCHEMA          shift and go to state 242
    CLASS           shift and go to state 243
    ASSOCIATION     shift and go to state 244
    INDICATION      shift and go to state 245
    QUALIFIER       shift and go to state 246
    PROPERTY        shift and go to state 247
    REFERENCE       shift and go to state 248
    METHOD          shift and go to state 249
    PARAMETER       shift and go to state 250
    ANY             shift and go to state 251

    metaElementList                shift and go to state 240
    metaElement                    shift and go to state 241

state 205

    (138) qualifierType_1 -> : dataType array defaultValue .

    ,               reduce using rule 138 (qualifierType_1 -> : dataType array defaultValue .)


state 206

    (105) array -> [ ] .

    =               reduce using rule 105 (array -> [ ] .)
    ,               reduce using rule 105 (array -> [ ] .)
    ;               reduce using rule 105 (array -> [ ] .)
    )               reduce using rule 105 (array -> [ ] .)


state 207

    (106) array -> [ integerValue . ]

    ]               shift and go to state 252


state 208

    (107) defaultValue -> = initializer .

    ,               reduce using rule 107 (defaultValue -> = initializer .)
    ;               reduce using rule 107 (defaultValue -> = initializer .)


state 209

    (108) initializer -> constantValue .

    ,               reduce using rule 108 (initializer -> constantValue .)
    ;               reduce using rule 108 (initializer -> constantValue .)


state 210

    (109) initializer -> arrayInitializer .

    ,               reduce using rule 109 (initializer -> arrayInitializer .)
    ;               reduce using rule 109 (initializer -> arrayInitializer .)


state 211

    (110) initializer -> referenceInitializer .

    ,               reduce using rule 110 (initializer -> referenceInitializer .)
    ;               reduce using rule 110 (initializer -> referenceInitializer .)


state 212

    (127) referenceInitializer -> objectHandle .

    ,               reduce using rule 127 (referenceInitializer -> objectHandle .)
    ;               reduce using rule 127 (referenceInitializer -> objectHandle .)


state 213

    (128) referenceInitializer -> aliasIdentifier .

    ,               reduce using rule 128 (referenceInitializer -> aliasIdentifier .)
    ;               reduce using rule 128 (referenceInitializer -> aliasIdentifier .)


state 214

    (129) objectHandle -> identifier .

    ,               reduce using rule 129 (objectHandle -> identifier .)
    ;               reduce using rule 129 (objectHandle -> identifier .)


state 215

    (157) instanceDeclaration -> INSTANCE OF className { valueInitializerList } . ;

    ;               shift and go to state 253


state 216

    (162) valueInitializerList -> valueInitializerList valueInitializer .

    }               reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    IDENTIFIER      reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    ANY             reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    AS              reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    CLASS           reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DISABLEOVERRIDE reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    ENABLEOVERRIDE  reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    FLAVOR          reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    INSTANCE        reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    METHOD          reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    OF              reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    PARAMETER       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    PRAGMA          reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    PROPERTY        reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    QUALIFIER       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    REFERENCE       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    RESTRICTED      reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    SCHEMA          reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    SCOPE           reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    TOSUBCLASS      reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    TOINSTANCE      reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    TRANSLATABLE    reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    [               reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_UINT8        reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_SINT8        reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_UINT16       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_SINT16       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_UINT32       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_SINT32       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_UINT64       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_SINT64       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_REAL32       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_REAL64       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_CHAR16       reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_STR          reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_BOOL         reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)
    DT_DATETIME     reduce using rule 162 (valueInitializerList -> valueInitializerList valueInitializer .)


state 217

    (163) valueInitializer -> identifier defaultValue . ;

    ;               shift and go to state 254


state 218

    (164) valueInitializer -> qualifierList identifier . defaultValue ;
    (107) defaultValue -> . = initializer

    =               shift and go to state 170

    defaultValue                   shift and go to state 255

state 219

    (158) instanceDeclaration -> INSTANCE OF className alias { valueInitializerList . } ;
    (162) valueInitializerList -> valueInitializerList . valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    }               shift and go to state 256
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    valueInitializer               shift and go to state 216
    identifier                     shift and go to state 173
    qualifierList                  shift and go to state 174
    dataType                       shift and go to state 26

state 220

    (114) constantValueList -> constantValueList , constantValue .

    }               reduce using rule 114 (constantValueList -> constantValueList , constantValue .)
    ,               reduce using rule 114 (constantValueList -> constantValueList , constantValue .)


state 221

    (68) methodDeclaration -> dataType methodName ( . ) ;
    (69) methodDeclaration -> dataType methodName ( . parameterList ) ;
    (90) parameterList -> . parameter
    (91) parameterList -> . parameterList , parameter
    (92) parameter -> . parameter_1
    (93) parameter -> . parameter_2
    (94) parameter -> . parameter_3
    (95) parameter -> . parameter_4
    (96) parameter_1 -> . dataType parameterName
    (97) parameter_1 -> . dataType parameterName array
    (98) parameter_2 -> . qualifierList dataType parameterName
    (99) parameter_2 -> . qualifierList dataType parameterName array
    (100) parameter_3 -> . objectRef parameterName
    (101) parameter_3 -> . objectRef parameterName array
    (102) parameter_4 -> . qualifierList objectRef parameterName
    (103) parameter_4 -> . qualifierList objectRef parameterName array
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    )               shift and go to state 258
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    dataType                       shift and go to state 257
    parameterList                  shift and go to state 259
    parameter                      shift and go to state 260
    parameter_1                    shift and go to state 261
    parameter_2                    shift and go to state 262
    parameter_3                    shift and go to state 263
    parameter_4                    shift and go to state 264
    qualifierList                  shift and go to state 265
    objectRef                      shift and go to state 266
    className                      shift and go to state 136
    identifier                     shift and go to state 21

state 222

    (56) propertyDeclaration_1 -> dataType propertyName ; .

    }               reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_UINT8        reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_SINT8        reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_UINT16       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_SINT16       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_UINT32       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_SINT32       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_UINT64       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_SINT64       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_REAL32       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_REAL64       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_CHAR16       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_STR          reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_BOOL         reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DT_DATETIME     reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    [               reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    IDENTIFIER      reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    ANY             reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    AS              reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    CLASS           reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    DISABLEOVERRIDE reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    ENABLEOVERRIDE  reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    FLAVOR          reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    INSTANCE        reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    METHOD          reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    OF              reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    PARAMETER       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    PRAGMA          reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    PROPERTY        reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    QUALIFIER       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    REFERENCE       reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    RESTRICTED      reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    SCHEMA          reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    SCOPE           reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    TOSUBCLASS      reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    TOINSTANCE      reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)
    TRANSLATABLE    reduce using rule 56 (propertyDeclaration_1 -> dataType propertyName ; .)


state 223

    (57) propertyDeclaration_2 -> dataType propertyName defaultValue . ;

    ;               shift and go to state 267


state 224

    (58) propertyDeclaration_3 -> dataType propertyName array . ;
    (59) propertyDeclaration_4 -> dataType propertyName array . defaultValue ;
    (107) defaultValue -> . = initializer

    ;               shift and go to state 268
    =               shift and go to state 170

    defaultValue                   shift and go to state 269

state 225

    (70) methodDeclaration -> qualifierList dataType methodName . ( ) ;
    (71) methodDeclaration -> qualifierList dataType methodName . ( parameterList ) ;

    (               shift and go to state 270


state 226

    (60) propertyDeclaration_5 -> qualifierList dataType propertyName . ;
    (61) propertyDeclaration_6 -> qualifierList dataType propertyName . defaultValue ;
    (62) propertyDeclaration_7 -> qualifierList dataType propertyName . array ;
    (63) propertyDeclaration_8 -> qualifierList dataType propertyName . array defaultValue ;
    (107) defaultValue -> . = initializer
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]

    ;               shift and go to state 271
    =               shift and go to state 170
    [               shift and go to state 169

    defaultValue                   shift and go to state 272
    array                          shift and go to state 273

state 227

    (66) referenceDeclaration -> qualifierList objectRef referenceName . ;
    (67) referenceDeclaration -> qualifierList objectRef referenceName . defaultValue ;
    (107) defaultValue -> . = initializer

    ;               shift and go to state 274
    =               shift and go to state 170

    defaultValue                   shift and go to state 275

state 228

    (64) referenceDeclaration -> objectRef referenceName ; .

    }               reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_UINT8        reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_SINT8        reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_UINT16       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_SINT16       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_UINT32       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_SINT32       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_UINT64       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_SINT64       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_REAL32       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_REAL64       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_CHAR16       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_STR          reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_BOOL         reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DT_DATETIME     reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    [               reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    IDENTIFIER      reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    ANY             reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    AS              reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    CLASS           reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    DISABLEOVERRIDE reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    ENABLEOVERRIDE  reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    FLAVOR          reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    INSTANCE        reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    METHOD          reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    OF              reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    PARAMETER       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    PRAGMA          reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    PROPERTY        reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    QUALIFIER       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    REFERENCE       reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    RESTRICTED      reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    SCHEMA          reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    SCOPE           reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    TOSUBCLASS      reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    TOINSTANCE      reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)
    TRANSLATABLE    reduce using rule 64 (referenceDeclaration -> objectRef referenceName ; .)


state 229

    (65) referenceDeclaration -> objectRef referenceName defaultValue . ;

    ;               shift and go to state 276


state 230

    (15) classDeclaration -> CLASS className superClass { classFeatureList } ; .

    #               reduce using rule 15 (classDeclaration -> CLASS className superClass { classFeatureList } ; .)
    CLASS           reduce using rule 15 (classDeclaration -> CLASS className superClass { classFeatureList } ; .)
    QUALIFIER       reduce using rule 15 (classDeclaration -> CLASS className superClass { classFeatureList } ; .)
    INSTANCE        reduce using rule 15 (classDeclaration -> CLASS className superClass { classFeatureList } ; .)
    [               reduce using rule 15 (classDeclaration -> CLASS className superClass { classFeatureList } ; .)
    $end            reduce using rule 15 (classDeclaration -> CLASS className superClass { classFeatureList } ; .)


state 231

    (16) classDeclaration -> CLASS className alias { classFeatureList } ; .

    #               reduce using rule 16 (classDeclaration -> CLASS className alias { classFeatureList } ; .)
    CLASS           reduce using rule 16 (classDeclaration -> CLASS className alias { classFeatureList } ; .)
    QUALIFIER       reduce using rule 16 (classDeclaration -> CLASS className alias { classFeatureList } ; .)
    INSTANCE        reduce using rule 16 (classDeclaration -> CLASS className alias { classFeatureList } ; .)
    [               reduce using rule 16 (classDeclaration -> CLASS className alias { classFeatureList } ; .)
    $end            reduce using rule 16 (classDeclaration -> CLASS className alias { classFeatureList } ; .)


state 232

    (17) classDeclaration -> CLASS className alias superClass { classFeatureList } . ;

    ;               shift and go to state 277


state 233

    (18) classDeclaration -> qualifierList CLASS className { classFeatureList } ; .

    #               reduce using rule 18 (classDeclaration -> qualifierList CLASS className { classFeatureList } ; .)
    CLASS           reduce using rule 18 (classDeclaration -> qualifierList CLASS className { classFeatureList } ; .)
    QUALIFIER       reduce using rule 18 (classDeclaration -> qualifierList CLASS className { classFeatureList } ; .)
    INSTANCE        reduce using rule 18 (classDeclaration -> qualifierList CLASS className { classFeatureList } ; .)
    [               reduce using rule 18 (classDeclaration -> qualifierList CLASS className { classFeatureList } ; .)
    $end            reduce using rule 18 (classDeclaration -> qualifierList CLASS className { classFeatureList } ; .)


state 234

    (19) classDeclaration -> qualifierList CLASS className superClass { classFeatureList } . ;

    ;               shift and go to state 278


state 235

    (20) classDeclaration -> qualifierList CLASS className alias { classFeatureList } . ;

    ;               shift and go to state 279


state 236

    (21) classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList . } ;
    (23) classFeatureList -> classFeatureList . classFeature
    (30) classFeature -> . propertyDeclaration
    (31) classFeature -> . methodDeclaration
    (32) classFeature -> . referenceDeclaration
    (48) propertyDeclaration -> . propertyDeclaration_1
    (49) propertyDeclaration -> . propertyDeclaration_2
    (50) propertyDeclaration -> . propertyDeclaration_3
    (51) propertyDeclaration -> . propertyDeclaration_4
    (52) propertyDeclaration -> . propertyDeclaration_5
    (53) propertyDeclaration -> . propertyDeclaration_6
    (54) propertyDeclaration -> . propertyDeclaration_7
    (55) propertyDeclaration -> . propertyDeclaration_8
    (68) methodDeclaration -> . dataType methodName ( ) ;
    (69) methodDeclaration -> . dataType methodName ( parameterList ) ;
    (70) methodDeclaration -> . qualifierList dataType methodName ( ) ;
    (71) methodDeclaration -> . qualifierList dataType methodName ( parameterList ) ;
    (64) referenceDeclaration -> . objectRef referenceName ;
    (65) referenceDeclaration -> . objectRef referenceName defaultValue ;
    (66) referenceDeclaration -> . qualifierList objectRef referenceName ;
    (67) referenceDeclaration -> . qualifierList objectRef referenceName defaultValue ;
    (56) propertyDeclaration_1 -> . dataType propertyName ;
    (57) propertyDeclaration_2 -> . dataType propertyName defaultValue ;
    (58) propertyDeclaration_3 -> . dataType propertyName array ;
    (59) propertyDeclaration_4 -> . dataType propertyName array defaultValue ;
    (60) propertyDeclaration_5 -> . qualifierList dataType propertyName ;
    (61) propertyDeclaration_6 -> . qualifierList dataType propertyName defaultValue ;
    (62) propertyDeclaration_7 -> . qualifierList dataType propertyName array ;
    (63) propertyDeclaration_8 -> . qualifierList dataType propertyName array defaultValue ;
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    }               shift and go to state 280
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    qualifierList                  shift and go to state 151
    className                      shift and go to state 136
    classFeature                   shift and go to state 138
    propertyDeclaration            shift and go to state 139
    methodDeclaration              shift and go to state 140
    referenceDeclaration           shift and go to state 141
    propertyDeclaration_1          shift and go to state 142
    propertyDeclaration_2          shift and go to state 143
    propertyDeclaration_3          shift and go to state 144
    propertyDeclaration_4          shift and go to state 145
    propertyDeclaration_5          shift and go to state 146
    propertyDeclaration_6          shift and go to state 147
    propertyDeclaration_7          shift and go to state 148
    propertyDeclaration_8          shift and go to state 149
    dataType                       shift and go to state 150
    objectRef                      shift and go to state 152
    identifier                     shift and go to state 21

state 237

    (159) instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } . ;

    ;               shift and go to state 281


state 238

    (160) instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList . } ;
    (162) valueInitializerList -> valueInitializerList . valueInitializer
    (163) valueInitializer -> . identifier defaultValue ;
    (164) valueInitializer -> . qualifierList identifier defaultValue ;
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    }               shift and go to state 282
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    [               shift and go to state 17
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    qualifierList                  shift and go to state 174
    valueInitializer               shift and go to state 216
    identifier                     shift and go to state 173
    dataType                       shift and go to state 26

state 239

    (154) defaultFlavor -> , FLAVOR ( . flavorListWithComma )
    (155) flavorListWithComma -> . flavor
    (156) flavorListWithComma -> . flavorListWithComma , flavor
    (42) flavor -> . ENABLEOVERRIDE
    (43) flavor -> . DISABLEOVERRIDE
    (44) flavor -> . RESTRICTED
    (45) flavor -> . TOSUBCLASS
    (46) flavor -> . TOINSTANCE
    (47) flavor -> . TRANSLATABLE

    ENABLEOVERRIDE  shift and go to state 109
    DISABLEOVERRIDE shift and go to state 110
    RESTRICTED      shift and go to state 111
    TOSUBCLASS      shift and go to state 112
    TOINSTANCE      shift and go to state 113
    TRANSLATABLE    shift and go to state 114

    flavorListWithComma            shift and go to state 283
    flavor                         shift and go to state 284

state 240

    (141) scope -> , SCOPE ( metaElementList . )
    (143) metaElementList -> metaElementList . , metaElement

    )               shift and go to state 286
    ,               shift and go to state 285


state 241

    (142) metaElementList -> metaElement .

    )               reduce using rule 142 (metaElementList -> metaElement .)
    ,               reduce using rule 142 (metaElementList -> metaElement .)


state 242

    (144) metaElement -> SCHEMA .

    )               reduce using rule 144 (metaElement -> SCHEMA .)
    ,               reduce using rule 144 (metaElement -> SCHEMA .)


state 243

    (145) metaElement -> CLASS .

    )               reduce using rule 145 (metaElement -> CLASS .)
    ,               reduce using rule 145 (metaElement -> CLASS .)


state 244

    (146) metaElement -> ASSOCIATION .

    )               reduce using rule 146 (metaElement -> ASSOCIATION .)
    ,               reduce using rule 146 (metaElement -> ASSOCIATION .)


state 245

    (147) metaElement -> INDICATION .

    )               reduce using rule 147 (metaElement -> INDICATION .)
    ,               reduce using rule 147 (metaElement -> INDICATION .)


state 246

    (148) metaElement -> QUALIFIER .

    )               reduce using rule 148 (metaElement -> QUALIFIER .)
    ,               reduce using rule 148 (metaElement -> QUALIFIER .)


state 247

    (149) metaElement -> PROPERTY .

    )               reduce using rule 149 (metaElement -> PROPERTY .)
    ,               reduce using rule 149 (metaElement -> PROPERTY .)


state 248

    (150) metaElement -> REFERENCE .

    )               reduce using rule 150 (metaElement -> REFERENCE .)
    ,               reduce using rule 150 (metaElement -> REFERENCE .)


state 249

    (151) metaElement -> METHOD .

    )               reduce using rule 151 (metaElement -> METHOD .)
    ,               reduce using rule 151 (metaElement -> METHOD .)


state 250

    (152) metaElement -> PARAMETER .

    )               reduce using rule 152 (metaElement -> PARAMETER .)
    ,               reduce using rule 152 (metaElement -> PARAMETER .)


state 251

    (153) metaElement -> ANY .

    )               reduce using rule 153 (metaElement -> ANY .)
    ,               reduce using rule 153 (metaElement -> ANY .)


state 252

    (106) array -> [ integerValue ] .

    =               reduce using rule 106 (array -> [ integerValue ] .)
    ,               reduce using rule 106 (array -> [ integerValue ] .)
    ;               reduce using rule 106 (array -> [ integerValue ] .)
    )               reduce using rule 106 (array -> [ integerValue ] .)


state 253

    (157) instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .

    #               reduce using rule 157 (instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .)
    CLASS           reduce using rule 157 (instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .)
    QUALIFIER       reduce using rule 157 (instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .)
    INSTANCE        reduce using rule 157 (instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .)
    [               reduce using rule 157 (instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .)
    $end            reduce using rule 157 (instanceDeclaration -> INSTANCE OF className { valueInitializerList } ; .)


state 254

    (163) valueInitializer -> identifier defaultValue ; .

    }               reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    IDENTIFIER      reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    ANY             reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    AS              reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    CLASS           reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    FLAVOR          reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    INSTANCE        reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    METHOD          reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    OF              reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    PARAMETER       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    PRAGMA          reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    PROPERTY        reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    QUALIFIER       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    REFERENCE       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    RESTRICTED      reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    SCHEMA          reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    SCOPE           reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    TOSUBCLASS      reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    TOINSTANCE      reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    TRANSLATABLE    reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    [               reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_UINT8        reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_SINT8        reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_UINT16       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_SINT16       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_UINT32       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_SINT32       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_UINT64       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_SINT64       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_REAL32       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_REAL64       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_CHAR16       reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_STR          reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_BOOL         reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)
    DT_DATETIME     reduce using rule 163 (valueInitializer -> identifier defaultValue ; .)


state 255

    (164) valueInitializer -> qualifierList identifier defaultValue . ;

    ;               shift and go to state 287


state 256

    (158) instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } . ;

    ;               shift and go to state 288


state 257

    (96) parameter_1 -> dataType . parameterName
    (97) parameter_1 -> dataType . parameterName array
    (173) identifier -> dataType .
    (104) parameterName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    REF             reduce using rule 173 (identifier -> dataType .)
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    dataType                       shift and go to state 26
    parameterName                  shift and go to state 289
    identifier                     shift and go to state 290

state 258

    (68) methodDeclaration -> dataType methodName ( ) . ;

    ;               shift and go to state 291


state 259

    (69) methodDeclaration -> dataType methodName ( parameterList . ) ;
    (91) parameterList -> parameterList . , parameter

    )               shift and go to state 292
    ,               shift and go to state 293


state 260

    (90) parameterList -> parameter .

    )               reduce using rule 90 (parameterList -> parameter .)
    ,               reduce using rule 90 (parameterList -> parameter .)


state 261

    (92) parameter -> parameter_1 .

    )               reduce using rule 92 (parameter -> parameter_1 .)
    ,               reduce using rule 92 (parameter -> parameter_1 .)


state 262

    (93) parameter -> parameter_2 .

    )               reduce using rule 93 (parameter -> parameter_2 .)
    ,               reduce using rule 93 (parameter -> parameter_2 .)


state 263

    (94) parameter -> parameter_3 .

    )               reduce using rule 94 (parameter -> parameter_3 .)
    ,               reduce using rule 94 (parameter -> parameter_3 .)


state 264

    (95) parameter -> parameter_4 .

    )               reduce using rule 95 (parameter -> parameter_4 .)
    ,               reduce using rule 95 (parameter -> parameter_4 .)


state 265

    (98) parameter_2 -> qualifierList . dataType parameterName
    (99) parameter_2 -> qualifierList . dataType parameterName array
    (102) parameter_4 -> qualifierList . objectRef parameterName
    (103) parameter_4 -> qualifierList . objectRef parameterName array
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    dataType                       shift and go to state 294
    objectRef                      shift and go to state 295
    className                      shift and go to state 136
    identifier                     shift and go to state 21

state 266

    (100) parameter_3 -> objectRef . parameterName
    (101) parameter_3 -> objectRef . parameterName array
    (104) parameterName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    parameterName                  shift and go to state 296
    identifier                     shift and go to state 290
    dataType                       shift and go to state 26

state 267

    (57) propertyDeclaration_2 -> dataType propertyName defaultValue ; .

    }               reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_UINT8        reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_SINT8        reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_UINT16       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_SINT16       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_UINT32       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_SINT32       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_UINT64       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_SINT64       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_REAL32       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_REAL64       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_CHAR16       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_STR          reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_BOOL         reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DT_DATETIME     reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    [               reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    IDENTIFIER      reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    ANY             reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    AS              reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    CLASS           reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    FLAVOR          reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    INSTANCE        reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    METHOD          reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    OF              reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    PARAMETER       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    PRAGMA          reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    PROPERTY        reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    QUALIFIER       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    REFERENCE       reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    RESTRICTED      reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    SCHEMA          reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    SCOPE           reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    TOSUBCLASS      reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    TOINSTANCE      reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)
    TRANSLATABLE    reduce using rule 57 (propertyDeclaration_2 -> dataType propertyName defaultValue ; .)


state 268

    (58) propertyDeclaration_3 -> dataType propertyName array ; .

    }               reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_UINT8        reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_SINT8        reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_UINT16       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_SINT16       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_UINT32       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_SINT32       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_UINT64       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_SINT64       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_REAL32       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_REAL64       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_CHAR16       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_STR          reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_BOOL         reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DT_DATETIME     reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    [               reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    IDENTIFIER      reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    ANY             reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    AS              reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    CLASS           reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    DISABLEOVERRIDE reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    ENABLEOVERRIDE  reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    FLAVOR          reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    INSTANCE        reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    METHOD          reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    OF              reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    PARAMETER       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    PRAGMA          reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    PROPERTY        reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    QUALIFIER       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    REFERENCE       reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    RESTRICTED      reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    SCHEMA          reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    SCOPE           reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    TOSUBCLASS      reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    TOINSTANCE      reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)
    TRANSLATABLE    reduce using rule 58 (propertyDeclaration_3 -> dataType propertyName array ; .)


state 269

    (59) propertyDeclaration_4 -> dataType propertyName array defaultValue . ;

    ;               shift and go to state 297


state 270

    (70) methodDeclaration -> qualifierList dataType methodName ( . ) ;
    (71) methodDeclaration -> qualifierList dataType methodName ( . parameterList ) ;
    (90) parameterList -> . parameter
    (91) parameterList -> . parameterList , parameter
    (92) parameter -> . parameter_1
    (93) parameter -> . parameter_2
    (94) parameter -> . parameter_3
    (95) parameter -> . parameter_4
    (96) parameter_1 -> . dataType parameterName
    (97) parameter_1 -> . dataType parameterName array
    (98) parameter_2 -> . qualifierList dataType parameterName
    (99) parameter_2 -> . qualifierList dataType parameterName array
    (100) parameter_3 -> . objectRef parameterName
    (101) parameter_3 -> . objectRef parameterName array
    (102) parameter_4 -> . qualifierList objectRef parameterName
    (103) parameter_4 -> . qualifierList objectRef parameterName array
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    )               shift and go to state 298
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    qualifierList                  shift and go to state 265
    dataType                       shift and go to state 257
    parameterList                  shift and go to state 299
    parameter                      shift and go to state 260
    parameter_1                    shift and go to state 261
    parameter_2                    shift and go to state 262
    parameter_3                    shift and go to state 263
    parameter_4                    shift and go to state 264
    objectRef                      shift and go to state 266
    className                      shift and go to state 136
    identifier                     shift and go to state 21

state 271

    (60) propertyDeclaration_5 -> qualifierList dataType propertyName ; .

    }               reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_UINT8        reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_SINT8        reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_UINT16       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_SINT16       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_UINT32       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_SINT32       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_UINT64       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_SINT64       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_REAL32       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_REAL64       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_CHAR16       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_STR          reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_BOOL         reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DT_DATETIME     reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    [               reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    IDENTIFIER      reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    ANY             reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    AS              reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    CLASS           reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    DISABLEOVERRIDE reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    ENABLEOVERRIDE  reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    FLAVOR          reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    INSTANCE        reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    METHOD          reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    OF              reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    PARAMETER       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    PRAGMA          reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    PROPERTY        reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    QUALIFIER       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    REFERENCE       reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    RESTRICTED      reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    SCHEMA          reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    SCOPE           reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    TOSUBCLASS      reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    TOINSTANCE      reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)
    TRANSLATABLE    reduce using rule 60 (propertyDeclaration_5 -> qualifierList dataType propertyName ; .)


state 272

    (61) propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue . ;

    ;               shift and go to state 300


state 273

    (62) propertyDeclaration_7 -> qualifierList dataType propertyName array . ;
    (63) propertyDeclaration_8 -> qualifierList dataType propertyName array . defaultValue ;
    (107) defaultValue -> . = initializer

    ;               shift and go to state 301
    =               shift and go to state 170

    defaultValue                   shift and go to state 302

state 274

    (66) referenceDeclaration -> qualifierList objectRef referenceName ; .

    }               reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_UINT8        reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_SINT8        reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_UINT16       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_SINT16       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_UINT32       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_SINT32       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_UINT64       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_SINT64       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_REAL32       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_REAL64       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_CHAR16       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_STR          reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_BOOL         reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DT_DATETIME     reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    [               reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    IDENTIFIER      reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    ANY             reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    AS              reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    CLASS           reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    DISABLEOVERRIDE reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    ENABLEOVERRIDE  reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    FLAVOR          reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    INSTANCE        reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    METHOD          reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    OF              reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    PARAMETER       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    PRAGMA          reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    PROPERTY        reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    QUALIFIER       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    REFERENCE       reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    RESTRICTED      reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    SCHEMA          reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    SCOPE           reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    TOSUBCLASS      reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    TOINSTANCE      reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)
    TRANSLATABLE    reduce using rule 66 (referenceDeclaration -> qualifierList objectRef referenceName ; .)


state 275

    (67) referenceDeclaration -> qualifierList objectRef referenceName defaultValue . ;

    ;               shift and go to state 303


state 276

    (65) referenceDeclaration -> objectRef referenceName defaultValue ; .

    }               reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_UINT8        reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_SINT8        reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_UINT16       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_SINT16       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_UINT32       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_SINT32       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_UINT64       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_SINT64       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_REAL32       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_REAL64       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_CHAR16       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_STR          reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_BOOL         reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DT_DATETIME     reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    [               reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    IDENTIFIER      reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    ANY             reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    AS              reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    CLASS           reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    FLAVOR          reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    INSTANCE        reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    METHOD          reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    OF              reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    PARAMETER       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    PRAGMA          reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    PROPERTY        reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    QUALIFIER       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    REFERENCE       reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    RESTRICTED      reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    SCHEMA          reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    SCOPE           reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    TOSUBCLASS      reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    TOINSTANCE      reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)
    TRANSLATABLE    reduce using rule 65 (referenceDeclaration -> objectRef referenceName defaultValue ; .)


state 277

    (17) classDeclaration -> CLASS className alias superClass { classFeatureList } ; .

    #               reduce using rule 17 (classDeclaration -> CLASS className alias superClass { classFeatureList } ; .)
    CLASS           reduce using rule 17 (classDeclaration -> CLASS className alias superClass { classFeatureList } ; .)
    QUALIFIER       reduce using rule 17 (classDeclaration -> CLASS className alias superClass { classFeatureList } ; .)
    INSTANCE        reduce using rule 17 (classDeclaration -> CLASS className alias superClass { classFeatureList } ; .)
    [               reduce using rule 17 (classDeclaration -> CLASS className alias superClass { classFeatureList } ; .)
    $end            reduce using rule 17 (classDeclaration -> CLASS className alias superClass { classFeatureList } ; .)


state 278

    (19) classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .

    #               reduce using rule 19 (classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .)
    CLASS           reduce using rule 19 (classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .)
    QUALIFIER       reduce using rule 19 (classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .)
    INSTANCE        reduce using rule 19 (classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .)
    [               reduce using rule 19 (classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .)
    $end            reduce using rule 19 (classDeclaration -> qualifierList CLASS className superClass { classFeatureList } ; .)


state 279

    (20) classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .

    #               reduce using rule 20 (classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .)
    CLASS           reduce using rule 20 (classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .)
    QUALIFIER       reduce using rule 20 (classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .)
    INSTANCE        reduce using rule 20 (classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .)
    [               reduce using rule 20 (classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .)
    $end            reduce using rule 20 (classDeclaration -> qualifierList CLASS className alias { classFeatureList } ; .)


state 280

    (21) classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } . ;

    ;               shift and go to state 304


state 281

    (159) instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .

    #               reduce using rule 159 (instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .)
    CLASS           reduce using rule 159 (instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .)
    QUALIFIER       reduce using rule 159 (instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .)
    INSTANCE        reduce using rule 159 (instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .)
    [               reduce using rule 159 (instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .)
    $end            reduce using rule 159 (instanceDeclaration -> qualifierList INSTANCE OF className { valueInitializerList } ; .)


state 282

    (160) instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } . ;

    ;               shift and go to state 305


state 283

    (154) defaultFlavor -> , FLAVOR ( flavorListWithComma . )
    (156) flavorListWithComma -> flavorListWithComma . , flavor

    )               shift and go to state 307
    ,               shift and go to state 306


state 284

    (155) flavorListWithComma -> flavor .

    )               reduce using rule 155 (flavorListWithComma -> flavor .)
    ,               reduce using rule 155 (flavorListWithComma -> flavor .)


state 285

    (143) metaElementList -> metaElementList , . metaElement
    (144) metaElement -> . SCHEMA
    (145) metaElement -> . CLASS
    (146) metaElement -> . ASSOCIATION
    (147) metaElement -> . INDICATION
    (148) metaElement -> . QUALIFIER
    (149) metaElement -> . PROPERTY
    (150) metaElement -> . REFERENCE
    (151) metaElement -> . METHOD
    (152) metaElement -> . PARAMETER
    (153) metaElement -> . ANY

    SCHEMA          shift and go to state 242
    CLASS           shift and go to state 243
    ASSOCIATION     shift and go to state 244
    INDICATION      shift and go to state 245
    QUALIFIER       shift and go to state 246
    PROPERTY        shift and go to state 247
    REFERENCE       shift and go to state 248
    METHOD          shift and go to state 249
    PARAMETER       shift and go to state 250
    ANY             shift and go to state 251

    metaElement                    shift and go to state 308

state 286

    (141) scope -> , SCOPE ( metaElementList ) .

    ;               reduce using rule 141 (scope -> , SCOPE ( metaElementList ) .)
    ,               reduce using rule 141 (scope -> , SCOPE ( metaElementList ) .)


state 287

    (164) valueInitializer -> qualifierList identifier defaultValue ; .

    }               reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    IDENTIFIER      reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    ANY             reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    AS              reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    CLASS           reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    FLAVOR          reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    INSTANCE        reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    METHOD          reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    OF              reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    PARAMETER       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    PRAGMA          reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    PROPERTY        reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    QUALIFIER       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    REFERENCE       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    RESTRICTED      reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    SCHEMA          reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    SCOPE           reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    TOSUBCLASS      reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    TOINSTANCE      reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    TRANSLATABLE    reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    [               reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_UINT8        reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_SINT8        reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_UINT16       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_SINT16       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_UINT32       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_SINT32       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_UINT64       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_SINT64       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_REAL32       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_REAL64       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_CHAR16       reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_STR          reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_BOOL         reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)
    DT_DATETIME     reduce using rule 164 (valueInitializer -> qualifierList identifier defaultValue ; .)


state 288

    (158) instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .

    #               reduce using rule 158 (instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .)
    CLASS           reduce using rule 158 (instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .)
    QUALIFIER       reduce using rule 158 (instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .)
    INSTANCE        reduce using rule 158 (instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .)
    [               reduce using rule 158 (instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .)
    $end            reduce using rule 158 (instanceDeclaration -> INSTANCE OF className alias { valueInitializerList } ; .)


state 289

    (96) parameter_1 -> dataType parameterName .
    (97) parameter_1 -> dataType parameterName . array
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]

    )               reduce using rule 96 (parameter_1 -> dataType parameterName .)
    ,               reduce using rule 96 (parameter_1 -> dataType parameterName .)
    [               shift and go to state 169

    array                          shift and go to state 309

state 290

    (104) parameterName -> identifier .

    [               reduce using rule 104 (parameterName -> identifier .)
    )               reduce using rule 104 (parameterName -> identifier .)
    ,               reduce using rule 104 (parameterName -> identifier .)


state 291

    (68) methodDeclaration -> dataType methodName ( ) ; .

    }               reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_UINT8        reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_SINT8        reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_UINT16       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_SINT16       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_UINT32       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_SINT32       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_UINT64       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_SINT64       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_REAL32       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_REAL64       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_CHAR16       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_STR          reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_BOOL         reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DT_DATETIME     reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    [               reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    IDENTIFIER      reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    ANY             reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    AS              reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    CLASS           reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    DISABLEOVERRIDE reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    ENABLEOVERRIDE  reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    FLAVOR          reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    INSTANCE        reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    METHOD          reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    OF              reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    PARAMETER       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    PRAGMA          reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    PROPERTY        reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    QUALIFIER       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    REFERENCE       reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    RESTRICTED      reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    SCHEMA          reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    SCOPE           reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    TOSUBCLASS      reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    TOINSTANCE      reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)
    TRANSLATABLE    reduce using rule 68 (methodDeclaration -> dataType methodName ( ) ; .)


state 292

    (69) methodDeclaration -> dataType methodName ( parameterList ) . ;

    ;               shift and go to state 310


state 293

    (91) parameterList -> parameterList , . parameter
    (92) parameter -> . parameter_1
    (93) parameter -> . parameter_2
    (94) parameter -> . parameter_3
    (95) parameter -> . parameter_4
    (96) parameter_1 -> . dataType parameterName
    (97) parameter_1 -> . dataType parameterName array
    (98) parameter_2 -> . qualifierList dataType parameterName
    (99) parameter_2 -> . qualifierList dataType parameterName array
    (100) parameter_3 -> . objectRef parameterName
    (101) parameter_3 -> . objectRef parameterName array
    (102) parameter_4 -> . qualifierList objectRef parameterName
    (103) parameter_4 -> . qualifierList objectRef parameterName array
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME
    (33) qualifierList -> . [ qualifier qualifierListEmpty ]
    (89) objectRef -> . className REF
    (26) className -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE

    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56
    [               shift and go to state 17
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42

    parameter                      shift and go to state 311
    parameter_1                    shift and go to state 261
    parameter_2                    shift and go to state 262
    parameter_3                    shift and go to state 263
    parameter_4                    shift and go to state 264
    dataType                       shift and go to state 257
    qualifierList                  shift and go to state 265
    objectRef                      shift and go to state 266
    className                      shift and go to state 136
    identifier                     shift and go to state 21

state 294

    (98) parameter_2 -> qualifierList dataType . parameterName
    (99) parameter_2 -> qualifierList dataType . parameterName array
    (173) identifier -> dataType .
    (104) parameterName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    REF             reduce using rule 173 (identifier -> dataType .)
    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    dataType                       shift and go to state 26
    parameterName                  shift and go to state 312
    identifier                     shift and go to state 290

state 295

    (102) parameter_4 -> qualifierList objectRef . parameterName
    (103) parameter_4 -> qualifierList objectRef . parameterName array
    (104) parameterName -> . identifier
    (168) identifier -> . IDENTIFIER
    (169) identifier -> . ANY
    (170) identifier -> . AS
    (171) identifier -> . CLASS
    (172) identifier -> . DISABLEOVERRIDE
    (173) identifier -> . dataType
    (174) identifier -> . ENABLEOVERRIDE
    (175) identifier -> . FLAVOR
    (176) identifier -> . INSTANCE
    (177) identifier -> . METHOD
    (178) identifier -> . OF
    (179) identifier -> . PARAMETER
    (180) identifier -> . PRAGMA
    (181) identifier -> . PROPERTY
    (182) identifier -> . QUALIFIER
    (183) identifier -> . REFERENCE
    (184) identifier -> . RESTRICTED
    (185) identifier -> . SCHEMA
    (186) identifier -> . SCOPE
    (187) identifier -> . TOSUBCLASS
    (188) identifier -> . TOINSTANCE
    (189) identifier -> . TRANSLATABLE
    (75) dataType -> . DT_UINT8
    (76) dataType -> . DT_SINT8
    (77) dataType -> . DT_UINT16
    (78) dataType -> . DT_SINT16
    (79) dataType -> . DT_UINT32
    (80) dataType -> . DT_SINT32
    (81) dataType -> . DT_UINT64
    (82) dataType -> . DT_SINT64
    (83) dataType -> . DT_REAL32
    (84) dataType -> . DT_REAL64
    (85) dataType -> . DT_CHAR16
    (86) dataType -> . DT_STR
    (87) dataType -> . DT_BOOL
    (88) dataType -> . DT_DATETIME

    IDENTIFIER      shift and go to state 22
    ANY             shift and go to state 23
    AS              shift and go to state 24
    CLASS           shift and go to state 19
    DISABLEOVERRIDE shift and go to state 25
    ENABLEOVERRIDE  shift and go to state 27
    FLAVOR          shift and go to state 28
    INSTANCE        shift and go to state 29
    METHOD          shift and go to state 30
    OF              shift and go to state 31
    PARAMETER       shift and go to state 32
    PRAGMA          shift and go to state 33
    PROPERTY        shift and go to state 34
    QUALIFIER       shift and go to state 35
    REFERENCE       shift and go to state 36
    RESTRICTED      shift and go to state 37
    SCHEMA          shift and go to state 38
    SCOPE           shift and go to state 39
    TOSUBCLASS      shift and go to state 40
    TOINSTANCE      shift and go to state 41
    TRANSLATABLE    shift and go to state 42
    DT_UINT8        shift and go to state 43
    DT_SINT8        shift and go to state 44
    DT_UINT16       shift and go to state 45
    DT_SINT16       shift and go to state 46
    DT_UINT32       shift and go to state 47
    DT_SINT32       shift and go to state 48
    DT_UINT64       shift and go to state 49
    DT_SINT64       shift and go to state 50
    DT_REAL32       shift and go to state 51
    DT_REAL64       shift and go to state 52
    DT_CHAR16       shift and go to state 53
    DT_STR          shift and go to state 54
    DT_BOOL         shift and go to state 55
    DT_DATETIME     shift and go to state 56

    parameterName                  shift and go to state 313
    identifier                     shift and go to state 290
    dataType                       shift and go to state 26

state 296

    (100) parameter_3 -> objectRef parameterName .
    (101) parameter_3 -> objectRef parameterName . array
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]

    )               reduce using rule 100 (parameter_3 -> objectRef parameterName .)
    ,               reduce using rule 100 (parameter_3 -> objectRef parameterName .)
    [               shift and go to state 169

    array                          shift and go to state 314

state 297

    (59) propertyDeclaration_4 -> dataType propertyName array defaultValue ; .

    }               reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_UINT8        reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_SINT8        reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_UINT16       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_SINT16       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_UINT32       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_SINT32       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_UINT64       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_SINT64       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_REAL32       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_REAL64       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_CHAR16       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_STR          reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_BOOL         reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DT_DATETIME     reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    [               reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    IDENTIFIER      reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    ANY             reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    AS              reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    CLASS           reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    FLAVOR          reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    INSTANCE        reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    METHOD          reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    OF              reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    PARAMETER       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    PRAGMA          reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    PROPERTY        reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    QUALIFIER       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    REFERENCE       reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    RESTRICTED      reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    SCHEMA          reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    SCOPE           reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    TOSUBCLASS      reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    TOINSTANCE      reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)
    TRANSLATABLE    reduce using rule 59 (propertyDeclaration_4 -> dataType propertyName array defaultValue ; .)


state 298

    (70) methodDeclaration -> qualifierList dataType methodName ( ) . ;

    ;               shift and go to state 315


state 299

    (71) methodDeclaration -> qualifierList dataType methodName ( parameterList . ) ;
    (91) parameterList -> parameterList . , parameter

    )               shift and go to state 316
    ,               shift and go to state 293


state 300

    (61) propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .

    }               reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_UINT8        reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_SINT8        reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_UINT16       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_SINT16       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_UINT32       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_SINT32       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_UINT64       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_SINT64       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_REAL32       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_REAL64       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_CHAR16       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_STR          reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_BOOL         reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DT_DATETIME     reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    [               reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    IDENTIFIER      reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    ANY             reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    AS              reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    CLASS           reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    FLAVOR          reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    INSTANCE        reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    METHOD          reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    OF              reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    PARAMETER       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    PRAGMA          reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    PROPERTY        reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    QUALIFIER       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    REFERENCE       reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    RESTRICTED      reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    SCHEMA          reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    SCOPE           reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    TOSUBCLASS      reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    TOINSTANCE      reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)
    TRANSLATABLE    reduce using rule 61 (propertyDeclaration_6 -> qualifierList dataType propertyName defaultValue ; .)


state 301

    (62) propertyDeclaration_7 -> qualifierList dataType propertyName array ; .

    }               reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_UINT8        reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_SINT8        reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_UINT16       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_SINT16       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_UINT32       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_SINT32       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_UINT64       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_SINT64       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_REAL32       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_REAL64       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_CHAR16       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_STR          reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_BOOL         reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DT_DATETIME     reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    [               reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    IDENTIFIER      reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    ANY             reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    AS              reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    CLASS           reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    DISABLEOVERRIDE reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    ENABLEOVERRIDE  reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    FLAVOR          reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    INSTANCE        reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    METHOD          reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    OF              reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    PARAMETER       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    PRAGMA          reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    PROPERTY        reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    QUALIFIER       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    REFERENCE       reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    RESTRICTED      reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    SCHEMA          reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    SCOPE           reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    TOSUBCLASS      reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    TOINSTANCE      reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)
    TRANSLATABLE    reduce using rule 62 (propertyDeclaration_7 -> qualifierList dataType propertyName array ; .)


state 302

    (63) propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue . ;

    ;               shift and go to state 317


state 303

    (67) referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .

    }               reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_UINT8        reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_SINT8        reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_UINT16       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_SINT16       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_UINT32       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_SINT32       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_UINT64       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_SINT64       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_REAL32       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_REAL64       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_CHAR16       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_STR          reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_BOOL         reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DT_DATETIME     reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    [               reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    IDENTIFIER      reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    ANY             reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    AS              reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    CLASS           reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    FLAVOR          reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    INSTANCE        reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    METHOD          reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    OF              reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    PARAMETER       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    PRAGMA          reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    PROPERTY        reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    QUALIFIER       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    REFERENCE       reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    RESTRICTED      reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    SCHEMA          reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    SCOPE           reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    TOSUBCLASS      reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    TOINSTANCE      reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)
    TRANSLATABLE    reduce using rule 67 (referenceDeclaration -> qualifierList objectRef referenceName defaultValue ; .)


state 304

    (21) classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .

    #               reduce using rule 21 (classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .)
    CLASS           reduce using rule 21 (classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .)
    QUALIFIER       reduce using rule 21 (classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .)
    INSTANCE        reduce using rule 21 (classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .)
    [               reduce using rule 21 (classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .)
    $end            reduce using rule 21 (classDeclaration -> qualifierList CLASS className alias superClass { classFeatureList } ; .)


state 305

    (160) instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .

    #               reduce using rule 160 (instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .)
    CLASS           reduce using rule 160 (instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .)
    QUALIFIER       reduce using rule 160 (instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .)
    INSTANCE        reduce using rule 160 (instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .)
    [               reduce using rule 160 (instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .)
    $end            reduce using rule 160 (instanceDeclaration -> qualifierList INSTANCE OF className alias { valueInitializerList } ; .)


state 306

    (156) flavorListWithComma -> flavorListWithComma , . flavor
    (42) flavor -> . ENABLEOVERRIDE
    (43) flavor -> . DISABLEOVERRIDE
    (44) flavor -> . RESTRICTED
    (45) flavor -> . TOSUBCLASS
    (46) flavor -> . TOINSTANCE
    (47) flavor -> . TRANSLATABLE

    ENABLEOVERRIDE  shift and go to state 109
    DISABLEOVERRIDE shift and go to state 110
    RESTRICTED      shift and go to state 111
    TOSUBCLASS      shift and go to state 112
    TOINSTANCE      shift and go to state 113
    TRANSLATABLE    shift and go to state 114

    flavor                         shift and go to state 318

state 307

    (154) defaultFlavor -> , FLAVOR ( flavorListWithComma ) .

    ;               reduce using rule 154 (defaultFlavor -> , FLAVOR ( flavorListWithComma ) .)


state 308

    (143) metaElementList -> metaElementList , metaElement .

    )               reduce using rule 143 (metaElementList -> metaElementList , metaElement .)
    ,               reduce using rule 143 (metaElementList -> metaElementList , metaElement .)


state 309

    (97) parameter_1 -> dataType parameterName array .

    )               reduce using rule 97 (parameter_1 -> dataType parameterName array .)
    ,               reduce using rule 97 (parameter_1 -> dataType parameterName array .)


state 310

    (69) methodDeclaration -> dataType methodName ( parameterList ) ; .

    }               reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_UINT8        reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_SINT8        reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_UINT16       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_SINT16       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_UINT32       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_SINT32       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_UINT64       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_SINT64       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_REAL32       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_REAL64       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_CHAR16       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_STR          reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_BOOL         reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DT_DATETIME     reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    [               reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    IDENTIFIER      reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    ANY             reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    AS              reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    CLASS           reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    DISABLEOVERRIDE reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    ENABLEOVERRIDE  reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    FLAVOR          reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    INSTANCE        reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    METHOD          reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    OF              reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    PARAMETER       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    PRAGMA          reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    PROPERTY        reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    QUALIFIER       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    REFERENCE       reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    RESTRICTED      reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    SCHEMA          reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    SCOPE           reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    TOSUBCLASS      reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    TOINSTANCE      reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)
    TRANSLATABLE    reduce using rule 69 (methodDeclaration -> dataType methodName ( parameterList ) ; .)


state 311

    (91) parameterList -> parameterList , parameter .

    )               reduce using rule 91 (parameterList -> parameterList , parameter .)
    ,               reduce using rule 91 (parameterList -> parameterList , parameter .)


state 312

    (98) parameter_2 -> qualifierList dataType parameterName .
    (99) parameter_2 -> qualifierList dataType parameterName . array
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]

    )               reduce using rule 98 (parameter_2 -> qualifierList dataType parameterName .)
    ,               reduce using rule 98 (parameter_2 -> qualifierList dataType parameterName .)
    [               shift and go to state 169

    array                          shift and go to state 319

state 313

    (102) parameter_4 -> qualifierList objectRef parameterName .
    (103) parameter_4 -> qualifierList objectRef parameterName . array
    (105) array -> . [ ]
    (106) array -> . [ integerValue ]

    )               reduce using rule 102 (parameter_4 -> qualifierList objectRef parameterName .)
    ,               reduce using rule 102 (parameter_4 -> qualifierList objectRef parameterName .)
    [               shift and go to state 169

    array                          shift and go to state 320

state 314

    (101) parameter_3 -> objectRef parameterName array .

    )               reduce using rule 101 (parameter_3 -> objectRef parameterName array .)
    ,               reduce using rule 101 (parameter_3 -> objectRef parameterName array .)


state 315

    (70) methodDeclaration -> qualifierList dataType methodName ( ) ; .

    }               reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_UINT8        reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_SINT8        reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_UINT16       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_SINT16       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_UINT32       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_SINT32       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_UINT64       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_SINT64       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_REAL32       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_REAL64       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_CHAR16       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_STR          reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_BOOL         reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DT_DATETIME     reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    [               reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    IDENTIFIER      reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    ANY             reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    AS              reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    CLASS           reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    DISABLEOVERRIDE reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    ENABLEOVERRIDE  reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    FLAVOR          reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    INSTANCE        reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    METHOD          reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    OF              reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    PARAMETER       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    PRAGMA          reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    PROPERTY        reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    QUALIFIER       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    REFERENCE       reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    RESTRICTED      reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    SCHEMA          reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    SCOPE           reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    TOSUBCLASS      reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    TOINSTANCE      reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)
    TRANSLATABLE    reduce using rule 70 (methodDeclaration -> qualifierList dataType methodName ( ) ; .)


state 316

    (71) methodDeclaration -> qualifierList dataType methodName ( parameterList ) . ;

    ;               shift and go to state 321


state 317

    (63) propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .

    }               reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_UINT8        reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_SINT8        reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_UINT16       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_SINT16       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_UINT32       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_SINT32       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_UINT64       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_SINT64       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_REAL32       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_REAL64       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_CHAR16       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_STR          reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_BOOL         reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DT_DATETIME     reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    [               reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    IDENTIFIER      reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    ANY             reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    AS              reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    CLASS           reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    DISABLEOVERRIDE reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    ENABLEOVERRIDE  reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    FLAVOR          reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    INSTANCE        reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    METHOD          reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    OF              reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    PARAMETER       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    PRAGMA          reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    PROPERTY        reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    QUALIFIER       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    REFERENCE       reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    RESTRICTED      reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    SCHEMA          reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    SCOPE           reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    TOSUBCLASS      reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    TOINSTANCE      reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)
    TRANSLATABLE    reduce using rule 63 (propertyDeclaration_8 -> qualifierList dataType propertyName array defaultValue ; .)


state 318

    (156) flavorListWithComma -> flavorListWithComma , flavor .

    )               reduce using rule 156 (flavorListWithComma -> flavorListWithComma , flavor .)
    ,               reduce using rule 156 (flavorListWithComma -> flavorListWithComma , flavor .)


state 319

    (99) parameter_2 -> qualifierList dataType parameterName array .

    )               reduce using rule 99 (parameter_2 -> qualifierList dataType parameterName array .)
    ,               reduce using rule 99 (parameter_2 -> qualifierList dataType parameterName array .)


state 320

    (103) parameter_4 -> qualifierList objectRef parameterName array .

    )               reduce using rule 103 (parameter_4 -> qualifierList objectRef parameterName array .)
    ,               reduce using rule 103 (parameter_4 -> qualifierList objectRef parameterName array .)


state 321

    (71) methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .

    }               reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_UINT8        reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_SINT8        reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_UINT16       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_SINT16       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_UINT32       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_SINT32       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_UINT64       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_SINT64       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_REAL32       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_REAL64       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_CHAR16       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_STR          reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_BOOL         reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DT_DATETIME     reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    [               reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    IDENTIFIER      reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    ANY             reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    AS              reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    CLASS           reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    DISABLEOVERRIDE reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    ENABLEOVERRIDE  reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    FLAVOR          reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    INSTANCE        reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    METHOD          reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    OF              reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    PARAMETER       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    PRAGMA          reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    PROPERTY        reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    QUALIFIER       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    REFERENCE       reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    RESTRICTED      reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    SCHEMA          reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    SCOPE           reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    TOSUBCLASS      reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    TOINSTANCE      reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)
    TRANSLATABLE    reduce using rule 71 (methodDeclaration -> qualifierList dataType methodName ( parameterList ) ; .)

lex: tokens   = ['ANY', 'AS', 'ASSOCIATION', 'CLASS', 'DISABLEOVERRIDE', 'DT_BOOL', 'DT_CHAR16', 'DT_DATETIME', 'PRAGMA', 'DT_REAL32', 'DT_REAL64', 'DT_SINT16', 'DT_SINT32', 'DT_SINT64', 'DT_SINT8', 'DT_STR', 'DT_UINT16', 'DT_UINT32', 'DT_UINT64', 'DT_UINT8', 'ENABLEOVERRIDE', 'FALSE', 'FLAVOR', 'INDICATION', 'INSTANCE', 'METHOD', 'NULL', 'OF', 'PARAMETER', 'PROPERTY', 'QUALIFIER', 'REF', 'REFERENCE', 'RESTRICTED', 'SCHEMA', 'SCOPE', 'TOSUBCLASS', 'TOINSTANCE', 'TRANSLATABLE', 'TRUE', 'IDENTIFIER', 'stringValue', 'floatValue', 'charValue', 'binaryValue', 'octalValue', 'decimalValue', 'hexValue']
lex: literals = '#(){};[],$:='
lex: states   = {'INITIAL': 'inclusive'}
lex: Adding rule t_COMMENT -> '//.*' (state 'INITIAL')
lex: Adding rule t_MCOMMENT -> '/\*(.|\n)*?\*/' (state 'INITIAL')
lex: Adding rule t_floatValue -> '[+-]?[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?' (state 'INITIAL')
lex: Adding rule t_hexValue -> '[+-]?0[xX][0-9a-fA-F]+' (state 'INITIAL')
lex: Adding rule t_binaryValue -> '[+-]?[0-9]+[bB]' (state 'INITIAL')
lex: Adding rule t_octalValue -> '[+-]?0[0-9]+' (state 'INITIAL')
lex: Adding rule t_decimalValue -> '[+-]?([1-9][0-9]*|0)' (state 'INITIAL')
lex: Adding rule t_charValue -> ''([^'\\\n\r]|([\\](([bfnrt'"\\])|([xX][0-9a-fA-F]{1,4}))))'' (state 'INITIAL')
lex: Adding rule t_stringValue -> '"([^"\\\n\r]|([\\](([bfnrt'"\\])|([xX][0-9a-fA-F]{1,4}))))*"' (state 'INITIAL')
lex: Adding rule t_IDENTIFIER -> '([a-zA-Z_]|(([\xC2-\xDF][\x80-\xBF])|(\xE0[\xA0-\xBF][\x80-\xBF])|([\xE1-\xEC][\x80-\xBF][\x80-\xBF])|(\xED[\x80-\x9F][\x80-\xBF])|([\xEE-\xEF][\x80-\xBF][\x80-\xBF])|(\xF0[\x90-\xBF][\x80-\xBF][\x80-\xBF])|([\xF1-\xF3][\x80-\xBF][\x80-\xBF][\x80-\xBF])|(\xF4[\x80-\x8F][\x80-\xBF][\x80-\xBF])))([0-9a-zA-Z_]|(([\xC2-\xDF][\x80-\xBF])|(\xE0[\xA0-\xBF][\x80-\xBF])|([\xE1-\xEC][\x80-\xBF][\x80-\xBF])|(\xED[\x80-\x9F][\x80-\xBF])|([\xEE-\xEF][\x80-\xBF][\x80-\xBF])|(\xF0[\x90-\xBF][\x80-\xBF][\x80-\xBF])|([\xF1-\xF3][\x80-\xBF][\x80-\xBF][\x80-\xBF])|(\xF4[\x80-\x8F][\x80-\xBF][\x80-\xBF])))*' (state 'INITIAL')
lex: Adding rule t_newline -> '\n+' (state 'INITIAL')
lex: ==== MASTER REGEXS FOLLOW ====
lex: state 'INITIAL' : regex[0] = '(?P<t_COMMENT>//.*)|(?P<t_MCOMMENT>/\*(.|\n)*?\*/)|(?P<t_floatValue>[+-]?[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?)|(?P<t_hexValue>[+-]?0[xX][0-9a-fA-F]+)|(?P<t_binaryValue>[+-]?[0-9]+[bB])|(?P<t_octalValue>[+-]?0[0-9]+)|(?P<t_decimalValue>[+-]?([1-9][0-9]*|0))|(?P<t_charValue>'([^'\\\n\r]|([\\](([bfnrt'"\\])|([xX][0-9a-fA-F]{1,4}))))')|(?P<t_stringValue>"([^"\\\n\r]|([\\](([bfnrt'"\\])|([xX][0-9a-fA-F]{1,4}))))*")|(?P<t_IDENTIFIER>([a-zA-Z_]|(([\xC2-\xDF][\x80-\xBF])|(\xE0[\xA0-\xBF][\x80-\xBF])|([\xE1-\xEC][\x80-\xBF][\x80-\xBF])|(\xED[\x80-\x9F][\x80-\xBF])|([\xEE-\xEF][\x80-\xBF][\x80-\xBF])|(\xF0[\x90-\xBF][\x80-\xBF][\x80-\xBF])|([\xF1-\xF3][\x80-\xBF][\x80-\xBF][\x80-\xBF])|(\xF4[\x80-\x8F][\x80-\xBF][\x80-\xBF])))([0-9a-zA-Z_]|(([\xC2-\xDF][\x80-\xBF])|(\xE0[\xA0-\xBF][\x80-\xBF])|([\xE1-\xEC][\x80-\xBF][\x80-\xBF])|(\xED[\x80-\x9F][\x80-\xBF])|([\xEE-\xEF][\x80-\xBF][\x80-\xBF])|(\xF0[\x90-\xBF][\x80-\xBF][\x80-\xBF])|([\xF1-\xF3][\x80-\xBF][\x80-\xBF][\x80-\xBF])|(\xF4[\x80-\x8F][\x80-\xBF][\x80-\xBF])))*)|(?P<t_newline>\n+)'
Compiling file './test.mof'
Setting qualifier 'Association'
Setting qualifier 'Description'
Creating class 'root/cimv2':'TST_Person'
Created class 'root/cimv2':'TST_Person'
Creating class 'root/cimv2':'TST_Lineage'
Created class 'root/cimv2':'TST_Lineage'
