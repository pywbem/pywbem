# This GitHub workflow will setup and run various kinds of tests with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    strategy:
      fail-fast: false
      max-parallel: 20
      # # The matrix for the all-environment pull request:
      # matrix:
      #   os: [ubuntu-latest, macos-latest, windows-latest]
      #   python-version: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9]
      #   package_level: [minimum, latest]
      #   exclude:
      #   - os: macos-latest
      #     python-version: 3.4
      #     package_level: minimum
      #   - os: macos-latest
      #     python-version: 3.4
      #     package_level: latest
      # The matrix for normal pull requests:
      matrix:
        os: [ubuntu-latest]
        python-version: [2.7, 3.4, 3.9]
        package_level: [minimum, latest]
        # include:
        # - os: macos-latest
        #   python-version: 3.9
        #   package_level: latest
        # - os: windows-latest
        #   python-version: 3.9
        #   package_level: latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display initial Python packages
      run: |
        echo "Installed Python packages:"
        pip list
    - name: Display platform and env vars
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make platform env
    - name: Install the package and its dependents
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make install
        echo "Installed Python packages:"
        pip list
    - name: Development setup
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make develop
        echo "Installed Python packages:"
        pip list
    - name: Run build
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make build
    - name: Run builddoc
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make builddoc
    - name: Run check
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make check
    - name: Run pylint
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make pylint
    - name: Run test
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make test
        find . -name "*coverage*"
    # - name: Post coverage result to coveralls.io
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.github_token }}
    #     COVERALLS_FLAG_NAME: test1
    #     COVERALLS_PARALLEL: true
    #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    #   run: |
    #     coveralls
    - name: Post coverage result to coveralls.io
      uses: AndreMiras/coveralls-python-action@develop
      with:
        github-token: ${{ secrets.github_token }}
        parallel: true
    - name: Run installtest
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make installtest
    - name: Run leaktest
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make leaktest
    - name: Run resourcetest
      env:
        PACKAGE_LEVEL: ${{ matrix.package_level }}
      run: |
        make resourcetest

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    # - name: Post finish to coveralls.io
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     COVERALLS_FLAG_NAME: test1
    #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    #   run: |
    #     coveralls --finish
    # - name: Post finish to coveralls.io
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ secrets.github_token }}
    #     parallel-finished: true
    - name: Post finish to coveralls.io
      uses: AndreMiras/coveralls-python-action@develop
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
